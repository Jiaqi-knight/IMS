(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[    189062,       4665]*)
(*NotebookOutlinePosition[    193206,       4795]*)
(*  CellTagsIndexPosition[    192322,       4766]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
  StyleBox["Supplementary Help Browser for\nMathematica Graphics",
    TextAlignment->Center,
    AutoItalicWords->{},
    FontSize->24],
  StyleBox["\nBy: Ted Ersek    ",
    FontSize->10],
  ButtonBox["ted.ersek@navy.mil",
    ButtonData:>{
      URL[ "mailto:ted.ersek@navy.mil"], None},
    ButtonStyle->"Hyperlink"]
}], "Title",
  FontSize->12,
  Background->RGBColor[1, 0.975998, 0.949996]],

Cell[CellGroupData[{

Cell["New or Revised Sections", "Section",
  CellFrame->False],

Cell["New as of ", "Miscellaneous Section",
  CellFrame->False],

Cell[TextData[{
  ButtonBox["ColorFunctionScaling",
    ButtonData:>"ColorFunctionScaling",
    ButtonStyle->"Hyperlink"],
  "\n",
  ButtonBox["Converting between graphics types",
    ButtonData:>"Converting_Graphics",
    ButtonStyle->"Hyperlink"],
  "\n",
  ButtonBox["DisplayString",
    ButtonData:>"DisplayString",
    ButtonStyle->"Hyperlink"],
  "\n",
  ButtonBox["HiddenSurface",
    ButtonData:>"HiddenSurface",
    ButtonStyle->"Hyperlink"],
  "\n",
  ButtonBox["ListPlot3D, ListDensityPlot, and ListContourPlot",
    ButtonData:>"ListPlot3D",
    ButtonStyle->"Hyperlink"],
  "\n",
  ButtonBox["MeshRange",
    ButtonData:>"MeshRange",
    ButtonStyle->"Hyperlink"],
  "\n",
  ButtonBox["Plot3Matrix",
    ButtonData:>"Plot3Matrix",
    ButtonStyle->"Hyperlink"],
  "\n",
  ButtonBox["PolygonIntersections",
    ButtonData:>"PolygonIntersections",
    ButtonStyle->"Hyperlink"],
  "\n",
  ButtonBox["Raster",
    ButtonData:>"Raster",
    ButtonStyle->"Hyperlink"],
  "\n",
  ButtonBox["Rectangle",
    ButtonData:>"Rectangle",
    ButtonStyle->"Hyperlink"],
  "\n",
  ButtonBox["Shading",
    ButtonData:>"Shading",
    ButtonStyle->"Hyperlink"],
  "\n",
  ButtonBox["SphericalRegion",
    ButtonData:>"SphericalRegion",
    ButtonStyle->"Hyperlink"],
  "\n",
  ButtonBox["ViewCenter, ViewPoint, ViewVertical",
    ButtonData:>"ViewOptions",
    ButtonStyle->"Hyperlink"]
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["AmbientLight", "Section",
  CellFrame->{{0, 0}, {0, 4}}],

Cell[TextData[{
  "Ambient light is an option for SurfaceGraphics and Graphics3D.  The \
default setting of this option is (",
  Cell[BoxData[
      \(TraditionalForm\`AmbientLight \[Rule] GrayLevel[0]\)]],
  " ) which produces no ambient light.  The setting of AmbientLight must be a \
Hue, GrayLevel or RGBColor directive. The setting specifies that a certain \
color of lighting should be illuminating the graphics from every direction. \
Consider the next example where the cube has a green light source from above, \
and a blue light source from the right, and red ambient light.  Here the \
ambient light simulates red lighting all over the cube. The green light \
source combines with the red ambient light to make the top of the cube \
yellow.  Also the blue light source combines with the red ambient light to \
make the right side purple."
}], "Text"],

Cell[BoxData[{
    \(\(\(sources = {{{0, 1, 0}, RGBColor[0, 0.9, 0]}, {{1, 0, 0}, 
            RGBColor[0, 0, 0.75]}};\)\(\[IndentingNewLine]\)
    \)\), "\n", 
    \(\(Show[
        Graphics3D[{Cuboid[{1, 1, 1}]}, Boxed \[Rule] False, 
          ViewPoint \[Rule] {2.4, 0.6, 
              0.6}, \[IndentingNewLine]LightSources \[Rule] sources, 
          AmbientLight \[Rule] RGBColor[1, 0, 0]]];\)\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["AspectRatio", "Section"],

Cell[TextData[{
  "AspectRatio is an option for Show, Plot and other graphic functions.  This \
discussion is paraphrased from examples provided by Dave Park.  If \
AspectRatio is set to a number it specifies the height to width ratio of the \
resulting graphic.  If the AspectRatio is set to Automatic ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " sets the width and height so that objects will not be distorted.  Hence \
the next cell draws a circle so it looks like a circle."
}], "Text"],

Cell[BoxData[{
    RowBox[{
      RowBox[{"circ", "=", 
        RowBox[{"Graphics", "[", 
          RowBox[{\({Circle[{2, 2}, 3]}\), ",", "\[IndentingNewLine]", 
            StyleBox[\(AspectRatio \[Rule] Automatic\),
              FontColor->RGBColor[0.8, 0.2, 0.2]], 
            ",", \(PlotRange \[Rule] {{\(-10\), 10}, {\(-10\), 10}}\), 
            ",", \(Background \[Rule] RGBColor[0.982, 0.96, 0.93]\), 
            ",", \({Axes \[Rule] True}\)}], "\[IndentingNewLine]", "]"}]}], 
      ";"}], "\[IndentingNewLine]", \(Show[circ];\)}], "Input",
  GeneratedCell->False],

Cell["\<\
In the next cell the AspectRatio is 1/2.  The graphic is not only half as \
high as it is wide, but the scales along the axes are now also different, and \
the numbers are packed more closely together in the vertical direction.  Also \
the circle no longer looks like a circle because of this change of scale.\
\>", "Text"],

Cell[BoxData[
    RowBox[{
      RowBox[{"Show", "[", 
        RowBox[{"circ", ",", 
          StyleBox[\(AspectRatio \[Rule] 1\/2\),
            FontColor->RGBColor[0.8, 0.2, 0.2]]}], "]"}], ";"}]], "Input",
  GeneratedCell->False],

Cell["\<\
In the next cell the graphic is twice as high as it is wide, and the scale is \
more compressed in the horizontal direction. In fact, some of the numbers \
overlap, but you can click on the graphic and drag it to a larger size to \
make it look better.  In this case the circle has been stretched vertically.  \
Of course the setting need not be written as a rational number.  You could \
just as well use AspectRatio\[Rule]2.\
\>", "Text"],

Cell[BoxData[
    RowBox[{
      RowBox[{"Show", "[", 
        RowBox[{"circ", ",", 
          StyleBox[\(AspectRatio \[Rule] 2\/1\),
            FontColor->RGBColor[0.8, 0.2, 0.2]]}], "]"}], ";"}]], "Input",
  GeneratedCell->False],

Cell["\<\
The first cell below next cell makes a graphic where the height and width are \
equal.  This looks very much like the first plot.  However the circle might \
not look like a circle if a different PlotRange was used as in the second \
cell below.  The second cell below makes a square graphic, but the circle is \
stretched because of the PlotRange specified.\
\>", "Text"],

Cell[BoxData[
    RowBox[{
      RowBox[{"Show", "[", 
        RowBox[{"circ", ",", 
          StyleBox[\(AspectRatio \[Rule] 1\),
            FontColor->RGBColor[0.8, 0.2, 0.2]]}], "]"}], ";"}]], "Input",
  GeneratedCell->False],

Cell[BoxData[
    RowBox[{
      RowBox[{"Show", "[", 
        RowBox[{"circ", ",", 
          StyleBox[\(AspectRatio \[Rule] 1\),
            FontColor->RGBColor[0.808606, 0.265629, 0.187503]], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{\({\(-10\), 10}\), ",", 
                StyleBox[\({\(-5\), 5}\),
                  FontColor->RGBColor[0.8, 0.2, 0.2]]}], "}"}]}]}], "]"}], 
      ";"}]], "Input",
  GeneratedCell->False],

Cell["\<\
Setting AspectRatio to Automatic will always make the scales along the two \
axes the same and adjusts the length to width ratio as required.  Using \
Automatic for AspectRatio assures that figures like circles and squares will \
not be distorted.  On the other hand, setting AspectRatio to a number causes \
the height to width ratio of the graphic the have the specified value.\
\>", "Text"],

Cell[BoxData[
    RowBox[{
      RowBox[{"Show", "[", 
        RowBox[{"circ", ",", 
          StyleBox[\(AspectRatio \[Rule] Automatic\),
            FontColor->RGBColor[0.808606, 0.265629, 0.187503]], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{\({\(-10\), 10}\), ",", 
                StyleBox[\({\(-5\), 5}\),
                  FontColor->RGBColor[0.8, 0.2, 0.2]]}], "}"}]}]}], "]"}], 
      ";"}]], "Input",
  GeneratedCell->False],

Cell["\<\
If you are making geometrical diagrams you will probably want to set \
AspectRatio to Automatic. If you are plotting an equation you will more often \
want to set AspectRatio to a number. If the range of y was 1000 times the \
range of x then it just wouldn't work to use Automatic. If the plot was one \
inch wide, it would be 1000 inches high!\
\>", "Text"],

Cell[TextData[{
  "In ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " the default setting of AspectRatio is usually 1/GoldenRatio. The Golden \
Ratio was a number determined by the ancient Greeks to give the most pleasing \
proportion for a rectangle.  It is an interesting mathematical number in \
itself.  Here is a plot using the Golden Ratio."
}], "Text"],

Cell[BoxData[
    RowBox[{
      RowBox[{"Plot", "[", 
        RowBox[{\(x\^3\), ",", \({x, \(-5\), 5}\), ",", 
          StyleBox[\(AspectRatio \[Rule] 1/GoldenRatio\),
            FontColor->RGBColor[0.8, 0.2, 0.2]], 
          StyleBox[",",
            FontColor->RGBColor[0.8, 0.2, 0.2]], 
          StyleBox[\(PlotRange \[Rule] All\),
            FontColor->RGBColor[0.8, 0.2, 0.2]], 
          ",", \(Background \[Rule] RGBColor[0.982, 0.96, 0.93]\)}], 
        "\[IndentingNewLine]", "]"}], ";"}]], "Input",
  GeneratedCell->False],

Cell["\<\
It just wouldn't do to use AspectRatio\[Rule]Automatic for this plot. Try it \
and see what happens!\
\>", "Text"],

Cell[BoxData[
    RowBox[{
      RowBox[{"Plot", "[", 
        RowBox[{\(x\^3\), ",", \({x, \(-5\), 5}\), ",", 
          StyleBox[\(AspectRatio \[Rule] Automatic\),
            FontColor->RGBColor[0.8, 0.2, 0.2]], 
          StyleBox[",",
            FontColor->RGBColor[0.8, 0.2, 0.2]], 
          StyleBox[\(PlotRange \[Rule] All\),
            FontColor->RGBColor[0.8, 0.2, 0.2]], 
          ",", \(Background \[Rule] RGBColor[0.982, 0.96, 0.93]\)}], 
        "\[IndentingNewLine]", "]"}], ";"}]], "Input",
  GeneratedCell->False],

Cell["\<\
One should keep in mind that the ImplicitPlot (from the standard packages) \
uses  (AspectRatio\[Rule]Automatic)  by default. The default setting is often \
preferred since ImplicitPlot is often used to make Plots of circles and \
related functions.  However, in some situations this default setting will \
produce a useless graphic.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["BoxRatios", "Section"],

Cell[TextData[{
  "Plot3D, SurfaceGraphics and any functions that return SurfaceGraphics have \
the BoxRatios option with the default setting ",
  StyleBox["{1,1,0.4}", "Input",
    FontWeight->"Plain",
    Background->None,
    FontVariations->{"CompatibilityType"->0}],
  ". When this default setting is used the length of the two horizontal axes \
is always equal, and the height of the vertical axis is 40% of either \
horizontal axis. Using this default setting in the next line one gets the \
impression that the function rapidly oscillates."
}], "Text"],

Cell[BoxData[
    \(\(Plot3D[Sin[x\ y]/3, {x, \(-3\), 3}, {y, 0, 6}, 
        PlotPoints -> 30];\)\)], "Input"],

Cell["\<\
Instead one can set BoxRatios to Automatic to ensure that the resulting \
graphic is not distorted in that each axis is displayed using the same scale. \
 When the previous line is evaluated with BoxRatios set to Automatic, the \
figure is relatively short in the vertical direction since the values of \
Sin[x y]/3 varies over [-1/3, 1/3] which is much less than the variation of  \
x, y values . You might find that the line below gives a more accurate \
impression of how rapidly the function oscillates. 
\
\>", "Text"],

Cell[BoxData[
    RowBox[{
      RowBox[{"Plot3D", "[", 
        RowBox[{\(Sin[x\ y]/3\), ",", \({x, \(-3\), 3}\), ",", \({y, 0, 6}\), 
          ",", "\n", \(PlotPoints -> 30\), ",", 
          StyleBox[\(BoxRatios -> Automatic\),
            FontColor->RGBColor[0.8047, 0.265629, 0.187503]]}], "]"}], 
      ";"}]], "Input"],

Cell["\<\
Obviously setting BoxRatios to Automatic would be a very bad choice to plot \
(Sin[x y]/100) over the same plot range as in the last example.

Contrary to the way Plot3D works ParametricPlot3D sets BoxRatios to Automatic \
by default.  This default setting is used in the next example and produces a \
nice parametric plot of a 3D-spiral.
 \
\>", "Text"],

Cell[BoxData[
    \(\(ParametricPlot3D[{Cos[2\ t], Sin[2\ t], 10/t}, \n\t{t, 2, 12}, 
        Axes -> False, ImageSize -> {200, 300}];\)\)], "Input"],

Cell["\<\
Now in the next line the default setting for BoxRatios produces a graph \
that's very tall and thin
 \
\>", "Text"],

Cell[BoxData[
    \(\(ParametricPlot3D[{Cos[2\ t], Sin[2\ t], 30/t}, \n\t{t, 0.05, 2}, 
        Axes -> False, ImageSize -> {200, 300}];\)\)], "Input"],

Cell[TextData[{
  "A better presentation of the last graphic is made by setting BoxRatios to \
",
  StyleBox["{1,1,0.4}", "Input",
    FontWeight->"Plain",
    Background->None,
    FontVariations->{"CompatibilityType"->0}],
  " in the next line. \n "
}], "Text"],

Cell[BoxData[
    RowBox[{
      RowBox[{"ParametricPlot3D", "[", 
        RowBox[{\({Cos[2\ t], Sin[2\ t], 30/t}\), ",", "\n", 
          "\t", \({t, 0.05, 2}\), ",", \(Axes -> False\), 
          ",", \(ImageSize -> {200, 300}\), ",", 
          StyleBox[\(BoxRatios \[Rule] {1, 1, 1.5}\),
            FontColor->RGBColor[0.8047, 0.265629, 0.187503]]}], "]"}], 
      ";"}]], "Input"],

Cell["\<\
Graphics3D also set BoxRatios to Automatic by default.  In addition the \
following functions in the standard packages set BoxRatios to Automatic by \
default; 
   ListPlotVectorField3D
   PlotVectorField3D
   PlotGradientField3D
   SphericalPlot3D
   CylindricalPlot3D
   PointParametricPlot3D
   ListSurfacePlot3D
   ScatterPlot3D
   ContourPlot3D
   ListContourPlot3D
 
I know of no other functions with the default setting  \
(BoxRatios\[Rule]Automatic).\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Circle, Disk", "Section"],

Cell["The basic use of Circle is demonstrated with the next cell.", "Text"],

Cell[BoxData[{
    \(\(crv = Plot[x^3, {x, 0, 3}, DisplayFunction -> Identity];\)\), "\n", 
    \(\(cir1 = 
        Graphics[{Circle[{1.25, 12.5}, {0.25, 2.5}]\ \ \ }];\)\), "\n", 
    \(\(Show[crv, cir1, DisplayFunction -> $DisplayFunction, \n
        PlotRange \[Rule] {\(-2\), 30}];\)\)}], "Input"],

Cell[TextData[{
  "The next cell demonstrates a circle with radi specified using ",
  ButtonBox["scaled",
    ButtonData:>"Scaled",
    ButtonStyle->"Hyperlink"],
  " coordinates.  In this case the radius is 1/4 the width of the graphic in \
the horizontal direction and 1/4 of the height of the graphic in the vertical \
direction.  Hence the diameter is 1/2 the size of the graphic in each \
direction."
}], "Text"],

Cell[BoxData[{
    \(\(cir2 = 
        Graphics[{Circle[{1.25, 12.5}, 
              Scaled[{0.25, 0.25}]]\ \ \ }];\)\), "\n", 
    \(\(Show[crv, cir2, DisplayFunction -> $DisplayFunction, \n
        PlotRange \[Rule] {\(-2\), 30}];\)\)}], "Input"],

Cell[TextData[{
  "The next cell makes a circle with radi given as a combination of ",
  ButtonBox["scaled",
    ButtonData:>"Scaled",
    ButtonStyle->"Hyperlink"],
  " coordinates and absolute coordinates."
}], "Text"],

Cell[BoxData[{
    \(\(cir3 = 
        Graphics[{Circle[{1.5, 10}, 
              Scaled[{0.1, 0.125}, {0.7, 6}]]\ \ \ }];\)\), "\n", 
    \(\(Show[crv, cir3, DisplayFunction -> $DisplayFunction, \n
        PlotRange \[Rule] {\(-2\), 30}];\)\)}], "Input"],

Cell[TextData[{
  "The documentation for Circle indicates ",
  ButtonBox["Offset[{ax,ay}]",
    ButtonData:>"Offset",
    ButtonStyle->"Hyperlink"],
  " can be used to specify radii in printer points.  This is demonstrated \
below where the circle is round with a radius of 15 printer points regardless \
of the AspectRatio or ImageSize.  You can even resize the graphic, and the \
size of the circle will not change!\n \n",
  Cell[BoxData[
      \(Offset\ [{a\_x, a\_y}]\)],
    FontFamily->"Times New Roman"],
  " can also be used to specify radius of a Disk with similar results.\n "
}], "Text"],

Cell[BoxData[{
    \(\(crv = Plot[x^3, {x, 0, 3}, DisplayFunction -> Identity];\)\), "\n", 
    \(\(\(cir = Graphics[{Circle[{1.5, 10}, Offset[{15, 15}]]\ \ }];\)\(\n\)
    \)\ \), "\n", 
    \(\(Show[crv, cir, DisplayFunction -> $DisplayFunction, \n
        AspectRatio -> 1, ImageSize -> {180, 180}];\)\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["ColorFunction", "Section"],

Cell["\<\
Most graphics functions in Mathematica have a ColorFunction option.  The \
value of a function is used to specify the color or shade of gray used to \
make each portion of the graphic.  Some examples of ColorFunction are shown \
below. The \"#&\" notation is explained in my discussion of Slot, \
SlotSequence. \
\>", "Text",
  CellTags->"ColorFunction"],

Cell[BoxData[
    \(\(Plot3D[
        Sin[x + y], {x, \(-\[Pi]\), \[Pi]}, {y, \(-\[Pi]\), \[Pi]}, \n\t
        ColorFunction -> \((If[# < 1/2, GrayLevel[0.5], 
                GrayLevel[0.8]] &)\)];\)\)], "Input"],

Cell[BoxData[
    \(\(Plot3D[
        Sin[x + y], {x, \(-\[Pi]\), \[Pi]}, {y, \(-\[Pi]\), \[Pi]}, \n\t
        ColorFunction -> \((RGBColor[0.1 + 0.8  #, 0, 0.9 - 0.8  #] &)\), \n
        Mesh -> False, PlotPoints -> 30];\)\)], "Input"],

Cell["\<\
You will find we can't have a ColorFunction that is sometimes a color and \
sometimes a GrayLevel.  However, we can still get the same result by using \
RGBColor[a,a,a]  in place of GrayLevel[a] as in the next cell.    \
\>", "Text"],

Cell[BoxData[
    \(\(Plot3D[
        Sin[x + y], {x, \(-\[Pi]\), \[Pi]}, {y, \(-\[Pi]\), \[Pi]}, \n\t
        ColorFunction -> \((If[# < 1/2, Hue[0.4], 
                RGBColor[0.8, 0.8, 0.8]] &)\)];\)\)], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["ColorFunctionScaling", "Section"],

Cell[TextData[{
  "ColorFunctionScaling is an option for SurfaceGraphics, DensityGraphics, \
ContourGraphics, Raster and functions that return these graphic objects.  The \
default setting is (ColorFunctionScaling\[Rule]True) in which case function \
values are scaled such that the minimum value is mapped to 0 and the maximum \
value is mapped to 1.  These mapped values are then used to determine a color \
for each point on the plot.  The color is determined from the setting of the \
",
  ButtonBox["ColorFunction",
    ButtonData:>"ColorFunction",
    ButtonStyle->"Hyperlink"],
  " option. When the setting (ColorFunctionScaling\[Rule]False) is used the \
function values are sent directly to the function determined by the \
ColorFunction setting. Notice when the setting \
(ColorFunction\[Rule]Automatic) is used a negative value has the same effect \
as 0 and a value greater than 1 has the same effect as 1. \nThe cells that \
follow demonstrate how ColorFunctionScaling affects DensityGraphics and \
ContourGraphics."
}], "Text",
  CellTags->"ColorFunctionScaling"],

Cell[BoxData[{
    \(\(DensityPlot[Cos[x\ y]/10 + 1/2, {x, \(-3\), 3}, {y, \(-3\), 3}, 
        ColorFunctionScaling \[Rule] True];\)\), "\n", 
    \(\(DensityPlot[Cos[x\ y]/10 + 1/2, {x, \(-3\), 3}, {y, \(-3\), 3}, 
        ColorFunctionScaling -> False];\)\)}], "Input"],

Cell[BoxData[{
    \(\(ContourPlot[Cos[x\ y]/10 + 1/2, {x, \(-3\), 3}, {y, \(-3\), 3}, 
        ColorFunctionScaling \[Rule] True];\)\), "\n", 
    \(\(ContourPlot[Cos[x\ y]/10 + 1/2, {x, \(-3\), 3}, {y, \(-3\), 3}, 
        ColorFunctionScaling -> False];\)\)}], "Input"],

Cell["\<\
ColorFunctionScaling is a SurfaceGraphics option and only affects rendering \
of SurfaceGraphics when the setting (Lighting\[Rule]False) is used. Plot3D \
returns SurfaceGraphics and the next cell demonstrates the use of \
ColorFunctionScaling with Plot3D.\
\>", "Text"],

Cell[BoxData[{
    \(\(\(Plot3D[
        Cos[x\ y]/10 + 1/2, {x, \(-3\), 3}, {y, \(-3\), 
          3}, \[IndentingNewLine]ColorFunctionScaling \[Rule] True, 
        Lighting \[Rule] False];\)\(\n\)
    \)\), "\[IndentingNewLine]", 
    \(\(Plot3D[
        Cos[x\ y]/10 + 1/2, {x, \(-3\), 3}, {y, \(-3\), 
          3}, \[IndentingNewLine]ColorFunctionScaling \[Rule] False, 
        Lighting \[Rule] False];\)\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["ColorOutput", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?ColorOutput\)\)], "Input"],

Cell[BoxData[
    \("ColorOutput is an option for graphics functions which specifies the \
type of color output to produce."\)], "Print"]
}, Open  ]],

Cell["\<\
According to technical support at  Wolfram Research ColorOutput is primarily \
intended for those situations when you are exportiing Mathematica graphics to \
Adobe post script or EPS.  They say it allows some additional control over \
how the color output is handled in these circumstances, but I haven't come up \
with an example.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["DisplayFunction", "Section"],

Cell["\<\
DisplayFunction is an option for most graphics functions, and is normally \
used to indicate whether the graphics should be displayed.  As long as you \
haven't changed the value assigned to $DisplayFunction you can ensure \
graphics are displayed by giving DisplayFunction the setting \
$DisplayFunction.  To prevent the display of graphics DisplayFunction should \
be set to Identity.

For example the next cell shows a plot sin[x], x-(x^3)/6 on the same graphic, \
but before making the combined plot it makes and displays the individual \
plots.\
\>", "Text"],

Cell[BoxData[{
    \(\(plt1 = Plot[Sin[x], {x, \(-\[Pi]\), \[Pi]}];\)\), "\n", 
    \(\(plt2 = Plot[x - x\^3\/6, {x, \(-2\), 2}];\)\), "\n", 
    \(\(Show[plt1, plt2];\)\)}], "Input"],

Cell[TextData[{
  "You can supress display of the individual plots by using the \
DisplaFunction options in the next cell.  Here ",
  Cell[BoxData[
      \(TraditionalForm\`DisplayFunction \[Rule] Identity\)]],
  " prevents display of the individual graphs.  To ensure the combined plots \
are displayed we must use ",
  Cell[BoxData[
      \(TraditionalForm\`DisplayFunction \[Rule] $DisplayFunction\)]],
  " inside Show."
}], "Text"],

Cell[BoxData[{
    \(\(plt1 = 
        Plot[Sin[x], {x, \(-\[Pi]\), \[Pi]}, 
          DisplayFunction \[Rule] Identity];\)\), "\n", 
    \(\(plt2 = 
        Plot[x - x\^3\/6, {x, \(-2\), 2}, 
          DisplayFunction \[Rule] Identity];\)\), "\n", 
    \(\(Show[plt1, plt2, 
        DisplayFunction \[Rule] $DisplayFunction];\)\)}], "Input"],

Cell["\<\
A labor saving way to change the setting of DisplayFunction is given in my \
discussion of Block.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["DisplayString", "Section"],

Cell["The next line shows the DisplayString usage message.", "Text",
  CellTags->"DisplayString"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?DisplayString\)\)], "Input"],

Cell[BoxData[
    RowBox[{"\<\"DisplayString[graphics] generates a string giving graphics \
or sound in Mathematica PostScript format. DisplayString[graphics, \\\"format\
\\\"] generates a string giving graphics or sound in the specified format. \
DisplayString[expr, \\\"format\\\"] generates a string giving boxes, cells or \
notebook expressions in the specified format.\"\>", " ", 
      ButtonBox[
        StyleBox["More\[Ellipsis]",
          "SR"],
        ButtonData:>"DisplayString",
        Active->True,
        ButtonStyle->"RefGuideLink"]}]], "Print",
  CellTags->"Info3247287724-5688812"]
}, Open  ]],

Cell["\<\
The Postscript expression returned by DisplayString can sometimes be used by \
other programs.  We can also use the Postsript to make Graphics output that \
we can't otherwise make without manual adjustment as I demonstrate below.  \
First the next Input makes (ps) the PostScript used to render a plot.\
\>", "Text"],

Cell[BoxData[{
    \(\(gr = 
        Plot[Sin[x], {x, 0, \[Pi]}, DisplayFunction \[Rule] Identity, 
          PlotPoints -> 5, PlotDivision -> 2];\)\), "\[IndentingNewLine]", 
    \(ps = DisplayString[gr]\)}], "Input"],

Cell["\<\
Then the next Input renders the graphics with a non-default setting for \
CellMargins.\
\>", "Text"],

Cell[BoxData[
    \(\(\(\ \)\(NotebookWrite[\ 
      SelectedNotebook[], \ \n\ \ \ \ \ \ \ \ \ Cell[
        GraphicsData["\<PostScript\>", \ ps], \ "\<Graphics\>", \ 
        CellMargins \[Rule] {{150, 0}, {0, 
              30}}]\ \[IndentingNewLine]]\)\)\)], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["EdgeForm", "Section"],

Cell["The next cell displays the usage message for EdgeForm.", "Text",
  CellTags->"EdgeForm"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?EdgeForm\)\)], "Input"],

Cell[BoxData[
    \("EdgeForm[g] is a three-dimensional graphics directive which specifies \
that edges of polygons are to be drawn using the graphics directive or list \
of graphics directives g."\)], "Print"]
}, Open  ]],

Cell["\<\
The usage message for EdgeForm indicates  EdgeForm is a \"three-dimensional \
graphics directive\" this indicates it can be used inside Graphics3D and with \
functions that produce Graphics3D expressions.  ParametricPlot3D produces \
Graphics3D, and it's usage message indicates that \
ParametricPlot3D[{fx,fy,fz,s},{x,xmin,xmax},{ymin,ymax}] produces a plot \
shaded according to the color specification (s).  Here (s) can be a single \
three-dimensional graphics directive or a list of three-dimensional graphics \
directives.

Consider the next cell where the default EdgeForm around polygons is used.\
\>", "Text",
  LineSpacing->{1, 3},
  ParagraphSpacing->{0, 0}],

Cell[BoxData[
    \(\(ParametricPlot3D[{x, y, Sin[x\ y/3]}, {x, 0, 3}, {y, 0, 
          3}];\)\)], "Input"],

Cell["\<\
The next cell makes the same graphic except no edges are drawn around the \
polygons.\
\>", "Text"],

Cell[BoxData[
    \(\(ParametricPlot3D[{x, y, Sin[x\ y/3], EdgeForm[]}, {x, 0, 3}, {y, 0, 
          3}];\)\)], "Input"],

Cell["\<\
The next cell plots the same function using a gray edges around the polygons.\
\
\>", "Text"],

Cell[BoxData[
    \(\(ParametricPlot3D[{x, y, Sin[x\ y/3], EdgeForm[GrayLevel[0.5]]}, {x, 
          0, 3}, {y, 0, 3}];\)\)], "Input"],

Cell["\<\
The next cell uses colored edges where the color varies as a function of x \
and y.\
\>", "Text"],

Cell[BoxData[
    \(\(ParametricPlot3D[{x, y, Sin[x\ y/3], 
          EdgeForm[RGBColor[1 - x/3, 1 - y/3, 0]]}, \[IndentingNewLine]{x, 0, 
          3}, {y, 0, 3}];\)\)], "Input"],

Cell["\<\
The next cell uses thick colored edges where the color varies as a function \
of x and y.\
\>", "Text"],

Cell[BoxData[
    \(\(ParametricPlot3D[{x, y, 
          Sin[x\ y/3], \[IndentingNewLine]EdgeForm[{RGBColor[1 - x/3, 
                1 - y/3, 0], 
              AbsoluteThickness[4]}]\ }, \[IndentingNewLine]\ {x, 0, 3}, {y, 
          0, 3}, PlotPoints -> 8\[IndentingNewLine]];\)\)], "Input"],

Cell["\<\
An example is given below where EdgeForm is used with Grapgics3D.  Here \
EdgeForm[] indicates no edges should be drawn around the polygons.\
\>", "Text"],

Cell[BoxData[{
    \(Needs["\<Graphics`Shapes`\>"]\), "\n", 
    \(\(Show[Graphics3D[{EdgeForm[], Torus[]}]];\)\)}], "Input"],

Cell["In the next cell Gray edges around the polygons are used.", "Text"],

Cell[BoxData[
    \(\(Show[
        Graphics3D[{EdgeForm[Thickness[0.01], GrayLevel[0.5]], 
            Torus[]}]];\)\)], "Input"],

Cell[TextData[{
  "Keep in mind that DensityPlot, ListDensityPlot, ListPlot3D, Plot and \
Plot3D don't produce Graphics3D expressions.  Instead one should use the \
options ",
  ButtonBox["Mesh and MeshStyle",
    ButtonData:>"Mesh",
    ButtonStyle->"Hyperlink"],
  " to get similar results with DensityPlot, ListDensityPlot, ListPlot3D, \
Plot and Plot3D. "
}], "Text",
  LineSpacing->{1, 3},
  ParagraphSpacing->{0, 0}]
}, Closed]],

Cell[CellGroupData[{

Cell["Epilog, Prolog", "Section"],

Cell["\<\
Epilog and Prolog are options for Graphics functions which give are used to \
give a list of graphics primative (Circle, Line, Point, ...) to be rendered \
before or after the main part of the graph.  The Prolog  graphics are \
rendered before the main part of the graphics.  The Epilog graphics are \
rendered after the main part of the graphics.

The cell below shows red points drawn before the line using Prolog.  Also \
shown are red points drawn after the lines using Epilog.
 \
\>", "Text"],

Cell[BoxData[{
    \(\(data1 = Table[{x, x}, {x, 0, 6}];\)\n\), "\n", 
    \(Block[{$DisplayFunction = Identity}, \n\t\n
      PointsFirst = 
        ListPlot[data1, 
          PlotJoined -> 
            True, \n\t\tPlotStyle -> {GrayLevel[0], 
              Thickness[0.02]}, \n\t\tProlog -> {Hue[1], PointSize[0.1], 
              Point /@ data1}, \n\ \ \ \ \ \ PlotRange -> {{\(-0.5\), 
                6}, {\(-0.5\), 6}}]; \n\t\n
      PointsLast = 
        ListPlot[data1, 
          PlotJoined -> 
            True, \n\t\tPlotStyle -> {GrayLevel[0], 
              Thickness[0.02]}, \n\t\tEpilog -> {Hue[1], PointSize[0.1], 
              Point /@ data1}, \n\ \ \ \ \ \ PlotRange -> {{\(-0.5\), 
                6}, {\(-0.5\), 6}}];\n]\n\), "\n", 
    \(\(Show[GraphicsArray[{PointsFirst, PointsLast}], 
        ImageSize -> {400, 100}];\)\)}], "Input"],

Cell["\<\
The next example was inspired by a problem Jurgen Tisher answered in the \
MathGroup.  You should be wary of using  Epilog and Prolog for applications \
where you may combine the results with other graphics at a later time using \
Show.  The reason for this is demonstrated in this example.
 \
\>", "Text"],

Cell[BoxData[{
    \(\(data1 = Table[{x, x}, {x, 0, 6}];\)\), "\n", 
    \(\(data2 = Table[{x, x + 2}, {x, 0, 6}];\)\n\), "\n", 
    \(Block[{$DisplayFunction = Identity}, \n\t\n
      p1 = ListPlot[data1, 
          PlotJoined -> 
            True, \n\t\tEpilog -> {Hue[1], \n\t\t\t\t\tPointSize[0.06], 
              Point /@ data1}, \n\ \ \ \ \ \ PlotRange -> {{\(-0.5\), 
                6.5}, {\(-0.5\), 8.5}}]; \n\t\n
      p2 = ListPlot[data2, 
          PlotJoined -> 
            True, \n\t\tEpilog -> {Hue[1], \n\t\t\t\t\tPointSize[0.06], 
              Point /@ data2}, \n\ \ \ \ \ \ PlotRange -> {{\(-0.5\), 
                6.5}, {\(-0.5\), 8.5}}];\n]\n\), "\n", 
    \(\(Show[GraphicsArray[{p1, p2}], ImageSize -> {400, 100}];\)\)}], "Input"],

Cell["\<\
In the GraphicsArray above the Points made with Epilog are shown in the plots \
for p1 and p2.  When the two graphics below are combined only the Epilog \
graphics for p1 are shown.\
\>", "Text"],

Cell[BoxData[
    \(\(Show[p1, p2];\)\)], "Input"],

Cell["\<\
The Epilog graphics for p2 were not displayed because Show concatenates \
together the options for each graphic.  As a result only the first Epilog \
options and the first Prolog option is used.  By using FullGraphics the \
graphics for p1 and p2 can be converted to graphic primitives, and all the \
intended graphics are displayed.  However, this demonstration is misleading \
because the manual settings used for PlotRange above were carefully selected \
to ensure the result below comes out looking good.  If you make p1 and p2 \
using the PlotRange\[Rule]Automatic the graphic below doesn't come out as \
nice.  

It turns out that Prolog has the same weakness.
 \
\>", "Text"],

Cell[BoxData[
    \(\(Show[FullGraphics[p1], FullGraphics[p2]];\)\)], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["FrameTicks", "Section"],

Cell[CellGroupData[{

Cell["\<\
A user wanted to present data on the y axis and refer to it with 2 equivalent \
scales 
(degrees Fahrenheit and degrees Celcius)\
\>", "Subsubsection"],

Cell["\<\
Wolf Hartmut gave a solution where he demonstrates by first defining a fever \
curve (temp) in Centigrade units, and a Plot of the curve is assigned to \
graphC.\
\>", "Text"],

Cell[BoxData[{
    \(\(\(tempC = 
        Join[Table[Random[Real] + 37.25, {4}], 
          Table[6  x/E^x + Random[Real] + 37.25, {x, 0, 6, 0.2}]];\)\(\n\)
    \)\), "\[IndentingNewLine]", 
    \(\(graphC = 
        ListPlot[tempC, PlotJoined \[Rule] True, PlotRange \[Rule] All, 
          Frame \[Rule] True, Axes \[Rule] None, 
          FrameTicks \[Rule] {Automatic, Automatic, None, None}, 
          DisplayFunction \[Rule] Identity];\)\)}], "Input"],

Cell["\<\
Ticks2 are the original FrameTicks redefined so the text for Clesius degrees \
are placed at the equivalent place on a graph with Farenheight units.\
\>", "Text"],

Cell[BoxData[{
    \(\(Needs["\<Miscellaneous`Units`\>"];\)\), "\[IndentingNewLine]", 
    \(\(Ticks2 = \({ConvertTemperature[#1, Centigrade, Fahrenheit], 
              If[#2 \[Equal] "\<\>", #2, #1], #3, #4} &\) @@@ \(FullOptions[
              graphC, FrameTicks]\)[\([2]\)];\)\)}], "Input"],

Cell["\<\
Next the fever curve is converted to Fahrenheit, and  this is plotted with \
Ticks2.  The altered FrameTicks are used on the left edge of the graph.\
\>", "Text"],

Cell[BoxData[{
    \(\(\(tempF = \(ConvertTemperature[#, Centigrade, Fahrenheit] &\) /@ 
          tempC;\)\(\[IndentingNewLine]\)
    \)\), "\n", 
    \(\(ListPlot[tempF, PlotJoined \[Rule] True, PlotRange \[Rule] All, 
        Frame \[Rule] True, Axes \[Rule] None, 
        FrameTicks \[Rule] {Automatic, Automatic, None, Ticks2}, 
        FrameLabel \[Rule] {None, "\<Fahrenheit\>", 
            None, "\<Centigrade\>"}];\)\)}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
A user wanted to have two graphs displayed one above the other in a \
GraphicsArray, and 
have the vertical axes alligned with eachother\
\>", "Subsubsection",
  CellFrame->{{0, 0}, {0, 0.5}}],

Cell["\<\
Bob Hanlon recommended using an identical but  \"invisible\" FrameTick on \
each graph's axis that is slightly wider than the widest actual tick label as \
below.\
\>", "Text"],

Cell[BoxData[{
    \(\(\(fig1 = 
        Plot[x, {x, 0, 10}, 
          Frame \[Rule] 
            True, \[IndentingNewLine]FrameTicks \[Rule] {Automatic, \
\[IndentingNewLine]Join[\[IndentingNewLine]Table[{k, k}, {k, 0, 10, 2}], 
                Table[{k, "\<    \>"}, {k, 0, 10, 1}]\[IndentingNewLine]], 
              Automatic, Automatic\[IndentingNewLine]}, 
          DisplayFunction \[Rule] 
            Identity\[IndentingNewLine]];\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(\(fig2 = 
        Plot[x^4, {x, 0, 10}, Frame \[Rule] True, 
          FrameTicks \[Rule] {Automatic, \[IndentingNewLine]Join[\
\[IndentingNewLine]Table[{k, k}, {k, 0, 2000, 500}], 
                Table[{k, "\<    \>"}, {k, 0, 2100, 
                    100}]\[IndentingNewLine]], Automatic, 
              Automatic\[IndentingNewLine]}, 
          DisplayFunction \[Rule] 
            Identity\[IndentingNewLine]];\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(Show[GraphicsArray[{{fig1}, {fig2}}], 
        ImageSize \[Rule] {300, 388}];\)\)}], "Input"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["HiddenSurface", "Section"],

Cell[TextData[{
  "HiddenSurface is an option for SurfaceGraphics, Plot3D and other funtions \
that return SurfaceGraphics.  The default setting is \
(HiddenSurface\[Rule]True) which causes the surface to be drawn using \
simulated lighting as long as the setting (Lighting\[Rule]True) is used.  The \
setting (HiddenSurface\[Rule]False) draws the surface as a transparent wire \
mesh.  Evaluating the next cell demonstrates both HiddenSurface settings. The \
",
  ButtonBox["Shading",
    ButtonData:>"Shading",
    ButtonStyle->"Hyperlink"],
  " option is used to render the surface as a mesh of opaque mesh of \
polygons."
}], "Text",
  CellTags->"HiddenSurface"],

Cell[BoxData[
    \(Plot3D[Exp[\(-\((x\^4 + y\^4)\)\)], {x, \(-2\), 2}, {y, \(-2\), 2}, 
      HiddenSurface \[Rule] True]; 
    Plot3D[Exp[\(-\((x\^4 + y\^4)\)\)], {x, \(-2\), 2}, {y, \(-2\), 2}, 
      HiddenSurface \[Rule] False];\)], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["ImplicitPlot", "Section"],

Cell["\<\
Either form of ImplicitPlot will take the options FormatType, ImageSize, \
TextStyle even though they aren't returned by Options[ImplicitPlot].  \
ImplicitPlot also takes the options ColorFunction, Compiled, ContourLines, \
ContourShading and ContourStyle but only when the ContourPlot method is used. \
 Each of these options except Compiled is demonstrated below.\
\>", "Text"],

Cell[BoxData[{
    \(\(Needs["\<Graphics`ImplicitPlot`\>"];\)\), "\[IndentingNewLine]", 
    \(\(ImplicitPlot[x^2 + y^2 == 1/2, {x, 0, 0.75}, {y, 0, 0.75}, \ \n
        ColorFunction -> \((If[# < 0.5, \ GrayLevel[0.7], \ 
                GrayLevel[1]] &)\), \ ImageSize -> {200, 200}, \ 
        ContourLines -> False, \nContourShading -> True];\)\)}], "Input"],

Cell[BoxData[{
    \(\(Needs["\<Graphics`ImplicitPlot`\>"];\)\), "\[IndentingNewLine]", 
    \(\(ImplicitPlot[
        ArcSin[x] - y == 0, {x, \(-1\), 1}, {y, \(-\[Pi]\)/2, \[Pi]/2}, \n
        PlotLabel -> HoldForm[ArcSin[x] = y], 
        ContourStyle -> Dashing[{0.02, 0.02}], \ \n\t
        TextStyle -> {FontColor -> Hue[0.7]}, 
        FormatType -> TraditionalForm];\)\)}], "Input"],

Cell["\<\
The documentation indicates ImplicitPlot uses one of two methods.  In the two \
cells above the ContourPlot method was used since a range of values for x and \
y were specified.  When the ContourPlot method is used the ContourStyle \
option is used to make the curve dotted.  In the next line the Solve method \
is used since no range is given for the range of (y) values.  Since the Solve \
method is used the PlotStyle option has to be used to make the curve dotted.  \
Whether you use PlotStyle or ContourStyle depends on the ImplicitPlot method \
being used (ContourPlot method, or Solve method).\
\>", "Text"],

Cell[BoxData[{
    \(\(Needs["\<Graphics`ImplicitPlot`\>"];\)\), "\[IndentingNewLine]", 
    \(\(ImplicitPlot[ArcSin[x] - y == 0, {x, \(-1\), 1}, \n\ 
        PlotStyle -> Dashing[{0.02, 0.02}]\ ];\)\)}], "Input"],

Cell["\<\
Also note the documentation indicates ImplicitPlot uses the same options as \
plot when the solve method is used.  Actually MaxBend and PlotDivision are \
plot options, but they aren't recognized by either method of ImplicitPlot.\
\>", "Text"],

Cell["\<\
One should keep in mind that ImplicitPlot uses (AspectRatio\[Rule]Automatic) \
by default.  This ensures that the plot of a circle (below) looks like a \
circle.\
\>", "Text"],

Cell[BoxData[{
    \(\(Needs["\<Graphics`ImplicitPlot`\>"];\)\), "\[IndentingNewLine]", 
    \(\(ImplicitPlot[x^2 + y^2 == 9, {x, \(-3\), 3}];\)\)}], "Input"],

Cell["\<\
However the default option (AspectRatio\[Rule]Automatic) causes a problem in \
the next cell.  In this case the range of values on the vertical axis is much \
larger than the range of values on the horizontal axis.  In this case the \
default setting for AspectRatio produces a useless graphic.  \
\>", "Text"],

Cell[BoxData[{
    \(\(Needs["\<Graphics`ImplicitPlot`\>"];\)\), "\[IndentingNewLine]", 
    \(\(ImplicitPlot[y + x == Tan[x], {x, 0.8, 1.56}];\)\)}], "Input"],

Cell["\<\
Instead the AspectRatio used by most other plot commands \
(AspectRatio\[Rule]1/GoldenRatio) produces a much more useful graphic in the \
next line.  \
\>", "Text"],

Cell[BoxData[{
    \(\(Needs["\<Graphics`ImplicitPlot`\>"];\)\), "\[IndentingNewLine]", 
    \(\(ImplicitPlot[y + x == Tan[x], {x, 0.8, 1.56}, 
        AspectRatio -> 1/GoldenRatio];\)\)}], "Input"],

Cell["\<\
In the following line Implicit Plot uses the default options and the curves \
aren't smooth.  To make the graphs smooth a value for the PlotPoints option \
has to be specified.  The default setting is PlotPoints->25.  The setting \
used in the second attempt work better.\
\>", "Text"],

Cell[BoxData[
    \(\(ImplicitPlot[
        Sin[2\ x]\  + \ Cos[3\ y]\  == \ 1, {x, \(-8\), 8}, {y, \(-8\), 
          8}];\)\)], "Input"],

Cell[BoxData[
    \(\(ImplicitPlot[
        Sin[2\ x]\  + \ Cos[3\ y]\  == \ 1, {x, \(-8\), 8}, {y, \(-8\), 8}, \n
        PlotPoints \[Rule] 200];\)\)], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["LightSources", "Section"],

Cell[TextData[{
  "The lighting model in ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " allows you to simulate lighting from one or more light sources when the \
setting (Lighting\[AliasDelimiter]->True) is used. Each light source has a \
certain positioon and color. Cartesian coordinates relative to the display \
are used to specify the position of light sources.  The axes are oriented \
with the positive ",
  Cell[BoxData[
      \(TraditionalForm\`x - axis\)]],
  " right of the display, the positive ",
  Cell[BoxData[
      \(TraditionalForm\`y - axis\)]],
  " above the display, and the positive ",
  Cell[BoxData[
      \(TraditionalForm\`z - axis\)]],
  " in front of the display.  Some examples are given below to demonstrate.\n\
\nFirst we have an example where \n",
  StyleBox["{{0,1,0},RGBColor[1,0,0]}", "Output"],
  " is a red light source from above, and \n",
  StyleBox["{{1,0,0},RGBColor[0,1,0]}", "Output"],
  " is a green light source from the right."
}], "Text",
  CellTags->"LightSources"],

Cell[BoxData[
    \(\(Show[
        Graphics3D[{Cuboid[{1, 1, 1}]}, Boxed \[Rule] False, 
          ViewPoint \[Rule] {2.4, 0.6, 
              0.6}, \[IndentingNewLine]LightSources \[Rule] {{{0, 1, 0}, 
                RGBColor[1, 0, 0]}, {{1, 0, 0}, 
                RGBColor[0, 1, 0]}}\[IndentingNewLine]]];\)\)], "Input"],

Cell["\<\
In the next cell we have an example where 
{{0,-1,0},RGBColor[1,0,0]}is a red light source from below,and
{{-1,0,0},RGBColor[0,1,0]}is a green light source from the left.\
\>", "Text"],

Cell[BoxData[
    \(\(Show[
        Graphics3D[{Cuboid[{1, 1, 1}]}, Boxed \[Rule] False, 
          ViewPoint \[Rule] {2.4, \(-0.6\), \(-0.6\)}, \
\[IndentingNewLine]LightSources \[Rule] {{{0, \(-1\), 0}, 
                RGBColor[1, 0, 0]}, {{\(-1\), 0, 0}, 
                RGBColor[0, 1, 0]}}\[IndentingNewLine]]];\)\)], "Input"],

Cell["\<\
In the next cell we have an example where
{{0,0,1},RGBColor[1,0,0]}is a red light source from directly infront of the \
display and
{{1,0,0},RGBColor[0,1,0]}is a green light source from the right.\
\>", "Text"],

Cell[BoxData[
    \(\(Show[
        Graphics3D[{Cuboid[{1, 1, 1}]}, Boxed \[Rule] False, 
          ViewPoint \[Rule] {2.4, 0.6, 
              0.6}, \[IndentingNewLine]LightSources \[Rule] {{{0, 0, 1}, 
                RGBColor[1, 0, 0]}, {{1, 0, 0}, 
                RGBColor[0, 1, 0]}}\[IndentingNewLine]]];\)\)], "Input"],

Cell["\<\
In the examples above the cubes were oriented so that two surfaces were \
nearly normal to the incident light rays. Hence reflected light was nearly \
identical to the incident light. In the next example the default ViewPoint is \
used, and each of three sides are iluminated by more than one light source.\
\>", "Text"],

Cell[BoxData[
    \(\(Show[
        Graphics3D[{Cuboid[{1, 1, 1}]}, 
          Boxed \[Rule] 
            False, \[IndentingNewLine]LightSources \[Rule] {\
\[IndentingNewLine]{{0.1, \(-0.2\), 0.5}, 
                RGBColor[1, 0, 0]}, \[IndentingNewLine]{{0.7, \ \ 0.0, \ 
                  0.7}, RGBColor[0, 1, 
                  0]}, \[IndentingNewLine]{{0.0, \ \ \ 1.0, 0.2}, 
                RGBColor[0, 0, 1]}}\[IndentingNewLine]]];\)\)], "Input"],

Cell["\<\
The Mathematica lighting model doesn't account for shadows. This is normally \
preffered for scientific illustrations, but not for life like 3D graphics. \
The fact that Mathematica doesn't account for shadows is demonstrated with \
the code in the next cell in which the top of all cubes are red, and the \
right side of all cubes are green.\
\>", "Text"],

Cell[BoxData[
    \(\(Show[
        Graphics3D[{Cuboid[{0, \(-1.3\), 0}, {1, \(-0.3\), 
                1}], \[IndentingNewLine]Cuboid[{0, 0, 0}, {1, 1, 
                1}], \[IndentingNewLine]Cuboid[{0, 0, \(-0.3\)}, {1, 
                1, \(-1.3\)}]\[IndentingNewLine]}, 
          ViewPoint \[Rule] {2.4, 0.6, 
              0.6}, \[IndentingNewLine]LightSources \[Rule] {{{0, 1, 0}, 
                RGBColor[1, 0, 0]}, {{1, 0, 0}, 
                RGBColor[0, 1, 0]}}\[IndentingNewLine]]];\)\)], "Input"],

Cell["For the next example we need to load a graphics package.", "Text"],

Cell[BoxData[
    \(<< Graphics`Shapes`\)], "Input"],

Cell["\<\
Keep in mind the coordinate system used for LightSources has nothing to do \
with the axes of the Graphics3D object. For evidence of this consider the \
next cell which make an annimation of a rotating sphere with only one light \
source from the right and a little ambient light.  If you click on one of the \
graphic cells you can see the box spining around, but the sphere always looks \
the same.\
\>", "Text"],

Cell[BoxData[{
    \(\(gr1 = Sphere[1, 50, 25];\)\[IndentingNewLine]\), "\n", 
    \(\(Table[\[IndentingNewLine]Show[
          Graphics3D[{EdgeForm[], 
              gr1}], \[IndentingNewLine]LightSources \[Rule] {{{1, 0, 0}, 
                RGBColor[1, 0, 0]}}, \[IndentingNewLine]AmbientLight \[Rule] 
            GrayLevel[0.25], \[IndentingNewLine]SphericalRegion \[Rule] 
            True, \[IndentingNewLine]ViewPoint \[Rule] {1.7\ Cos[\[Theta]], 
              1.7\ Sin[\[Theta]], 2. }], \[IndentingNewLine]{\[Theta], 0, 
          2  \[Pi], \[Pi]/10}];\)\)}], "Input"],

Cell["\<\
The next cell makes an annimation showing a torus lit with a moving light \
source. The only thing that changes in the annimation is the direction of the \
light source.  The virtural location of the light moves in a counter \
clockwise circle around the viewing surface.\
\>", "Text"],

Cell[BoxData[{
    \(\(gr1 = Torus[3, 1, 30, 30];\)\), "\n", 
    \(\(Table[
        Show[Graphics3D[{EdgeForm[], 
              gr1}], \[IndentingNewLine]LightSources \[Rule] {{{Cos[a], 
                  Sin[a], 1}, GrayLevel[1]}}], {a, 0, 
          2  \[Pi], \[Pi]/8}];\)\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["ListPlot3D, ListDensityPlot, ListContourPlot", "Section"],

Cell[TextData[{
  "ListPlot3D, ListDensityPlot, and ListContourPlot are used to plot a matrix \
of numeric values.  By default these functions simply label the resulting \
tick marks as if the rows and columns of the matrix are numbered 1, 2, 3, ... \
 In many cases you will want to number the TickMarks on the x and y axes so \
they coorespond to a certain range of values.  These functions have an option \
called ",
  ButtonBox["MeshRange",
    ButtonData:>"MeshRange",
    ButtonStyle->"Hyperlink"],
  " that does this."
}], "Text",
  CellTags->"ListPlot3D"]
}, Closed]],

Cell[CellGroupData[{

Cell["Mesh, MeshStyle", "Section"],

Cell["\<\
By default Plot3D, ListPlot3D, DensityPlot and ListDensityPlot3D make a black \
mesh over the graphic.  In the next cell the setting (Mesh\[Rule]False) is \
used to supporess this grid.\
\>", "Text",
  CellTags->"Mesh"],

Cell[BoxData[{
    \(\(Plot3D[Sin[x + y], {x, \(-\[Pi]\), \[Pi]}, {y, 0, \[Pi]}, 
        Mesh \[Rule] False];\)\), "\[IndentingNewLine]", 
    \(\(DensityPlot[Sin[x + y], {x, \(-\[Pi]\), \[Pi]}, {y, 0, \[Pi]}, 
        Mesh \[Rule] False];\)\)}], "Input"],

Cell["\<\
In the next cell the MeshStyle option is used to make a green mesh.  Using \
this option one can specify the color and/or thickness of the grid.  You \
could also make a mesh of dashed lines if you wanted to.\
\>", "Text"],

Cell[BoxData[{
    \(\(Plot3D[Sin[x + y], {x, \(-\[Pi]\), \[Pi]}, {y, 0, \[Pi]}, 
        MeshStyle \[Rule] {Hue[0.3, 1, 0.7]}];\)\), "\[IndentingNewLine]", 
    \(\(DensityPlot[Sin[x + y], {x, \(-\[Pi]\), \[Pi]}, {y, 0, \[Pi]}, 
        MeshStyle \[Rule] {Hue[0.3, 1, 0.7]}];\)\)}], "Input"],

Cell[TextData[{
  "ParametricPlot3D requires use of ",
  ButtonBox["EdgeForm",
    ButtonData:>"EdgeForm",
    ButtonStyle->"Hyperlink"],
  " to do the same thing as Mesh and MeshStyle.  EdgeForm is also used with \
Graphics3D primitives rather than Mesh, MeshStyle."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["MeshRange", "Section"],

Cell["\<\
MeshRange is an option for ListPlot3D, ListDensityPlot, ListContourPlot, \
SurfaceGraphics, DensityGraphics, and ContourGraphics. ListPlot3D, \
ListDensityPlot, and ListContourPlot are used to plot a matrix of numeric \
values.  When the default setting (MeshRange\[Rule]Automatic) is used these \
functions simply label the resulting tick marks as if the rows and columns of \
the matrix are numbered 1, 2, 3, ... This is what you get from evaluating the \
next cell.  These functions can't do any better because there is nothing in \
the data indicating otherwise.\
\>", "Text",
  CellTags->"MeshRange"],

Cell[BoxData[{
    \(\(data = 
        Table[\((x - 35)\)\^2\ \((y - 70)\)\^2/100, {x, 30, 40, 0.5}, {y, 60, 
            80, 1}];\)\), "\n", 
    \(\(ListPlot3D[data, MeshRange \[Rule] Automatic];\)\), "\n", 
    \(\(ListDensityPlot[data, MeshRange \[Rule] Automatic];\)\), "\n", 
    \(\(ListContourPlot[data, MeshRange \[Rule] Automatic];\)\)}], "Input"],

Cell["\<\
However, in the case above we know that the rows of data correspond to x \
values between 30 and 40. Likewise the columns of data correspond to y values \
between 60 and 80.  In the next cell the MeshRange option is used to ensure \
the TickMarks are relavent for this data.\
\>", "Text"],

Cell[BoxData[{
    \(\(ListPlot3D[data, MeshRange \[Rule] {{30, 40}, {60, 80}}];\)\), "\n", 
    \(\(ListDensityPlot[data, 
        MeshRange \[Rule] {{30, 40}, {60, 80}}];\)\), "\n", 
    \(\(ListContourPlot[data, 
        MeshRange \[Rule] {{30, 40}, {60, 80}}];\)\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Offset, Scaled", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?Offset\)\)], "Input"],

Cell[BoxData[
    \("Offset[{dx, dy}, position] gives the position of a graphical object \
obtained by starting at the specified position and then moving by absolute \
offset {dx, dy}."\)], "Print"]
}, Open  ]],

Cell[TextData[{
  "In the next cell pnt1 is a red point at ",
  StyleBox["{1,0.025}", "Input",
    FontWeight->"Plain",
    Background->None,
    FontVariations->{"CompatibilityType"->0}],
  ".  The graphic made also shows pnt2, a blue point 20 printer points to the \
right and 10 printer points above ",
  StyleBox["{1,0.025}", "Input",
    FontWeight->"Plain",
    Background->None,
    FontVariations->{"CompatibilityType"->0}],
  ".  Notice distances in printer points aren't related to the scale on the \
axes."
}], "Text",
  CellTags->"Offset"],

Cell[BoxData[{
    RowBox[{
      RowBox[{
        RowBox[{"pnt1", "=", 
          RowBox[{"Graphics", "[", 
            RowBox[{"{", 
              
              RowBox[{\(PointSize[0.03]\), ",", \(RGBColor[0.9, 0, 0]\), ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Point", "[", 
                  StyleBox[\({1, 0.025}\),
                    FontColor->RGBColor[0.8, 0.2, 0.2]], "]"}]}], 
              "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], 
      "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"pnt2", "=", 
          RowBox[{"Graphics", "[", 
            RowBox[{"{", 
              
              RowBox[{\(PointSize[0.03]\), ",", \(RGBColor[0, 0, 0.9]\), ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Point", "[", 
                  StyleBox[\(Offset[{20, 10}, {1, 0.025}]\),
                    FontColor->RGBColor[0.8, 0.2, 0.2]], "]"}]}], 
              "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], 
      "\[IndentingNewLine]"}], "\[IndentingNewLine]", \(Show[{pnt1, pnt2}, 
        PlotRange \[Rule] {{\(-5\), 5}, {\(-0.1\), 0.1}}, 
        Axes -> True];\)}], "Input"],

Cell["The remaining examples used Offset and Scaled.", "Text",
  CellTags->"Scaled"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?Scaled\)\)], "Input"],

Cell[BoxData[
    \("Scaled[{x, y, ... }] gives the position of a graphical object in terms \
of coordinates scaled to run from 0 to 1 across the whole plot in each \
direction. Scaled[{dx, dy, ... }, {x0, y0, ... }] gives a position obtained \
by starting at ordinary coordinates {x0, y0, ... }, then moving by a scaled \
offset {dx, dy, ... }."\)], "Print"]
}, Open  ]],

Cell["\<\
In the next cell pnt1 is a red point positioned such that the distance from \
the left edge of the graphic is 10% of the graphic width, and and the \
distance from the bottom of the graphic is 5% of the graphic height. Also \
shown is pnt2, a blue point 20 printer points to the right and 10 printer \
points above pnt1.\
\>", "Text"],

Cell[BoxData[{
    RowBox[{
      RowBox[{"pnt1", "=", 
        RowBox[{"Graphics", "[", 
          RowBox[{"{", 
            
            RowBox[{\(PointSize[0.03]\), ",", \(RGBColor[0.9, 0, 0]\), ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
                StyleBox[\(Scaled[{0.1, 0.05}]\),
                  FontColor->RGBColor[0.8, 0.2, 0.2]], "]"}]}], 
            "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], "\n", 
    RowBox[{
      RowBox[{"pnt2", "=", 
        RowBox[{"Graphics", "[", 
          RowBox[{"{", 
            
            RowBox[{\(PointSize[0.03]\), ",", \(RGBColor[0, 0, 0.9]\), ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
                StyleBox[\(Offset[{20, 10}, Scaled[{0.1, 0.05}]]\),
                  FontColor->RGBColor[0.8, 0.2, 0.2]], "]"}]}], 
            "\[IndentingNewLine]", "}"}], "]"}]}], 
      ";"}], "\n", \(Show[{pnt1, pnt2}, 
        PlotRange \[Rule] {{\(-5\), 5}, {\(-0.1\), 0.1}}, 
        Axes -> True];\)}], "Input"],

Cell[TextData[{
  "In the next cell pnt1 is a red point at ",
  StyleBox["{1,0.025}", "Input",
    FontWeight->"Plain",
    Background->None,
    FontVariations->{"CompatibilityType"->0}],
  ".  Also shown is pnt2, a blue point at the position ",
  Cell[BoxData[
      \(TraditionalForm\`Scaled[{0.1, 0.05}, {1, 0.025}]\)]],
  " which is to the right of pnt1 by 10% of the graphic width, and above pnt1 \
by 5% of the graphic height.  In addition pnt3 is shown which is a green \
point 10 printer points to the right of pnt2, and 20 printer points higher \
than pnt2."
}], "Text"],

Cell[BoxData[{
    RowBox[{
      RowBox[{"pnt1", "=", 
        RowBox[{"Graphics", "[", 
          RowBox[{"{", 
            
            RowBox[{\(PointSize[0.03]\), ",", \(RGBColor[0.9, 0, 0]\), ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
                StyleBox[\({1, 0.025}\),
                  FontColor->RGBColor[0.8, 0.2, 0.2]], "]"}]}], 
            "\[IndentingNewLine]", "}"}], "]"}]}], 
      ";"}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{"pnt2", "=", 
        RowBox[{"Graphics", "[", 
          RowBox[{"{", 
            
            RowBox[{\(PointSize[0.03]\), ",", \(RGBColor[0, 0, 0.9]\), ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
                StyleBox[\(Scaled[{0.1, 0.05}, {1, 0.025}]\),
                  FontColor->RGBColor[0.8, 0.2, 0.2]], "]"}]}], 
            "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], "\n", 
    RowBox[{
      RowBox[{"pnt3", "=", 
        RowBox[{"Graphics", "[", 
          RowBox[{"{", 
            
            RowBox[{\(PointSize[0.03]\), ",", \(RGBColor[0, 0.9, 0]\), ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Point", "[", 
                
                StyleBox[\(Offset[{10, 20}, 
                    Scaled[{0.1, 0.05}, {1, 0.025}]]\),
                  FontColor->RGBColor[0.8, 0.2, 0.2]], "]"}]}], 
            "\[IndentingNewLine]", "}"}], "]"}]}], 
      ";"}], "\n", \(Show[{pnt1, pnt2, pnt3}, 
        PlotRange \[Rule] {{\(-5\), 5}, {\(-0.1\), 0.1}}, 
        Axes -> True];\)}], "Input"],

Cell["\<\
A practical use of Offset is given in the next cell where it's used to \
specify the position of some text.\
\>", "Text"],

Cell[BoxData[{
    RowBox[{\(plt = 
          Plot[BesselJ[2, x], {x, 0, 8}, DisplayFunction \[Rule] Identity, 
            PlotRange \[Rule] {\(-0.4\), 0.6}];\), 
      "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
    RowBox[{\(pnt = 
          Graphics[\[IndentingNewLine]{PointSize[0.02], 
              Point[{3.05424, BesselJ[2, 3.05424]}]}];\), 
      "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{"txt", "=", 
        RowBox[{"Graphics", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{"Text", "[", 
              RowBox[{"\"\<Local Maxima\>\"", ",", 
                StyleBox[\(Offset[{12, 0}, {3.05424, BesselJ[2, 3.05424]}]\),
                  FontColor->RGBColor[0.8, 0.2, 0.2]], 
                ",", \({\(-1\), \(-1\)}\)}], "]"}], "\[IndentingNewLine]", 
            "}"}], "]"}]}], 
      ";"}], "\[IndentingNewLine]", \(Show[{plt, pnt, txt}, 
        DisplayFunction \[Rule] $DisplayFunction];\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Plot3Matrix", "Section"],

Cell[TextData[{
  "Plot3Matrix is an option for Graphics3D, SurfaceGraphics and funtions that \
return Graphics3D or SurfaceGraphics.  This option is obsolete and I suspect \
it is only supported for backward compatibility.  The functinality of \
Plot3Matrix is provided by the options ",
  ButtonBox["ViewCenter",
    ButtonData:>"ViewCenter",
    ButtonStyle->"Hyperlink"],
  ", ",
  ButtonBox["ViewPoint",
    ButtonData:>"ViewPoint",
    ButtonStyle->"Hyperlink"],
  ", and ",
  ButtonBox["ViewVertical",
    ButtonData:>"ViewVertical",
    ButtonStyle->"Hyperlink"],
  "."
}], "Text",
  CellTags->"Plot3Matrix"]
}, Closed]],

Cell[CellGroupData[{

Cell["PolygonIntersections", "Section"],

Cell["\<\
PolygonIntersections is an option for Graphics3D and funtions that return \
Graphics3D objects.\
\>", "Text",
  CellTags->"PolygonIntersections"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Options[Graphics3D, PolygonIntersections]\)], "Input"],

Cell[BoxData[
    \({PolygonIntersections \[Rule] True}\)], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False]
}, Open  ]],

Cell["\<\
When the setting  PolygonIntersections\[Rule]False  is used the graphics are \
rendered as a collection of non-intersecting triangles.  In the next cell I \
make a Graphics3D object with non-default setting \
(PolygonIntersections\[Rule]False).\
\>", "Text"],

Cell[BoxData[
    \(\(gr = 
        Graphics3D[{\[IndentingNewLine]Polygon[{{0, 0, 1}, {0, 1, 1}, {1, 1, 
                  1}, {1, 0, 1}\ }], \[IndentingNewLine]Polygon[{{0.5, 0, 
                  0}, {0.5, 1, 0}, {0.5, 1, 2}, {0.5, 0, 
                  2}}]\[IndentingNewLine]}, 
          PolygonIntersections \[Rule] False];\)\)], "Input"],

Cell["\<\
I can't inderstand why but my attempt to display the graphics in the next \
cell doesn't work when using Mathematica 4.1 under Windows 98.\
\>", "Text"],

Cell[BoxData[
    \(\(Show[gr, PlotRange -> All];\)\)], "Input"],

Cell["\<\
On my computer the above graphics can be displayed if I nest use of Show, and \
specify (PlotRange->All).\
\>", "Text"],

Cell[BoxData[
    \(\(Show[Show[gr], PlotRange -> All];\)\)], "Input"],

Cell["\<\
The next cell shows us how Mathematica divided the above polygons into \
non-intersecting triangles.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(polygons = Cases[Show[gr], _Polygon, {0, \(-1\)}] // Chop\)], "Input"],

Cell[BoxData[
    \({Polygon[{{0, 0, 0.9999999999999998`}, {0, 0.9999999999999996`, 
            0.9999999999999996`}, {0.5000000000000002`, 1.`, 1.`}}], 
      Polygon[{{0.4999999999999999`, 0, 0}, {0.5`, 1.`, 
            0}, {0.5000000000000002`, 1.`, 1.`}}], 
      Polygon[{{0.4999999999999999`, 0, 0}, {0.5000000000000002`, 1.`, 
            1.`}, {0.5000000000000001`, 0.49999999999999983`, 
            0.9999999999999998`}}], 
      Polygon[{{0.5000000000000002`, 0.5000000000000002`, 
            1.`}, {0.5000000000000002`, 1.`, 1.`}, {0.9999999999999998`, 
            0.9999999999999998`, 0.9999999999999998`}}], 
      Polygon[{{0, 0, 0.9999999999999998`}, {0.5000000000000002`, 1.`, 
            1.`}, {0.5000000000000002`, 0.5000000000000002`, 1.`}}], 
      Polygon[{{0.5000000000000001`, 0.49999999999999983`, 
            0.9999999999999998`}, {0.5000000000000002`, 1.`, 
            1.`}, {0.5000000000000003`, 0.9999999999999998`, 
            1.9999999999999996`}}], 
      Polygon[{{0.4999999999999999`, 0, 0}, {0.5000000000000001`, 
            0.49999999999999983`, 0.9999999999999998`}, {0.4999999999999999`, 
            0, 1.`}}], 
      Polygon[{{0.5`, 0, 0.9999999999999998`}, {0.9999999999999998`, 
            0.9999999999999998`, 0.9999999999999998`}, {1.`, 0, 
            0.9999999999999998`}}], 
      Polygon[{{0, 0, 0.9999999999999998`}, {0.5000000000000002`, 
            0.5000000000000002`, 1.`}, {0.5`, 0, 0.9999999999999998`}}], 
      Polygon[{{0.5000000000000002`, 0.5000000000000002`, 
            1.`}, {0.9999999999999998`, 0.9999999999999998`, 
            0.9999999999999998`}, {0.5`, 0, 0.9999999999999998`}}], 
      Polygon[{{0.4999999999999999`, 0, 1.`}, {0.5000000000000003`, 
            0.9999999999999998`, 1.9999999999999996`}, {0.5`, 0, 
            1.9999999999999993`}}], 
      Polygon[{{0.5000000000000001`, 0.49999999999999983`, 
            0.9999999999999998`}, {0.5000000000000003`, 0.9999999999999998`, 
            1.9999999999999996`}, {0.4999999999999999`, 0, 
            1.`}}]}\)], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Raster", "Section"],

Cell["The next cell makes a matrix of values between 0.08 and 1.", "Text",
  CellTags->"Raster"],

Cell[BoxData[
    \(\(mtrx = Table[\((i + j)\)/25.0, {i, 1, 10}, {j, 1, 15}];\)\)], "Input"],

Cell["\<\
In the next cell Raster makes an array of gray blocks with one block for each \
element of the matrix.  A value 0 in the matrix corrosponds to a black block \
in the graphic, and a value of 1 in the matrix corrosponds to a white block \
in the graphic.  Linear interpolation is used between 0.08 and 1. In this \
example we have a 10\[Cross]15 matrix and the portion of the graphic covered \
with gray blocks goes from 0 to 15 in the horizontal direction, and from 0 to \
10 in the vertical direction.\
\>", "Text"],

Cell[BoxData[
    \(\(Show[Graphics[{Raster[mtrx]}]];\)\)], "Input"],

Cell["\<\
In the next cell the Raster graphic is displayed over a red rectangle \
specified as  Rectangle[{-1,-1},{16,11}].  You can see that the gray blocks \
covers the range described above.\
\>", "Text"],

Cell[BoxData[{
    \(\(rect = 
        Rectangle[{\(-1\), \(-1\)}, {16, 11}];\)\), "\[IndentingNewLine]", 
    \(\(Show[Graphics[{Hue[0], rect, Raster[mtrx]\ }]];\)\)}], "Input"],

Cell[TextData[{
  "In the next cell we give Raster the coordinates {{1,2},{14,9}} as a second \
argument.  Here the second argument of Raster indicates that the array of \
gray blocks should go from 1 to 14 in the horizontal direction and from 2 to \
9 in the vertical direction. \n\nI don't demonstrate it here but Scaled and \
Offset corrdinates can be used in the second argument given to Raster.  See \
another section for an explanation of ",
  ButtonBox["Scaled, Offset",
    ButtonData:>"Offset",
    ButtonStyle->"Hyperlink"],
  "."
}], "Text"],

Cell[BoxData[
    RowBox[{
      RowBox[{"Show", "[", 
        RowBox[{"Graphics", "[", 
          RowBox[{"{", 
            RowBox[{\(Hue[0]\), ",", "rect", ",", 
              RowBox[{"Raster", "[", 
                RowBox[{"mtrx", ",", 
                  StyleBox[\({{1, 2}, {14, 9}}\),
                    FontColor->RGBColor[0.785168, 0.199222, 0.199222]]}], 
                "]"}]}], "}"}], "]"}], " ", "]"}], ";"}]], "Input"],

Cell["\<\
Now consider the next cell where we make a matrix of numbers between  -1.8333 \
and 2.3333.  Raster treats negative matrix elements as 0 and treats matrix \
elements greater than 1 as 1.  As a result a lot of the array blocks are \
black or white.\
\>", "Text"],

Cell[BoxData[{
    \(\(mtrx = 
        Table[\((i + j - 13)\)/6.0, {i, 1, 11}, {j, 1, 16}];\)\), "\n", 
    \(\(Show[Graphics[{Raster[mtrx]}]];\)\)}], "Input"],

Cell["\<\
In the next cell we use the same matrix with elements between -1.8333 and \
2.3333, and we give Raster {-1.9, 2.4} as a third argument.  This says a \
value of  -1.9  in the matrix should make a black cell, a value of  2.4  in \
the matrix should make a white cell.  Linear interpolation is used for matrix \
elements between  -1.9  and  2.4.\
\>", "Text"],

Cell[BoxData[
    RowBox[{
      RowBox[{"Show", "[", 
        RowBox[{"Graphics", "[", 
          RowBox[{"{", 
            RowBox[{"Raster", "[", 
              RowBox[{"mtrx", ",", \({{0, 0}, {10, 15}}\), ",", 
                StyleBox[\({\(-1.9\), 2.4}\),
                  FontColor->RGBColor[0.785168, 0.199222, 0.199222]]}], "]"}],
             "}"}], "]"}], "]"}], ";"}]], "Input"],

Cell["\<\
In the next cell we give Raster {-3, 3} as a third argument.  This says a \
value of -3 in the matrix should make a black cell, a value of 3 in the \
matrix should make a white cell, and a linear interpolation should be used \
between -3 and 3.  Since all elements of the matrix are between -1.8333 and \
2.3333, all blocks in the array are in the middle range of the gray scale.\
\>", "Text"],

Cell[BoxData[
    RowBox[{
      RowBox[{"Show", "[", 
        RowBox[{"Graphics", "[", 
          RowBox[{"{", 
            RowBox[{"Raster", "[", 
              RowBox[{"mtrx", ",", \({{0, 0}, {10, 15}}\), ",", 
                StyleBox[\({\(-3\), 3}\),
                  FontColor->RGBColor[0.785168, 0.199222, 0.199222]]}], "]"}],
             "}"}], "]"}], "]"}], ";"}]], "Input"],

Cell["\<\
In the next cell  (rstr1)  uses black if a matrix element is  -1.9,  and uses \
white if a matrix element is  2.4.  But then  (rstr2)  uses black if a matrix \
element is  2.4, and uses white if a matrix element is  -1.9.  As a result \
the shades in (rstr1) are the complement of the shades in (rstr2).\
\>", "Text"],

Cell[BoxData[{
    RowBox[{
      RowBox[{"rstr1", "=", 
        RowBox[{"Graphics", "[", 
          RowBox[{"{", 
            RowBox[{"Raster", "[", 
              RowBox[{"mtrx", ",", \({{0, 0}, {10, 15}}\), ",", 
                StyleBox[\({\(-1.9\), 2.4}\),
                  FontColor->RGBColor[0.785168, 0.199222, 0.199222]]}], "]"}],
             "}"}], "]"}]}], ";"}], "\n", 
    RowBox[{
      RowBox[{"rstr2", "=", 
        RowBox[{"Graphics", "[", 
          RowBox[{"{", 
            RowBox[{"Raster", "[", 
              RowBox[{"mtrx", ",", \({{0, 0}, {10, 15}}\), ",", 
                StyleBox[\({2.4, \(-1.9\)}\),
                  FontColor->RGBColor[0.785168, 0.199222, 0.199222]]}], "]"}],
             "}"}], "]"}]}], 
      ";"}], "\n", \(Show[GraphicsArray[{rstr1, rstr2}]];\)}], "Input"],

Cell[TextData[{
  "Raster has options ",
  ButtonBox["ColorFunction",
    ButtonData:>"ColorFunction",
    ButtonStyle->"Hyperlink"],
  " and ",
  ButtonBox["ColorFunctionScaling",
    ButtonData:>"ColorFunctionScaling",
    ButtonStyle->"Hyperlink"],
  " which are explained in another section."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Rectangle", "Section"],

Cell[TextData[{
  "Rectangle is a griphics primative. The Rectangle coordinates can be ",
  ButtonBox["Scaled, Offset",
    ButtonData:>"Offset",
    ButtonStyle->"Hyperlink"],
  ", or (Scaled and Offset) and these features are explained in another \
section.  Except for non-stnadard coordinates the basic use of Rectangle is \
well documented.  On the other hand  Rectangle has an interesting feature in \
that it can take a graphics object as a third argument, and I demonstrate \
this feature here.\n\nConsider the two plots made with the next cell."
}], "Text",
  CellTags->"Rectangle"],

Cell[BoxData[{
    \(\(gr1 = 
        Plot[\(Sin[x] Sin[5  x]\)\/x, {x, \(-14\), 14}, 
          PlotRange -> All];\)\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(gr2 = 
        Plot[\(Sin[x] Sin[5  x]\)\/x, {x, 10, 14}, 
          PlotRange -> All];\)\)}], "Input"],

Cell["\<\
A nice presentation of these plots would have the graphic with a smaller plot \
range in the upper right corner used to display the one with a larger plot \
range.  We can do that by giving Rectangle these graphics as third arguments \
in the next cell.\
\>", "Text"],

Cell[BoxData[
    \(\(Show[
        Graphics[{\[IndentingNewLine]Rectangle[{0, 0}, {1.02, 1.02}, gr1], 
            Rectangle[{0.6, 0.7}, {1, 1}, gr2]}], PlotRange -> All, 
        ImageSize -> {500, 400}];\)\)], "Input"],

Cell["\<\
To explain what happens above consider the next cell which is similar to the \
previous cell.  The next cell makes a red rectangle and a blue in the upper \
left corner of the red rectangle (Hue[0] is red, and Hue[0.6] is blue). In \
the previous cell the first Rectangle had (gr1) as a third argument, and that \
makes the rectangle filled in with graphic (gr1)  instead of a solid color.  \
Then the second Rectangle in the previous cell had (gr2) as a third argument, \
and that makes the second rectangle filled in with graphic (gr2) instead of a \
solid color.\
\>", "Text"],

Cell[BoxData[
    \(\(Show[
        Graphics[{\[IndentingNewLine]Hue[0], 
            Rectangle[{0, 0}, {1.02, 1.02}], \[IndentingNewLine]Hue[0.6], 
            Rectangle[{0.6, 0.7}, {1, 
                1}]\[IndentingNewLine]}], \[IndentingNewLine]PlotRange -> 
          All, ImageSize -> {500, 400}];\)\)], "Input"],

Cell["\<\
You can further dress up a graphic with additional graphics primatives as I \
do in the next cell.\
\>", "Text"],

Cell[BoxData[{
    \(\(rect1 = 
        Line[{{0, 0}, {0, 1.05}, {1.05, 1.05}, {1.05, 0}, {0, 
              0}}];\)\), "\n", 
    \(\(rect2 = \[IndentingNewLine]Line[{{0.6, 0.6}, {0.6, 1}, {1, 1}, {1, 
              0.6}, {0.6, 0.6}}];\)\n\), "\[IndentingNewLine]", 
    \(\(Show[
        Graphics[{\[IndentingNewLine]Rectangle[{0, 0}, {1.02, 1.02}, gr1], 
            Rectangle[{0.6, 0.7}, {1, 1}, gr2], rect1, rect2}], 
        PlotRange -> All, ImageSize -> {500, 400}];\)\)}], "Input"],

Cell["\<\
The third argument given to Rectangle doesn't need to have the head Graphics. \
 Any type of Mathematica graphics can be given.  In the next cell one of the \
rectangles is given Graphics3D as a third argument.\
\>", "Text"],

Cell[BoxData[{
    \(\(Block[{$DisplayFunction = Identity}, \[IndentingNewLine]\(gr2 = 
            Plot3D[Sin[x] Exp[y], {x, \(-5\), 5}, {y, \(-2\), 
                2}];\)\[IndentingNewLine]];\)\n\), "\[IndentingNewLine]", 
    \(\(Show[
        Graphics[{\[IndentingNewLine]Rectangle[{0, 0}, {1.02, 1.02}, gr1], 
            Rectangle[{0.6, 0.7}, {1, 1}, gr2]}], PlotRange -> All, 
        ImageSize -> {500, 400}];\)\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Scaled", "Section"],

Cell[TextData[{
  "Scaled is explained in the section for ",
  ButtonBox["Offset, Scaled",
    ButtonData:>"Offset",
    ButtonStyle->"Hyperlink"],
  "."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Shading", "Section"],

Cell[TextData[{
  "Shading is an option for Graphics3D, SurfaceGraphics and funtions that \
return Graphics3D or SurfaceGraphics. The default setting is \
(Shading\[Rule]True) in which case polygons are colored as determined by \
simulated ",
  ButtonBox["Lighting",
    ButtonData:>"LightSources",
    ButtonStyle->"Hyperlink"],
  " or the ",
  ButtonBox["ColorFunction",
    ButtonData:>"ColorFunction",
    ButtonStyle->"Hyperlink"],
  ".  The ",
  ButtonBox["HiddenSurface",
    ButtonData:>"HiddenSurface",
    ButtonStyle->"Hyperlink"],
  " option is used to render the surface as a transparent mesh."
}], "Text",
  CellTags->"Shading"],

Cell[BoxData[{
    \(Options[SurfaceGraphics, Shading]\), "\n", 
    \(Options[Graphics3D, Shading]\)}], "Input"],

Cell[BoxData[{
    \(\(Plot3D[Exp[\(-\((x\^4 + y\^4)\)\)], {x, \(-2\), 2}, {y, \(-2\), 2}, 
        Shading \[Rule] True];\)\), "\n", 
    \(\(Plot3D[Exp[\(-\((x\^4 + y\^4)\)\)], {x, \(-2\), 2}, {y, \(-2\), 2}, 
        Shading \[Rule] False];\)\)}], "Input",
  CellTags->"Shading"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  "SphericalRegion  ",
  StyleBox["(incomplete)",
    FontColor->RGBColor[1, 0, 0]]
}], "Section"],

Cell["\<\
SphericalRegion is an option for Graphics3D, SurfaceGraphics and funtions \
that return Graphics3D or SurfaceGraphics.\
\>", "Text",
  CellTags->"SphericalRegion"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Options[SurfaceGraphics, SphericalRegion]\), "\n", 
    \(Options[Graphics3D, SphericalRegion]\)}], "Input"],

Cell[BoxData[
    \({SphericalRegion \[Rule] False}\)], "Output"],

Cell[BoxData[
    \({SphericalRegion \[Rule] False}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(<< RealTime3D\)], "Input"],

Cell[BoxData[
    \(Get::"noopen" \(\(:\)\(\ \)\) 
      "Cannot open \!\(\"RealTime3D\"\)."\)], "Message"],

Cell[BoxData[
    \($Failed\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(Plot3D[x^2 + y^2, {x, 0, 2}, {y, 0, 2}];\)\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .81114 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% SurfaceGraphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
5.55112e-017 1.04977 -0.0679587 1.04977 [
[.02757 .24618 -6 -8.70276 ]
[.02757 .24618 0 .29724 ]
[.17646 .18758 -17.6983 -9 ]
[.17646 .18758 .30168 0 ]
[.3345 .12542 -5.5867 -9 ]
[.3345 .12542 .4133 0 ]
[.50253 .05935 -15.8219 -9 ]
[.50253 .05935 2.17811 0 ]
[.68156 -0.01098 -4.96123 -9 ]
[.68156 -0.01098 1.03877 0 ]
[.70096 -0.00478 0 -6.26206 ]
[.70096 -0.00478 6 2.73794 ]
[.78313 .12104 0 -6.13858 ]
[.78313 .12104 18 2.86142 ]
[.8565 .23339 0 -6.03127 ]
[.8565 .23339 6 2.96873 ]
[.9224 .33431 0 -5.93715 ]
[.9224 .33431 18 3.06285 ]
[.98191 .42546 0 -5.85393 ]
[.98191 .42546 6 3.14607 ]
[.02411 .26511 -6 -2.74232 ]
[.02411 .26511 0 6.25768 ]
[.01568 .31795 -6 -2.78699 ]
[.01568 .31795 0 6.21301 ]
[.00696 .37264 -6 -2.83339 ]
[.00696 .37264 0 6.16661 ]
[-0.00208 .42927 -6 -2.88161 ]
[-0.00208 .42927 0 6.11839 ]
[-0.01144 .48795 -6 -2.93176 ]
[-0.01144 .48795 0 6.06824 ]
[ 0 0 0 0 ]
[ 1 .81114 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.03716 .25514 m
.68874 0 L
s
.03716 .25514 m
.04196 .25962 L
s
[(0)] .02757 .24618 1 .93395 Mshowa
.18558 .19702 m
.19014 .20174 L
s
[(0.5)] .17646 .18758 .96648 1 Mshowa
.34306 .13535 m
.34735 .14032 L
s
[(1)] .3345 .12542 .86223 1 Mshowa
.51046 .06981 m
.51442 .07504 L
s
[(1.5)] .50253 .05935 .75799 1 Mshowa
.68874 0 m
.69233 .00549 L
s
[(2)] .68156 -0.01098 .65374 1 Mshowa
.125 Mabswid
.06616 .24378 m
.06901 .2465 L
s
.09549 .2323 m
.09832 .23504 L
s
.12517 .22067 m
.12797 .22345 L
s
.1552 .20892 m
.15797 .21172 L
s
.21633 .18498 m
.21903 .18784 L
s
.24744 .1728 m
.25012 .17569 L
s
.27893 .16047 m
.28157 .16339 L
s
.3108 .14799 m
.31341 .15094 L
s
.37572 .12257 m
.37826 .12558 L
s
.40878 .10962 m
.41128 .11266 L
s
.44225 .09652 m
.44471 .09959 L
s
.47614 .08324 m
.47856 .08635 L
s
.54521 .0562 m
.54755 .05937 L
s
.58041 .04242 m
.5827 .04562 L
s
.61605 .02846 m
.6183 .03169 L
s
.65216 .01432 m
.65436 .01759 L
s
.25 Mabswid
.68874 0 m
.96935 .42924 L
s
.68874 0 m
.68263 .00239 L
s
[(0)] .70096 -0.00478 -1 .39157 Mshowa
.7708 .12553 m
.76464 .12778 L
s
[(0.5)] .78313 .12104 -1 .36413 Mshowa
.84407 .23761 m
.83786 .23973 L
s
[(1)] .8565 .23339 -1 .34028 Mshowa
.9099 .3383 m
.90365 .34029 L
s
[(1.5)] .9224 .33431 -1 .31937 Mshowa
.96935 .42924 m
.96306 .43113 L
s
[(2)] .98191 .42546 -1 .30087 Mshowa
.125 Mabswid
.70593 .0263 m
.70226 .02771 L
s
.72272 .05198 m
.71904 .05338 L
s
.73912 .07706 m
.73543 .07845 L
s
.75514 .10158 m
.75145 .10294 L
s
.78611 .14895 m
.78241 .15028 L
s
.80108 .17185 m
.79737 .17317 L
s
.81573 .19425 m
.81201 .19555 L
s
.83006 .21617 m
.82633 .21745 L
s
.8578 .2586 m
.85407 .25986 L
s
.87123 .27915 m
.8675 .28039 L
s
.88439 .29928 m
.88065 .3005 L
s
.89727 .31899 m
.89353 .3202 L
s
.92227 .35722 m
.91851 .3584 L
s
.93439 .37576 m
.93063 .37693 L
s
.94627 .39394 m
.94251 .3951 L
s
.95792 .41176 m
.95416 .41291 L
s
.25 Mabswid
.03716 .25514 m
0 .48963 L
s
.03634 .26033 m
.04245 .25795 L
s
[(0)] .02411 .26511 1 -0.3906 Mshowa
.02795 .31328 m
.03408 .31095 L
s
[(2)] .01568 .31795 1 -0.38067 Mshowa
.01926 .36808 m
.02541 .3658 L
s
[(4)] .00696 .37264 1 -0.37036 Mshowa
.01027 .42483 m
.01644 .42261 L
s
[(6)] -0.00208 .42927 1 -0.35964 Mshowa
.00095 .48363 m
.00715 .48147 L
s
[(8)] -0.01144 .48795 1 -0.3485 Mshowa
.125 Mabswid
.03427 .2734 m
.03794 .27198 L
s
.03218 .28658 m
.03585 .28517 L
s
.03007 .29987 m
.03375 .29847 L
s
.0258 .3268 m
.02949 .32541 L
s
.02364 .34044 m
.02733 .33906 L
s
.02146 .3542 m
.02515 .35283 L
s
.01704 .38208 m
.02074 .38072 L
s
.01481 .3962 m
.0185 .39485 L
s
.01255 .41045 m
.01625 .40911 L
s
.00797 .43933 m
.01168 .43801 L
s
.00565 .45397 m
.00936 .45265 L
s
.00331 .46873 m
.00703 .46743 L
s
.25 Mabswid
.03716 .25514 m
0 .48963 L
s
0 .48963 m
.39787 .81114 L
s
.39787 .81114 m
.40529 .59895 L
s
.40529 .59895 m
.03716 .25514 L
s
.68874 0 m
.96935 .42924 L
s
.96935 .42924 m
1 .6535 L
s
1 .6535 m
.70298 .24544 L
s
.70298 .24544 m
.68874 0 L
s
.03716 .25514 m
0 .48963 L
s
0 .48963 m
.70298 .24544 L
s
.70298 .24544 m
.68874 0 L
s
.68874 0 m
.03716 .25514 L
s
.40529 .59895 m
.96935 .42924 L
s
.96935 .42924 m
1 .6535 L
s
1 .6535 m
.39787 .81114 L
s
.39787 .81114 m
.40529 .59895 L
s
0 0 m
1 0 L
1 .81114 L
0 .81114 L
closepath
clip
newpath
.5 Mabswid
.649 .645 .833 r
.37959 .6681 .40169 .70185 .43948 .69171 .41757 .65763 Metetra
.642 .642 .835 r
.41757 .65763 .43948 .69171 .4778 .68246 .45607 .64804 Metetra
.634 .639 .838 r
.45607 .64804 .4778 .68246 .51671 .67412 .49516 .63934 Metetra
.627 .636 .84 r
.49516 .63934 .51671 .67412 .55623 .66669 .53488 .63156 Metetra
.619 .632 .842 r
.53488 .63156 .55623 .66669 .59644 .6602 .57528 .6247 Metetra
.611 .629 .844 r
.57528 .6247 .59644 .6602 .63739 .65467 .61642 .61879 Metetra
.602 .625 .846 r
.61642 .61879 .63739 .65467 .67912 .65011 .65835 .61384 Metetra
.594 .621 .848 r
.65835 .61384 .67912 .65011 .72171 .64654 .70115 .60988 Metetra
.585 .617 .85 r
.70115 .60988 .72171 .64654 .76523 .644 .74487 .60694 Metetra
.576 .612 .852 r
.74487 .60694 .76523 .644 .80973 .64251 .78959 .60504 Metetra
.568 .608 .853 r
.78959 .60504 .80973 .64251 .85529 .64211 .83539 .60421 Metetra
.559 .603 .854 r
.83539 .60421 .85529 .64211 .90201 .64283 .88234 .6045 Metetra
.55 .599 .855 r
.88234 .6045 .90201 .64283 .94995 .64471 .93054 .60593 Metetra
.54 .594 .856 r
.93054 .60593 .94995 .64471 .99922 .6478 .98007 .60856 Metetra
.65 .651 .838 r
.35704 .63477 .37959 .6681 .41757 .65763 .39521 .62395 Metetra
.642 .648 .841 r
.39521 .62395 .41757 .65763 .45607 .64804 .43391 .61401 Metetra
.635 .645 .843 r
.43391 .61401 .45607 .64804 .49516 .63934 .4732 .60496 Metetra
.627 .642 .846 r
.4732 .60496 .49516 .63934 .53488 .63156 .51312 .59681 Metetra
.619 .638 .848 r
.51312 .59681 .53488 .63156 .57528 .6247 .55372 .58958 Metetra
.61 .635 .85 r
.55372 .58958 .57528 .6247 .61642 .61879 .59507 .58329 Metetra
.602 .631 .852 r
.59507 .58329 .61642 .61879 .65835 .61384 .63722 .57795 Metetra
.593 .627 .854 r
.63722 .57795 .65835 .61384 .70115 .60988 .68024 .57359 Metetra
.584 .622 .856 r
.68024 .57359 .70115 .60988 .74487 .60694 .72419 .57024 Metetra
.575 .618 .858 r
.72419 .57024 .74487 .60694 .78959 .60504 .76914 .56792 Metetra
.566 .613 .859 r
.76914 .56792 .78959 .60504 .83539 .60421 .81518 .56666 Metetra
.557 .609 .861 r
.81518 .56666 .83539 .60421 .88234 .6045 .86239 .56651 Metetra
.547 .604 .862 r
.86239 .56651 .88234 .6045 .93054 .60593 .91085 .56749 Metetra
.538 .599 .863 r
.91085 .56749 .93054 .60593 .98007 .60856 .96067 .56966 Metetra
.651 .657 .843 r
.334 .60184 .35704 .63477 .39521 .62395 .37238 .59067 Metetra
.643 .654 .846 r
.37238 .59067 .39521 .62395 .43391 .61401 .41129 .58037 Metetra
.635 .651 .849 r
.41129 .58037 .43391 .61401 .4732 .60496 .45079 .57095 Metetra
.627 .648 .852 r
.45079 .57095 .4732 .60496 .51312 .59681 .49092 .56243 Metetra
.618 .644 .854 r
.49092 .56243 .51312 .59681 .55372 .58958 .53174 .55482 Metetra
.61 .641 .856 r
.53174 .55482 .55372 .58958 .59507 .58329 .57331 .54814 Metetra
.601 .637 .858 r
.57331 .54814 .59507 .58329 .63722 .57795 .61569 .54241 Metetra
.592 .633 .86 r
.61569 .54241 .63722 .57795 .68024 .57359 .65894 .53765 Metetra
.583 .628 .862 r
.65894 .53765 .68024 .57359 .72419 .57024 .70313 .53388 Metetra
.574 .624 .864 r
.70313 .53388 .72419 .57024 .76914 .56792 .74834 .53113 Metetra
.564 .619 .866 r
.74834 .53113 .76914 .56792 .81518 .56666 .79464 .52944 Metetra
.555 .614 .867 r
.79464 .52944 .81518 .56666 .86239 .56651 .84212 .52884 Metetra
.545 .609 .868 r
.84212 .52884 .86239 .56651 .91085 .56749 .89087 .52937 Metetra
.535 .604 .869 r
.89087 .52937 .91085 .56749 .96067 .56966 .94099 .53107 Metetra
.651 .664 .849 r
.31045 .56928 .334 .60184 .37238 .59067 .34904 .55775 Metetra
.643 .661 .852 r
.34904 .55775 .37238 .59067 .41129 .58037 .38817 .54709 Metetra
.635 .658 .855 r
.38817 .54709 .41129 .58037 .45079 .57095 .42789 .5373 Metetra
.627 .654 .857 r
.42789 .5373 .45079 .57095 .49092 .56243 .46825 .5284 Metetra
.618 .651 .86 r
.46825 .5284 .49092 .56243 .53174 .55482 .5093 .5204 Metetra
.609 .647 .862 r
.5093 .5204 .53174 .55482 .57331 .54814 .55111 .51333 Metetra
.6 .643 .865 r
.55111 .51333 .57331 .54814 .61569 .54241 .59373 .50719 Metetra
.591 .639 .867 r
.59373 .50719 .61569 .54241 .65894 .53765 .63722 .50202 Metetra
.582 .634 .869 r
.63722 .50202 .65894 .53765 .70313 .53388 .68167 .49783 Metetra
.572 .63 .87 r
.68167 .49783 .70313 .53388 .74834 .53113 .72715 .49465 Metetra
.562 .625 .872 r
.72715 .49465 .74834 .53113 .79464 .52944 .77373 .49252 Metetra
.553 .62 .873 r
.77373 .49252 .79464 .52944 .84212 .52884 .8215 .49147 Metetra
.543 .615 .874 r
.8215 .49147 .84212 .52884 .89087 .52937 .87056 .49153 Metetra
.533 .61 .875 r
.87056 .49153 .89087 .52937 .94099 .53107 .921 .49276 Metetra
.652 .67 .855 r
.28633 .53708 .31045 .56928 .34904 .55775 .32515 .52518 Metetra
.644 .667 .858 r
.32515 .52518 .34904 .55775 .38817 .54709 .36452 .51415 Metetra
.636 .664 .861 r
.36452 .51415 .38817 .54709 .42789 .5373 .40447 .50398 Metetra
.627 .661 .863 r
.40447 .50398 .42789 .5373 .46825 .5284 .44507 .4947 Metetra
.618 .657 .866 r
.44507 .4947 .46825 .5284 .5093 .5204 .48637 .48631 Metetra
.609 .654 .869 r
.48637 .48631 .5093 .5204 .55111 .51333 .52842 .47883 Metetra
.6 .649 .871 r
.52842 .47883 .55111 .51333 .59373 .50719 .5713 .47228 Metetra
.59 .645 .873 r
.5713 .47228 .59373 .50719 .63722 .50202 .61506 .46668 Metetra
.581 .641 .875 r
.61506 .46668 .63722 .50202 .68167 .49783 .65978 .46207 Metetra
.571 .636 .877 r
.65978 .46207 .68167 .49783 .72715 .49465 .70554 .45845 Metetra
.561 .631 .878 r
.70554 .45845 .72715 .49465 .77373 .49252 .75242 .45587 Metetra
.55 .626 .88 r
.75242 .45587 .77373 .49252 .8215 .49147 .8005 .45436 Metetra
.54 .621 .881 r
.8005 .45436 .8215 .49147 .87056 .49153 .84988 .45395 Metetra
.53 .615 .882 r
.84988 .45395 .87056 .49153 .921 .49276 .90067 .4547 Metetra
.653 .677 .86 r
.26161 .50522 .28633 .53708 .32515 .52518 .30068 .49295 Metetra
.645 .674 .864 r
.30068 .49295 .32515 .52518 .36452 .51415 .34029 .48153 Metetra
.636 .671 .867 r
.34029 .48153 .36452 .51415 .40447 .50398 .3805 .47098 Metetra
.627 .668 .87 r
.3805 .47098 .40447 .50398 .44507 .4947 .42135 .4613 Metetra
.618 .664 .872 r
.42135 .4613 .44507 .4947 .48637 .48631 .4629 .4525 Metetra
.609 .66 .875 r
.4629 .4525 .48637 .48631 .52842 .47883 .50522 .44461 Metetra
.599 .656 .877 r
.50522 .44461 .52842 .47883 .5713 .47228 .54836 .43765 Metetra
.589 .652 .88 r
.54836 .43765 .5713 .47228 .61506 .46668 .59241 .43162 Metetra
.579 .647 .882 r
.59241 .43162 .61506 .46668 .65978 .46207 .63742 .42656 Metetra
.569 .642 .883 r
.63742 .42656 .65978 .46207 .70554 .45845 .68348 .4225 Metetra
.559 .637 .885 r
.68348 .4225 .70554 .45845 .75242 .45587 .73067 .41946 Metetra
.548 .632 .886 r
.73067 .41946 .75242 .45587 .8005 .45436 .77908 .41748 Metetra
.538 .627 .888 r
.77908 .41748 .8005 .45436 .84988 .45395 .82881 .4166 Metetra
.527 .621 .889 r
.82881 .4166 .84988 .45395 .90067 .4547 .87996 .41685 Metetra
.654 .684 .866 r
.23626 .47368 .26161 .50522 .30068 .49295 .27558 .46103 Metetra
.645 .681 .87 r
.27558 .46103 .30068 .49295 .34029 .48153 .31545 .44922 Metetra
.636 .678 .873 r
.31545 .44922 .34029 .48153 .3805 .47098 .35592 .43827 Metetra
.627 .675 .876 r
.35592 .43827 .3805 .47098 .42135 .4613 .39703 .42818 Metetra
.618 .671 .879 r
.39703 .42818 .42135 .4613 .4629 .4525 .43886 .41897 Metetra
.608 .667 .881 r
.43886 .41897 .4629 .4525 .50522 .44461 .48145 .41066 Metetra
.598 .663 .884 r
.48145 .41066 .50522 .44461 .54836 .43765 .52489 .40326 Metetra
.588 .658 .886 r
.52489 .40326 .54836 .43765 .59241 .43162 .56922 .3968 Metetra
.578 .654 .888 r
.56922 .3968 .59241 .43162 .63742 .42656 .61454 .3913 Metetra
.567 .649 .89 r
.61454 .3913 .63742 .42656 .68348 .4225 .66092 .38678 Metetra
.557 .644 .892 r
.66092 .38678 .68348 .4225 .73067 .41946 .70844 .38327 Metetra
.546 .638 .893 r
.70844 .38327 .73067 .41946 .77908 .41748 .7572 .38081 Metetra
.535 .633 .894 r
.7572 .38081 .77908 .41748 .82881 .4166 .8073 .37944 Metetra
.524 .627 .895 r
.8073 .37944 .82881 .4166 .87996 .41685 .85884 .37919 Metetra
.654 .691 .872 r
.21021 .44245 .23626 .47368 .27558 .46103 .2498 .4294 Metetra
.646 .688 .876 r
.2498 .4294 .27558 .46103 .31545 .44922 .28994 .41719 Metetra
.637 .685 .879 r
.28994 .41719 .31545 .44922 .35592 .43827 .33069 .40583 Metetra
.627 .682 .882 r
.33069 .40583 .35592 .43827 .39703 .42818 .37208 .39532 Metetra
.618 .678 .885 r
.37208 .39532 .39703 .42818 .43886 .41897 .4142 .38569 Metetra
.608 .674 .888 r
.4142 .38569 .43886 .41897 .48145 .41066 .45709 .37695 Metetra
.598 .67 .89 r
.45709 .37695 .48145 .41066 .52489 .40326 .50082 .36911 Metetra
.587 .665 .893 r
.50082 .36911 .52489 .40326 .56922 .3968 .54547 .3622 Metetra
.576 .661 .895 r
.54547 .3622 .56922 .3968 .61454 .3913 .59111 .35624 Metetra
.566 .656 .897 r
.59111 .35624 .61454 .3913 .66092 .38678 .63782 .35125 Metetra
.555 .65 .898 r
.63782 .35125 .66092 .38678 .70844 .38327 .6857 .34726 Metetra
.544 .645 .9 r
.6857 .34726 .70844 .38327 .7572 .38081 .73483 .34431 Metetra
.532 .639 .901 r
.73483 .34431 .7572 .38081 .8073 .37944 .78531 .34244 Metetra
.521 .633 .902 r
.78531 .34244 .8073 .37944 .85884 .37919 .83726 .34168 Metetra
.655 .698 .878 r
.18342 .4115 .21021 .44245 .2498 .4294 .2233 .39804 Metetra
.646 .695 .882 r
.2233 .39804 .2498 .4294 .28994 .41719 .26373 .38542 Metetra
.637 .692 .885 r
.26373 .38542 .28994 .41719 .33069 .40583 .30476 .37364 Metetra
.627 .689 .888 r
.30476 .37364 .33069 .40583 .37208 .39532 .34645 .3627 Metetra
.617 .685 .891 r
.34645 .3627 .37208 .39532 .4142 .38569 .38887 .35264 Metetra
.607 .681 .894 r
.38887 .35264 .4142 .38569 .45709 .37695 .43207 .34345 Metetra
.597 .677 .897 r
.43207 .34345 .45709 .37695 .50082 .36911 .47612 .33516 Metetra
.586 .672 .899 r
.47612 .33516 .50082 .36911 .54547 .3622 .52109 .32779 Metetra
.575 .667 .901 r
.52109 .32779 .54547 .3622 .59111 .35624 .56708 .32135 Metetra
.564 .662 .903 r
.56708 .32135 .59111 .35624 .63782 .35125 .61414 .31588 Metetra
.553 .657 .905 r
.61414 .31588 .63782 .35125 .6857 .34726 .66239 .31141 Metetra
.541 .651 .906 r
.66239 .31141 .6857 .34726 .73483 .34431 .71191 .30795 Metetra
.529 .645 .908 r
.71191 .30795 .73483 .34431 .78531 .34244 .7628 .30556 Metetra
.518 .639 .909 r
.7628 .30556 .78531 .34244 .83726 .34168 .81519 .30428 Metetra
.656 .706 .884 r
.15584 .38082 .18342 .4115 .2233 .39804 .19602 .36694 Metetra
.647 .703 .888 r
.19602 .36694 .2233 .39804 .26373 .38542 .23674 .35389 Metetra
.637 .7 .891 r
.23674 .35389 .26373 .38542 .30476 .37364 .27808 .34167 Metetra
.627 .696 .894 r
.27808 .34167 .30476 .37364 .34645 .3627 .32008 .3303 Metetra
.617 .693 .898 r
.32008 .3303 .34645 .3627 .38887 .35264 .36282 .31979 Metetra
.607 .689 .901 r
.36282 .31979 .38887 .35264 .43207 .34345 .40634 .31014 Metetra
.596 .684 .903 r
.40634 .31014 .43207 .34345 .47612 .33516 .45073 .30139 Metetra
.585 .68 .906 r
.45073 .30139 .47612 .33516 .52109 .32779 .49605 .29354 Metetra
.574 .675 .908 r
.49605 .29354 .52109 .32779 .56708 .32135 .54239 .28662 Metetra
.562 .669 .91 r
.54239 .28662 .56708 .32135 .61414 .31588 .58983 .28065 Metetra
.55 .664 .912 r
.58983 .28065 .61414 .31588 .66239 .31141 .63847 .27567 Metetra
.539 .658 .913 r
.63847 .27567 .66239 .31141 .71191 .30795 .6884 .2717 Metetra
.527 .652 .914 r
.6884 .2717 .71191 .30795 .7628 .30556 .73973 .26878 Metetra
.515 .646 .915 r
.73973 .26878 .7628 .30556 .81519 .30428 .79257 .26696 Metetra
.656 .713 .89 r
.12741 .35038 .15584 .38082 .19602 .36694 .16789 .33607 Metetra
.647 .71 .894 r
.16789 .33607 .19602 .36694 .23674 .35389 .20894 .32258 Metetra
.637 .707 .897 r
.20894 .32258 .23674 .35389 .27808 .34167 .2506 .30991 Metetra
.627 .704 .901 r
.2506 .30991 .27808 .34167 .32008 .3303 .29292 .29808 Metetra
.617 .7 .904 r
.29292 .29808 .32008 .3303 .36282 .31979 .33599 .28711 Metetra
.606 .696 .907 r
.33599 .28711 .36282 .31979 .40634 .31014 .37985 .27699 Metetra
.595 .692 .91 r
.37985 .27699 .40634 .31014 .45073 .30139 .42459 .26776 Metetra
.584 .687 .912 r
.42459 .26776 .45073 .30139 .49605 .29354 .47028 .25942 Metetra
.572 .682 .915 r
.47028 .25942 .49605 .29354 .54239 .28662 .51699 .252 Metetra
.56 .676 .917 r
.51699 .252 .54239 .28662 .58983 .28065 .56483 .24552 Metetra
.548 .671 .918 r
.56483 .24552 .58983 .28065 .63847 .27567 .61388 .24002 Metetra
.536 .665 .92 r
.61388 .24002 .63847 .27567 .6884 .2717 .66424 .23552 Metetra
.524 .659 .921 r
.66424 .23552 .6884 .2717 .73973 .26878 .71603 .23206 Metetra
.511 .652 .922 r
.71603 .23206 .73973 .26878 .79257 .26696 .76936 .22967 Metetra
.657 .721 .896 r
.09806 .32017 .12741 .35038 .16789 .33607 .13887 .30541 Metetra
.647 .718 .9 r
.13887 .30541 .16789 .33607 .20894 .32258 .18025 .29146 Metetra
.637 .715 .903 r
.18025 .29146 .20894 .32258 .2506 .30991 .22224 .27833 Metetra
.627 .711 .907 r
.22224 .27833 .2506 .30991 .29292 .29808 .26491 .26603 Metetra
.616 .708 .91 r
.26491 .26603 .29292 .29808 .33599 .28711 .30832 .25458 Metetra
.605 .704 .913 r
.30832 .25458 .33599 .28711 .37985 .27699 .35255 .24398 Metetra
.594 .699 .916 r
.35255 .24398 .37985 .27699 .42459 .26776 .39765 .23424 Metetra
.582 .694 .919 r
.39765 .23424 .42459 .26776 .47028 .25942 .44372 .2254 Metetra
.57 .689 .921 r
.44372 .2254 .47028 .25942 .51699 .252 .49083 .21746 Metetra
.558 .684 .923 r
.49083 .21746 .51699 .252 .56483 .24552 .53908 .21046 Metetra
.546 .678 .925 r
.53908 .21046 .56483 .24552 .61388 .24002 .58856 .20442 Metetra
.533 .672 .926 r
.58856 .20442 .61388 .24002 .66424 .23552 .63938 .19937 Metetra
.521 .665 .927 r
.63938 .19937 .66424 .23552 .71603 .23206 .69165 .19534 Metetra
.508 .659 .928 r
.69165 .19534 .71603 .23206 .76936 .22967 .74549 .19238 Metetra
.658 .728 .901 r
.06773 .29016 .09806 .32017 .13887 .30541 .10888 .27493 Metetra
.648 .726 .906 r
.10888 .27493 .13887 .30541 .18025 .29146 .1506 .26051 Metetra
.638 .723 .909 r
.1506 .26051 .18025 .29146 .22224 .27833 .19295 .2469 Metetra
.627 .719 .913 r
.19295 .2469 .22224 .27833 .26491 .26603 .23597 .23412 Metetra
.616 .715 .916 r
.23597 .23412 .26491 .26603 .30832 .25458 .27975 .22217 Metetra
.605 .711 .92 r
.27975 .22217 .30832 .25458 .35255 .24398 .32435 .21106 Metetra
.593 .707 .922 r
.32435 .21106 .35255 .24398 .39765 .23424 .36984 .20082 Metetra
.581 .702 .925 r
.36984 .20082 .39765 .23424 .44372 .2254 .41631 .19145 Metetra
.569 .696 .927 r
.41631 .19145 .44372 .2254 .49083 .21746 .46384 .18298 Metetra
.556 .691 .93 r
.46384 .18298 .49083 .21746 .53908 .21046 .51252 .17543 Metetra
.543 .685 .931 r
.51252 .17543 .53908 .21046 .58856 .20442 .56246 .16883 Metetra
.53 .679 .933 r
.56246 .16883 .58856 .20442 .63938 .19937 .61376 .16321 Metetra
.517 .672 .934 r
.61376 .16321 .63938 .19937 .69165 .19534 .66654 .1586 Metetra
.504 .665 .934 r
.66654 .1586 .69165 .19534 .74549 .19238 .72092 .15504 Metetra
.658 .736 .907 r
.03634 .26033 .06773 .29016 .10888 .27493 .07785 .24462 Metetra
.648 .733 .911 r
.07785 .24462 .10888 .27493 .1506 .26051 .11993 .22971 Metetra
.638 .73 .915 r
.11993 .22971 .1506 .26051 .19295 .2469 .16264 .2156 Metetra
.627 .727 .919 r
.16264 .2156 .19295 .2469 .23597 .23412 .20604 .20231 Metetra
.616 .723 .922 r
.20604 .20231 .23597 .23412 .27975 .22217 .2502 .18985 Metetra
.604 .719 .926 r
.2502 .18985 .27975 .22217 .32435 .21106 .29519 .17822 Metetra
.592 .714 .929 r
.29519 .17822 .32435 .21106 .36984 .20082 .34109 .16744 Metetra
.579 .709 .931 r
.34109 .16744 .36984 .20082 .41631 .19145 .38798 .15753 Metetra
.567 .704 .934 r
.38798 .15753 .41631 .19145 .46384 .18298 .43595 .14851 Metetra
.554 .698 .936 r
.43595 .14851 .46384 .18298 .51252 .17543 .48509 .14039 Metetra
.541 .692 .938 r
.48509 .14039 .51252 .17543 .56246 .16883 .5355 .13321 Metetra
.528 .686 .939 r
.5355 .13321 .56246 .16883 .61376 .16321 .5873 .127 Metetra
.514 .679 .94 r
.5873 .127 .61376 .16321 .66654 .1586 .64061 .12178 Metetra
.501 .672 .941 r
.64061 .12178 .66654 .1586 .72092 .15504 .69556 .11761 Metetra
0 g
.25 Mabswid
.68874 0 m
.96935 .42924 L
s
.96935 .42924 m
1 .6535 L
s
1 .6535 m
.70298 .24544 L
s
.70298 .24544 m
.68874 0 L
s
.03716 .25514 m
0 .48963 L
s
0 .48963 m
.70298 .24544 L
s
.70298 .24544 m
.68874 0 L
s
.68874 0 m
.03716 .25514 L
s
.03716 .25514 m
.68874 0 L
s
.03716 .25514 m
.04196 .25962 L
s
[(0)] .02757 .24618 1 .93395 Mshowa
.18558 .19702 m
.19014 .20174 L
s
[(0.5)] .17646 .18758 .96648 1 Mshowa
.34306 .13535 m
.34735 .14032 L
s
[(1)] .3345 .12542 .86223 1 Mshowa
.51046 .06981 m
.51442 .07504 L
s
[(1.5)] .50253 .05935 .75799 1 Mshowa
.68874 0 m
.69233 .00549 L
s
[(2)] .68156 -0.01098 .65374 1 Mshowa
.125 Mabswid
.06616 .24378 m
.06901 .2465 L
s
.09549 .2323 m
.09832 .23504 L
s
.12517 .22067 m
.12797 .22345 L
s
.1552 .20892 m
.15797 .21172 L
s
.21633 .18498 m
.21903 .18784 L
s
.24744 .1728 m
.25012 .17569 L
s
.27893 .16047 m
.28157 .16339 L
s
.3108 .14799 m
.31341 .15094 L
s
.37572 .12257 m
.37826 .12558 L
s
.40878 .10962 m
.41128 .11266 L
s
.44225 .09652 m
.44471 .09959 L
s
.47614 .08324 m
.47856 .08635 L
s
.54521 .0562 m
.54755 .05937 L
s
.58041 .04242 m
.5827 .04562 L
s
.61605 .02846 m
.6183 .03169 L
s
.65216 .01432 m
.65436 .01759 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{250, 202.75},
  ImageMargins->{{0, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40004h0000oA000`40O003h00Ocgoo1@00I7oo003?
Ool01@00Oomoogoo0000I7oo003@Ool00`00Oomoo`1UOol00=5oo`03001oogoo06Aoo`00dWoo00<0
07ooOol0Hgoo003COol00`00Oomoo`1ROol00<moo`05001oogooOol0001TOol00=1oo`<000Yoo`@0
05Moo`00g7oo00<007ooOol00Woo00<007ooOol0E7oo003LOol00`00Oomoo`02Ool00`00Oomoo`1D
Ool00=aoo`03001oogoo009oo`03001oogoo05Aoo`00g7oo00<007ooOol00Woo00<007ooOol0E7oo
003LOol00`00Oomoo`02Ool00`00Oomoo`1DOol00=aoo`03001oogoo009oo`03001oogoo05Aoo`00
gGoo1000Egoo003EOol3001POol00=Aoo`800003Ool0000005moo`00dGoo0`000goo0P00Ggoo003>
Ool30006Ool00`00Ool0001NOol00<aoo`8000Uoo`04001oogoo001MOol00<Uoo`<00003Ool007oo
00Qoo`04001oogoo001MOol008eoo`D000Aoo`8000Eoo`@002Ioo`8000ioo`05001oogooOol0001L
Ool008moo`03001oogoo00Aoo`8000Aoo`03001oogoo009oo`03001oogoo021oo`<0011oo`03001o
ogoo009oo`03001oogoo05Uoo`00Sgoo00<007ooOol03goo00<007ooOol07Woo0P004goo00@007oo
Oomoo`8005]oo`00Sgoo00<007ooOol03goo00<007ooOol06goo10005Goo00<007ooOol00Woo00<0
07ooOol0F7oo002?Ool00`00Oomoo`0;Ool4000KOol3000IOol00`00Oomoo`03Ool00`00Oomoo`1G
Ool008moo`03001oogoo00]oo`03001oogoo01Yoo`8001aoo`03001oogoo00=oo`03001oogoo05Mo
o`00SGoo0`003Goo00<007ooOol05goo0`007Woo00<007ooOol017oo00<007ooOol0EWoo002?Ool0
0`00Oomoo`0;Ool5000COol200000goo001oo`0NOol00`00Oomoo`05Ool00`00Oomoo`1EOol00;9o
o`<002=oo`03001oogoo00Eoo`03001oogoo05Eoo`00[goo0`009Woo00<007ooOol01Goo0P00EWoo
002]Ool2000YOol00`00Oomoo`06Ool00`00Oomoo`1DOol00:Yoo`<00003Ool007oo02Qoo`03001o
ogoo00Moo`03001oogoo05=oo`00Z7oo0P00;Woo00<007ooOol027oo00<007ooOol0DWoo002UOol3
000`Ool00`00Oomoo`08Ool00`00Oomoo`1BOol00:=oo`8003=oo`03001oogoo00Uoo`03001oogoo
055oo`00X7oo1000=7oo00<007ooOol02Woo00<007ooOol0D7oo002MOol30004Ool00`00Oomoo`0a
Ool00`00Oomoo`0:Ool2001AOol009]oo`8003]oo`03001oogoo00Yoo`80055oo`00V7oo0`00?Goo
00<007ooOol037oo00<007ooOol0CWoo001ZOol5000WOol200000goo001oo`0mOol00`00Oomoo`0<
Ool00`00Oomoo`1>Ool006aoo`03001oogoo02Aoo`<0049oo`03001oogoo00eoo`03001oogoo04eo
o`00K7oo00<007ooOol08Woo0P00AWoo00<007ooOol03Goo00<007ooOol0C7oo001/Ool00`00Oomo
o`0OOol30018Ool00`00Oomoo`0=Ool00`00Oomoo`1<Ool006aoo`03001oogoo01aoo`<00003Ool0
07oo04Qoo`03001oogoo00ioo`03001oogoo00Qoo`@000Eoo`8000Eoo`@002moo`00K7oo00<007oo
Ool06Woo0P00CWoo00<007ooOol03Goo00<007oo000027oo00<007ooOol00Woo00<007ooOol00Woo
0P0017oo00<007ooOol00Woo00<007ooOol0;7oo001ZOol3000IOol3001@Ool00`00Oomoo`0?Ool0
0`00Oomoo`06Ool00`00Oomoo`02Ool00`00Oomoo`0=Ool00`00Oomoo`0/Ool006aoo`03001oogoo
01Eoo`8005=oo`03001oogoo011oo`03001oogoo00Eoo`03001oogoo009oo`03001oogoo00eoo`03
001oogoo02aoo`00PGoo0`000Woo00<007ooOol0D7oo00<007ooOol04Goo00<007ooOol017oo00<0
07ooOol00Woo00<007ooOol02Goo1000;goo001nOol3001AOol8000COol00`00Oomoo`04Ool00`00
Oomoo`02Ool00`00Oomoo`09Ool00`00Oomoo`0`Ool007]oo`<004Qoo``000M2_P8001=oo`03001o
ogoo00=oo`03001oogoo009oo`03001oogoo00Uoo`03001oogoo031oo`00NGoo1000@Goo200014:n
00<004:n@[h034:n0P004goo0P001Goo100037oo1@00;Woo001gOol2000mOol8000<@[h00`00@[i2
_P0<@[h00`00@[h0000AOol00`00Ool00018Ool007Aoo`<003Moo`P000A2_P030012_T:n00i2_P03
0012_T:n00]2_P040012_T:n000COol00`00Oomoo`15Ool0079oo`8003=oo`L000e2_P030012_T:n
00i2_P030012_T:n00Y2_P040012_T:n000DOol00`00Oomoo`14Ool006moo`@002aoo`P000A6gP03
0012_T:n00e2_P030012_T:n00i2_P030012_T:n00Y2_P050012_T:n@[h0000COol00`00Oomoo`14
Ool006aoo`<000Aoo`03001oogoo029oo`L000e6gP030012_T:n00e2_P030012_T:n00i2_P030012
_T:n00U2_P050012_T:n@[h0000DOol00`00Oomoo`13Ool006Yoo`8002Eoo`L000A6g@030016gTKN
00e6gP030012_T:n00i2_P030012_T:n00e2_P030012_T:n00U2_P030012_T:n0092_P03001oogoo
019oo`03001oogoo049oo`00Igoo0`008Goo1P0034KM00<004KNA]h03DKN00<004:n@[h03T:n00<0
04:n@[h03D:n00<004:n@[h024:n00<004:n@[h00d:n00<007ooOol04Goo0P00@goo000[Ool40005
Ool20005Ool4000VOol20002Ool00`00Oomoo`0KOol40003B]d00`00A]e6g@0<A]d00`00A]i6gP0>
A]h00`00@[i2_P0>@[h00`00@[i2_P0=@[h00`00@[i2_P07@[h00`00@[i2_P03@[h00`00Oomoo`0@
Ool00`00Ool00013Ool002Yoo`03001oogoo009oo`03001oogoo009oo`8000Aoo`03001oogoo009o
o`03001oogoo021oo`<001eoo`D000Q:g@030016gDKM00a6g@030016gTKN00i6gP030012_T:n00e2
_P030012_T:n00e2_P030012_T:n00I2_PT001Aoo`03001oogoo041oo`00:Woo00<007ooOol00Woo
00<007ooOol03Goo00<007ooOol07Goo0`006goo1@003D[M00<004KMA]d03DKM00<004KNA]h03TKN
00<004:n@[h03D:n00<004:n@[h01T:n400000=2_@00@[d01D:m00<007ooOol04Goo00<007ooOol0
@7oo000ZOol00`00Oomoo`02Ool00`00Oomoo`0=Ool00`00Oomoo`0KOol4000HOol40003B]d00`00
B]e:g@0=B]d00`00A]e6g@0=A]d00`00A]i6gP0=A]h00`00@[i2_P0;@[h;0008@[d00`00@[e2_@06
@[d00`00@[e2_@04@[d00`00Oomoo`0BOol00`00Oomoo`0oOol002Yoo`03001oogoo009oo`03001o
ogoo00Uoo`@001]oo`<001Moo`D000Q:g@03001:gD[M00e:g@030016gDKM00e6g@030016gTKN00e6
gP030012_T:n0092_PP000A2_@030012_D:m00a2_@030012_D:m00I2_@030012_D:m00E2_@03001o
ogoo015oo`03001oogoo03moo`00:Woo00<007ooOol00Woo00<007ooOol02Goo00<007ooOol06Woo
0P005Goo1@003D[M00<004[MB]d03T[M00<004KMA]d034KM00<004KNA]h02dKN1`0034:m00<004:m
@[d03D:m00<004:m@[d01D:m00<004:m@[d01T:m00<007ooOol04Goo00<007ooOol0?Woo000ZOol0
0`00Oomoo`02Ool00`00Oomoo`09Ool00`00Oomoo`0GOol3000COol40003B]d00`00B]e:g@0=B]d0
0`00B]e:g@0>B]d00`00A]e6g@0<A]d00`00A]i6gP02A]h80004A[d00`00@[e2_@0=@[d00`00@[e2
_@0=@[d00`00@[e2_@04@[d00`00@[e2_@07@[d00`00Oomoo`0@Ool2000oOol002]oo`@000aoo`D0
01=oo`800003Ool007oo00ioo`D000Q:g@03001:gD[M00e:g@03001:gD[M00e:g@030016gDKM00Y6
g@L000a6_@030012_D:m00i2_@030012_D:m00e2_@030012_D:m00=2_@030012_D:m00M2_@03001o
ogoo015oo`03001oogoo03eoo`00D7oo0`003Woo1@003T[M00<004[MB]d03D[M00<004[MB]d03D[M
00<004KMA]d00TKM1`0014KM00<004JmA[d03DJm00<004:m@[d03D:m00<004:m@[d03D:m00<004:m
@[d00d:m00<004:m@[d024:m00<007ooOol04Goo00<007ooOol0?7oo001=Ool3000=Ool40003C_d0
0`00B]e:g@0>B]d00`00B]e:g@0=B]d00`00B]e:g@0;B]d6000<A]d00`00A[e6_@0=A[d00`00@[e2
_@0=@[d00`00@[e2_@0=@[d00`00@[e2_@02@[d00`00@[e2_@09@[d00`00Oomoo`0AOol00`00Oomo
o`0kOol004]oo`8000aoo`@000Q>o@03001:gD[M00e:g@03001:gD[M00e:g@03001:gD[M00I:g@D0
00=:g@030016gDKM00a6g@030016_DJm00i6_@030012_D:m00a2_@030012_D:m00i2_@050012_D:m
@[d0000<@[d00`00Oomoo`0@Ool00`00Oomoo`0kOol004Qoo`<0009oo`03001oogoo00Eoo`@000e>
o@03001:gD[M00e:g@03001:gD[M00e:g@04001:gD[MB]d50008B]d00`00A]e6g@0<A]d00`00A[e6
_@0=A[d00`00@[e2_@0=@[d00`00@[e2_@0>@[d01000@[e2_@0034:m00<007ooOol04Goo00<007oo
Ool0>Woo0016Ool2000:Ool30002C_d00`00C_e>o@0=C_d00`00B]e:g@0=B]d00`00B]e:g@0:B]d6
000=B]d00`00A]e6g@0=A]d00`00A[e6_@0=A[d00`00@[e2_@0=@[d00`00@[e2_@0=@[d01000@[e2
_@001D:m2@004goo00<007ooOol0>Goo0013Ool30008Ool40006C_d00`00C_e>o@0=C_d00`00B]e:
g@0=B]d00`00B]e:g@02B]d70004B]d00`00B]e:g@0=B]d00`00A]e6g@0=A]d00`00A[e6_@0=A[d0
0`00@[e2_@0<@[d00`00@[e2_@06@[dA0008@[d00`00Oomoo`0?Ool2000kOol0045oo`800003Ool0
07oo00Eoo`<000]>o@03001>oDkm00e>o@03001:gD[M00]:g@H000a:g@03001:gD[M00e:g@030016
gDKM00e6g@030016_DJm00e6_@030012_D:m00U2_@`000Q2_@8000i2_@03001oogoo015oo`03001o
ogoo03Qoo`00?Woo0`0017oo00<007ooOol00`003dkm00<004kmC_d03Dkm00<004[MB]d01T[M1000
0d[M00<004[MB]d034[M00<004[MB]d03T[M00<004KMA]d034KM00<004JmA[d03DJm00<004:m@[d0
0T:m1`0014Jm00<004:m@[d03D:m0P003d:m00<007ooOol04Goo00<007ooOol0=goo000kOol30007
Ool30002D_d00`00C_e>o@0=C_d2000?C_d01000B]e:gD[M100024[M00<004[MB]d034[M00<004[M
B]d03T[M00<004KMA]d034KM00<004JmA[d01TJm2`002dJm00<004:m@[d03T:m00<004:m@[d03T:m
00<007ooOol047oo00<007ooOol0=goo000?Ool4000VOol20007Ool30006D_d00`00C_e>o@0=C_d0
0`00C_e>o@0=C_d4000=B]d00`00B]e:g@0<B]d00`00B]e:g@0=B]d00`00A]e6g@0:A]d;0008A[d0
0`00A[e6_@0<A[d00`00@[e2_@0=@[d2000?@[d00`00Oomoo`0AOol00`00Oomoo`0fOol000ioo`03
001oogoo009oo`03001oogoo021oo`<0009oo`04001oogooOol3000:D_d00`00C_e>o@0=C_d00`00
C_e>o@09C_d30002C]d00`00B]e:g@0=B]d00`00B]e:g@0<B]d00`00B]e:g@0=B]d00`00A]e6g@02
A]d70004A[d00`00A[e6_@0<A[d00`00A[e6_@0=A[d00`00@[e2_@0<@[d2000@@[d00`00Oomoo`0A
Ool00`00Oomoo`07Ool5000YOol000ioo`03001oogoo009oo`03001oogoo01ioo`8000Ioo`<000iB
o@03001>oDkm00e>o@03001>oDkm00A>o@@000I>g@03001:gD[M00a:g@8000i:g@03001:gD[M00]:
g@H000]6_@030016_DJm00e6_@030016_DJm00e6_@030012_D:m00a2_@8000m2_@03001oogoo011o
o`8000]oo`03001oogoo02Uoo`003Woo00<007ooOol00Woo00<007ooOol06goo0`001Goo0`000U;m
00<005;mD_d03E;m00<004kmC_d03Dkm00<004kmC_d00`002TkM00<004[MB]d03D[M00<004[MB]d0
34[M00<004[MB]d01T[M1@000d[M00<004JmA[d034Jm00<004JmA[d03DJm00<004JmA[d034Jm00<0
04:m@[d034:m0P0044:m00<007ooOol04Goo00<007ooOol027oo00<007ooOol0:Goo000>Ool00`00
Oomoo`02Ool00`00Oomoo`0HOol3000017oo001oogoo10001U;m00<005;mD_d03E;m00<004kmC_d0
2dkm10003TkM00<004[MB]d03D[M00<004[MB]d034[M00@004[MB]e:g@D000Q:g@030016_DJm00a6
_@030016_DJm00a6_@8000i6_@030012_D:m00]2_@030012_@000112_@03001oogoo015oo`03001o
ogoo00Moo`03001oogoo02Uoo`003Woo00<007ooOol00Woo00<007ooOol05Woo0P0017oo0`002e;m
00<005;mD_d03E;m00<004kmC_d01Tkm10000dkM00<004kMC]d03DkM00<004[MB]d03D[M00<004[M
B]d02D[M1P003D[M00<004JmA[d03DJm00<004JmA[d034Jm00<004JmA[d03DJm00<004:m@[d02T:m
00@004:m@[d000m2_@03001oogoo015oo`03001oogoo00Moo`03001oogoo02Uoo`003Woo00<007oo
Ool00Woo00<007ooOol04goo0`000goo0`003e;m00<005;mD_d03E;m00@004kmC_e>o@@000Q>g@03
001>gDkM00e>g@03001:gD[M00e:g@03001:gD[M009:g@H000A:g@03001:gD[M00e:g@030016_DJm
00a6_@030016_DJm00e6_@030016_DJm00e6_@030012_D:m00U2_@040012_D:m0008@[d9000COol0
0`00Oomoo`06Ool00`00Oomoo`0YOol000moo`@001Aoo`@00004Ool000000002D_d00`00D_eBo@0>
D_d00`00D_eBo@0<D_d4000=C]d00`00C]e>g@0=C]d00`00B]e:g@0;B]d6000;B]d00`00B]e:g@0=
B]d00`00A[e6_@0<A[d00`00A[e6_@0=A[d00`00A[e6_@0<A[d00`00@[e2_@06@[d@0008@Yd00`00
Oomoo`0AOol00`00Oomoo`03Ool3000[Ool002Aoo`<0009oo`<000IBo@03001BoE;m00iBo@03001B
oE;m00QBo@<0009Bo@03001>gDkM00e>g@03001>gDkM00a>g@03001:gD[M00I:g@D000=>g@03001:
gD[M00]:g@03001:gD[M00i:g@030016_DJm00a6_@030016_DJm00a6_@030016_DJm00I6_@l000=2
_@030012_D:m0092_@030012WD:M00e2W@03001oogoo015oo`8000Ioo`03001oogoo02Uoo`008Woo
0P000Woo0`002U;m00<005;mD_d03U;m00<005;mD_d015;m0`001U;m00<004kMC]d034kM00<004kM
C]d03DkM00@004[MB]e:g@D000M>g@03001:gD[M00a:g@03001:gD[M00i:g@030016_DJm00a6_@03
0016_DJm00U6_@/000Q6_@030012_D:m00M2_@030012_D:m0092_@030012WD:M00i2W@03001oogoo
00moo`03001oo`00039oo`007goo0`0000Aoo`00000000iBo@03001BoE;m00iBo@03001BoE;m00<0
00YBo@03001>gDkM00a>g@03001>gDkM00]>g@D000e>g@03001:gD[M00a:g@03001:gD[M00e:g@03
0016_DJm00a6_@030016_DJm0096_@L000A6_@030016_DJm00a6_@030012_D:m00M2_@030012_D:m
00=2_@030012WD:M00e2W@03001oogoo019oo`03001oogoo02moo`0077oo0`000Woo0P000UKm00<0
05;mD_d03E;m00<005;mD_d03E;m0`003U;m00<004kMC]d034kM00<004kMC]d01TkM10000dkM00<0
04kMC]d03DkM00<004[MB]d034[M00<004[MB]d03D[M00<004JmA[d01DJm2`002dJm00<004JmA[d0
3DJm00<004:m@[d01D:m0P001T:m00<004:M@Yd03D:M00<007ooOol04Goo00<007ooOol0;goo000J
Ool20003Ool20005E_d00`00D_eBo@0=D_d00`00D_eBo@09D_d30002D_d00`00D_eBo@0<D_d2000>
C]d01000C]e>gDkM100024kM00<004kMC]d034kM0P003T[M00<004[MB]d02d[M2P001dJm00<004Jm
A[d034Jm00<004JmA[d03DJm00@004:m@[e2_@<00092_@030012_D:m00=2_@8000i2W@03001oogoo
019oo`03001oogoo02ioo`0067oo0P000Woo0`0025Km00<005;mD_d03E;m00<005;mD_d015;m1000
1U;m00<005;mD_d035;m00<004kMC]d034kM100034kM00<004kMC]d03DkM00<004[MB]d034[M00<0
04[MB]d01T[M1@000dZm00<004JmA[d02dJm00<004JmA[d03DJm00<004JmA[d034Jm10001D:m00<0
04:m@[d014:m00<004:M@Yd03D:M00<007ooOol04Woo00<007ooOol0;Goo000HOol4000<E_d00`00
D_eBo@0=D_d00`00D_eBo@03000;D_d00`00D_eBo@0<D_d00`00C]e>g@08C]d30002C]d00`00C]e>
g@0<C]d00`00C]e>g@0=C]d00`00B]e:g@0<B]d01000B]e:gD[M1@001dZm00<004JmA[d034Jm00<0
04JmA[d034Jm0P002dJm100024:m00<004:m@[d014:m00<004:M@Yd034:M00<007ooOol04Woo0P00
;Woo000HOol2000?E_d00`00D_eBo@0<D_d3000?D_d00`00D_eBo@0<D_d00`00C]e>g@04C]d30006
C]d00`00C]e>g@0<C]d00`00C]e>g@0=C]d00`00B]e:g@09B]d6000=B[d00`00A[e6_@0<A[d00`00
A[e6_@0<A[d00`00A[e6_@06A[d30004A[d00`00@[e2_@06@[d00`00@[e2_@04@[d00`00@Ye2W@0<
@Yd00`00Oomoo`0@Ool00`00Ool0000^Ool000ioo`@000Ioo`80011Fo@03001BoE;m00QBo@<0009B
o003001BoE;m00eBo@03001BoE;m00eBo@03001>gDkM00<000U>g@03001>gDkM00e>g@03001>gDkM
00a>g@03001:gD[M009:g@L000A:_@03001:_DZm00e:_@030016_DJm00]6_@8000i6_@030016_DJm
00=6_@8000Q6_@030012_D:m00I2_@030012_D:m00=2_@030012WD:M00a2W@03001oogoo01=oo`03
001oogoo02]oo`003Goo00<007ooOol00Woo00<007ooOol00Woo00@007ooOol0011Fo@03001BoE;m
00ABo@<000IBo003001BoE;m00eBo@03001BoE;m00]Bo@@000e>g@03001>gDkM00e>g@03001>gDkM
00Y>g@H000]:_@03001:_DZm00e:_@030016_DJm00a6_@030016_DJm00e6_@030016_@00008000Y6
_@030012_D:m00I2_AL001Aoo`03001oogoo02]oo`003Goo00<007ooOol00Woo00<007ooOol00Woo
0P000Woo00<005KmE_d03UKm00<005;mD_d00`002U;l00<005;mD_d03E;m00<005;mD_d01U;m1000
0e;M00<004kMC]d034kM00<004kMC]d034kM00<004kMC]d01TkM10000dkM00<004ZmB[d034Zm00<0
04ZmB[d03DZm00<004JmA[d034Jm00<004JmA[d02dJm0`001dJm3`0000=2W@00@Yd01D:M00<004:M
@Yd034:M00<007ooOol04Woo00<007ooOol0:Woo000=Ool00`00Oomoo`02Ool00`00Oomoo`02Ool0
0`00Oomoo`02Ool00`00E_eFo@0=E_d3000>D_`00`00D_eBo@0=D_d01000D_eBoE;m100025;M00<0
04kMC]d034kM00<004kMC]d034kM00@004kMC]e>g@@000Q>g@03001:_DZm00a:_@03001:_DZm00a:
_@030016_DJm00e6_@030016_DJm00M6_@d000Q6_@030012WD:M00I2W@030012WD:M00=2W@030012
WD:M00a2W@03001oogoo019oo`03001oogoo02Yoo`003Goo00<007ooOol00Woo00<007ooOol00Woo
00<007ooOol00goo00<005KmE_d02UKm0P000UKl00<005;lD_`03E;l00<005;mD_d035;m10003E;M
00<004kMC]d034kM00<004kMC]d02TkM1@0034kM00<004ZmB[d034Zm0P003TZm00<004JmA[d034Jm
00<004JmA[d00TJm1`0014Jm00<004JmA[d034Jm00<004:M@Yd01d:M00<004:M@Yd00d:M00<004:M
@Yd034:M00<007ooOol04Woo00<007ooOol0:Goo000=Ool00`00Oomoo`02Ool00`00Oomoo`02Ool0
0`00Oomoo`04Ool00`00E_eFo@06E_d30005E_`00`00D_aBo00=D_`00`00D_eBo@08D_d30002D]`0
0`00D]eBg@0=D]d00`00C]e>g@0;C]d00`00C]e>g@06C]d40003C]d00`00C]e>g@0<C]d00`00B[e:
_@0<B[d00`00B[e:_@0=B[d00`00A[e6_@09A[d90009A[d00`00A[e6_@0=A[d00`00@Ye2W@06@Yd0
0`00@Ye2W@04@Yd00`00@Ye2W@0<@Yd00`00Oomoo`0@Ool00`00Ool0000ZOol000eoo`03001oogoo
009oo`03001oogoo009oo`03001oogoo00Eoo`03001FoEKm00=Fo@<000QFo003001Bo5;l00eBo003
001BoE;m00ABo@<000IBg003001BgE;M00aBg@03001>gDkM00a>g@04001>gDkMC]d40008C]d00`00
C]e>g@0<C]d00`00B[e:_@0<B[d00`00B[e:_@0<B[d00`00A[e6_@02A[d70003A[d3000=A[d00`00
A[e6_@0=A[d00`00@Ye2W@06@Yd00`00@Ye2W@03@Yd00`00@Ye2W@0<@Yd00`00Oomoo`0BOol00`00
Oomoo`0XOol000ioo`@000Aoo`03001oogoo00Moo`03001FoEKm008000aFo003001Bo5;l00eBo003
001BoE;m00<000YBg003001BgE;M00aBg@03001>gDkM00Y>g@D000a>g@03001>gDkM00e>g@03001:
_DZm00a:_@03001:_DZm00U:_@L000M6_@<00003A[d004Jm00i6_@030016_DJm00a6_@030012WD:M
00M2W@030012WD:M00=2W@030012WD:M00a2W@03001oogoo019oo`03001oogoo02Moo`005Woo00<0
07ooOol027oo0P003eKl00<005;lD_`035;l0`003U;L00<005;MD]d035;M00<004kMC]d01DkM1@00
0TkL00<004kMC]d034kM00<004kMC]d03DkM00<004ZmB[d02dZm00<004ZmB[d00TZm1`0014Zm00<0
04JmA[d014Jm0`001DJm00<004JmA[d034Jm00<004JmA[d03DJm00<004:M@Yd01d:M00<004:M@Yd0
0T:M00<004:M@Yd034:M00<007ooOol04goo00<007ooOol09Woo000FOol00`00Oomoo`09Ool00`00
E_aFo00>E_`00`00D_aBo008D_`30002D]`00`00D]aBg00<D]`00`00D]eBg@0=D]d00`00C]e>g@05
0007C]`00`00C]e>g@0<C]d00`00C]e>g@0<C]d00`00B[e:_@09B[d7000;B[d01000A[e6_DJm0`00
2DJm00<004JmA[d034Jm00<004JmA[d034Jm00<004:M@Yd01d:M00<004:M@Yd00d:M00<004:M@Yd0
34:M00<007ooOol04Woo00<007ooOol09Woo000FOol2000;Ool00`00E_aFo00>E_`00`00D_aBo004
D_`30006D]`00`00D]aBg00<D]`00`00D]eBg@0;D]d5000<C]`00`00C]e>g@0<C]d00`00C]e>g@0<
C]d00`00B[e:_@02B[d60004B[`00`00B[e:_@0<B[d3000<A[d2000=A[d00`00A[e6_@0=A[d00`00
@Ye2W@07@Yd00`00@Ye2W@03@Yd00`00@Ye2W@0<@Yd00`00Oomoo`0BOol00`00Oomoo`0UOol001Io
o`03001oogoo00]oo`03001Fo5Kl00iFo003001Bo5;l00<000YBg003001Bg5;L00aBg003001BgE;M
00IBg@@000=Bg003001>g4kL00a>g003001>gDkM00a>g@03001>gDkM00Y>g@H000]:_003001:_DZm
00U:_@@000i6_@030016_DJm00a6_@030016_DJm00e6_@030012WD:M00M2W@030012WD:M0092W@03
0012WD:M00a2W@03001oogoo015oo`03001oo`0002Ioo`005Woo00<007ooOol037oo0P003UKl0`00
3U;L00<005;LD]`035;L00@005;MD]eBg@@000QBg003001>g4kL00]>g003001>gDkM00a>g@03001>
gDkM00I>g@@000=>_003001:_4Zl00]:_003001:_DZm00I:_@<000=:_@8000i6_@030016_DJm00a6
_@030016_DJm00a6_@030012WD:M00I2WAL001Aoo`03001oogoo02Aoo`005Goo00<007ooOol03goo
00<005KlE_`025Kl0`000UKl00<005;LD]`035;L00<005;LD]`035;L10003E;L00<004kLC]`02dkL
00<004kMC]d034kM00@004kMC]e>g@@000Q>_003001:_4Zl00]:_003001:_DZm009:_@<000M:_@03
0016_DJm00e6_@030016_DJm00]6_@030016_DJm00I6_@l00092W@030012WD:M00=2W@030012WD:M
00a2W@03001oogoo019oo`03001oogoo02=oo`005Goo0`0047oo00<005KlE_`015Kl0`001UKl00<0
05;LD]`035;L00<005;LD]`025;L0`000U;L00<005;LD]`03E;L00<004kLC]`02dkL00<004kMC]d0
2DkM1P0034jl00<004ZlB[`034Zl10002dZm00<004JmA[d034Jm00<004JmA[d01DJm3`0024JL00<0
04:M@Yd01d:M00<004:M@Yd00T:M00<004:M@Yd034:M00<007ooOol04goo00<007ooOol08Woo000E
Ool00`00Oomoo`0AOol00`00E_aFo003000:E_`00`00D]aBg00<D]`00`00D]aBg004D]`30006D]`0
0`00D]aBg00<D]`00`00C]a>g00<C]`00`00C]e>g@02C]d60004C]`00`00C[a>_00<C[`00`00B[a:
_009B[`4000>B[d00`00A[e6_@09A[d;0007A[`00`00AYa6W00<AY`00`00@Ye2W@08@Yd00`00@Ye2
W@02@Yd00`00@Ye2W@0<@Yd00`00Oomoo`0BOol00`00Oomoo`08Ool50004Ool20005Ool40006Ool0
00Yoo`D000Ioo`03001oogoo019oo`8000iFo003001Bg5;L00aBg003001Bg5;L00<000UBg003001B
g5;L00eBg003001>g4kL00Y>g0H000]>g003001>_4jl00a>_003001:_4Zl00E:_0<000A:_003001:
_DZm00]:_@030016_DJm0096_@L000A:_0030016_4Jl00]6_0030016W4JL00e6W0030012WD:M00M2
W@030012WD:M0092W@030012WD:M00e2W@03001oogoo015oo`8000]oo`03001oogoo00Aoo`8000Ao
o`03001oogoo009oo`03001oogoo00=oo`002Woo00D007ooOomoo`0000Ioo`03001oogoo01=oo`03
001Fo5Kl00aFo003001Bg5;L00aBg0<000eBg003001Bg5;L00eBg003001>g4kL00E>g0D0009>g003
001>g4kL00a>g003001>_4jl00a>_004001:_4ZlB[`30007B[`00`00B[e:_@09B[d7000;B[`00`00
A[a6_00<A[`00`00AYa6W00<AY`00`00@Ye2W@08@Yd00`00@Ye2W@02@Yd00`00@Ye2W@0<@Yd00`00
Oomoo`0COol00`00Oomoo`08Ool00`00Oomoo`0?Ool00`00Oomoo`03Ool000]oo`03001oogoo00Io
o`<001Eoo`03001Fo5Kl00aFo003001Bg5;L00QBg0<0009Bg003001Bg5;L00aBg003001Bg5;L00eB
g003001>g4kL00D000M>g003001>g4kL00a>g003001>_4jl00a>_0<000]:_003001:_DZm009:_@H0
00A:_003001:_4Zl00a:_0030016_4Jl00a6_0030016W4JL00a6W0030012WD:M00Q2W@050012WD:M
@Yd0000?@Yd00`00Oomoo`0BOol00`00Oomoo`08Ool00`00Oomoo`0?Ool00`00Oomoo`03Ool000ao
o`03001oogoo00Eoo`03001oogoo01Ioo`03001Fo5Kl00aFo003001Bg5;L00ABg0<000IBg003001B
g5;L00aBg003001Bg5;L00aBg0@000]>g003001>g4kL00a>g003001>_4jl00U>_0@000]:_0L000Y:
_003001:_4Zl00e:_0030016_4Jl00]6_08000e6W0030012WD:M00U2W@050012WD:M@Yd0000>@Yd0
0`00Oomoo`0COol00`00Oomoo`07Ool00`00Oomoo`0;Ool40006Ool000eoo`03001oogoo00Aoo`03
001oogoo01Moo`03001Fo5Kl00aFo003001Bg5;L00<000YBg003001Bg5;L00aBg003001Bg5;L00QB
g0<0009Bg003001>g4kL00]>g003001>g4kL00a>g003001>_4jl00I>_08000A>_003001:_4Zl009:
_0H000A:_003001:_4Zl00]:_003001:_4Zl00a:_0030016_4Jl00a6_0030016W4JL00a6W0030012
WD:M00Q2W@050012WD:M@Yd0000?@Yd00`00Oomoo`0COol00`00Oomoo`06Ool00`00Oomoo`0;Ool0
0`00Oomoo`07Ool000ioo`03001oogoo00=oo`03001oogoo01Moo`03001Fo5Kl00aFo0<000iBg003
001Bg5;L00]Bg003001Bg5;L00ABg0@000IBg003001>g4kL00]>g003001>g4kL00a>g003001>_4jl
009>_0<000A>_0L000Y:_003001:_4Zl00a:_003001:_4Zl00a:_0030016_4Jl00a6_0030016W4JL
00]6W0030012WD:M00U2W@050012WD:M@Yd0000?@Yd00`00Oomoo`0BOol00`00Oomoo`04Ool3000=
Ool00`00Oomoo`07Ool000Yoo`05001oogooOol00005Ool2000IOol00`00E_aFo008E_`30002D]`0
0`00D]aBg00<D]`00`00D]aBg00<D]`00`00D]aBg003000:D]`00`00C]a>g00<C]`00`00C]a>g00<
C]`400000djl000000040004C[`00`00B[a:_00;B[`00`00B[a:_00;B[`2000=B[`00`00A[a6_00=
A[`00`00AYa6W00;AY`00`00@Ye2W@09@Yd01000@Ye2W@003d:M00<007ooOol04Goo0`001goo00<0
07ooOol02goo1@001Goo000;Ool30006Ool00`00Oomoo`0IOol00`00E_aFo004E_`30006D]`00`00
D]aBg00<D]`00`00D]aBg00:D]`4000>D]`00`00C]a>g00<C]`00`00C]a>g009C]`7000:C[`00`00
B[a:_00<B[`00`00B[a:_00;B[`00`00B[a:_00<B[`00`00A[a6_00<A[`00`00AYa6W00;AY`00`00
@Ye2W@06@YdH000EOol00`00Oomoo`0LOol001Aoo`03001oogoo01Yoo`03001Fo5Kl00<000YBg003
001Bg5;L00aBg003001Bg5;L00EBg0D0009Bg003001Bg5;L00eBg003001>g4kL00]>g003001>g4kL
00I>g0@000=>_003001>_4jl00]>_003001:_4Zl00]:_08000e:_003001:_4Zl00a:_0030016_4Jl
00U6_1T000A6W0050016W4JLAY`0000?@Y`00`00Oomoo`0BOol00`00Oomoo`0LOol001Aoo`03001o
ogoo01]oo`8000iBg003001Bg5;L00aBg003001Bg5;L00D000MBg003001Bg5;L00eBg003001>g4kL
00]>g004001>g4kLC]`40007C[`00`00C[a>_00<C[`00`00B[a:_00;B[`00`00B[a:_00<B[`00`00
B[a:_00;B[`00`00A[a6_002A[`70004AY`00`00AYa6W00;AY`00`00AYa6W009AY`01000AYa6W000
3d:L00<007ooOol04goo00<007ooOol06goo000COol2000NOol00`00D]aBg00<D]`00`00D]aBg00<
D]`4000<D]`00`00D]aBg00=D]`00`00C]a>g009C]`6000;C[`00`00C[a>_00;C[`2000=B[`00`00
B[a:_00;B[`00`00B[a:_005B[`;000;AY`00`00AYa6W00;AY`00`00AYa6W00:AY`01000AYa6W000
3d:L00<007ooOol04goo00<007ooOol06Woo000COol00`00Oomoo`0NOol00`00D]aBg00<D]`00`00
D]aBg008D]`30002D]`00`00D]aBg00<D]`00`00D]aBg00<D]`00`00C]a>g005C]`8000>C[`00`00
C[a>_00;C[`00`00B[a:_00<B[`00`00B[a:_008B[`;0007BY`00`00AYa6W00<AY`00`00AYa6W00;
AY`00`00AYa6W009AY`01@00AYa6W4JL00003T:L00<007ooOol04goo00<007ooOol06Woo000COol0
0`00Oomoo`0OOol00`00D]aBg00<D]`00`00D]aBg004D]`30006D]`00`00D]aBg00;D]`00`00D]aB
g00=D]`00`00C]a>g0080003C[`00`00C[a>_00<C[`2000=C[`00`00B[a:_00;B[`00`00B[a:_002
B[`60004B[`00`00BYa:W00;BY`00`00AYa6W00=AY`00`00AYa6W00;AY`00`00AYa6W009AY`01000
AYa6W0003d:L00<007ooOol04Goo00<007oo00006goo000COol00`00Oomoo`0POol00`00D]aBg00<
D]`00`00D]aBg0030009D]`00`00D]aBg00<D]`00`00D]aBg00;D]`5000014jl000000001djl00<0
04jlC[`034jl00<004jlC[`034jl00<004ZlB[`024Zl1`002TZl00<004ZLBY`034ZL00<004JLAY`0
34JL00<004JLAY`02dJL0P002dJL00@004JLAY`000i2W003001oogoo01Aoo`03001oogoo01Qoo`00
4goo0P008Woo00<005;LD]`02e;L0`003E;L00<005;LD]`035;L00<005;LD]`01U;L10000e;L0`00
2djl00<004jlC[`034jl00<004jlC[`02djl00<004ZlB[`00TZl1P0014Zl00<004ZlB[`02dZl00<0
04ZLBY`034ZL00<004JLAY`034JL00<004JLAY`02dJL00<004JLAY`02TJL00<004JL00003d:L00<0
07ooOol04goo00<007ooOol067oo000COol00`00Oomoo`0ROol00`00D]aBg007D]`30002D]`00`00
D]aBg00<D]`00`00D]aBg00<D]`01000D]aBg5;L10001E;L0`003Djl0P003Tjl00<004jlC[`024jl
1`002TZl00<004ZlB[`034Zl00<004ZLBY`02dZL0P003DJL00<004JLAY`034JL00<004JLAY`02DJL
00@004JLAY`000i2W003001oogoo01Aoo`03001oogoo01Moo`002goo0`0017oo00<007ooOol097oo
00<005;LD]`015;L0P001U;L00<005;LD]`035;L00<005;LD]`02e;L10001U;L0`000e;L00<004jl
C[`02djl00<004jlC[`034jl00<004jlC[`00Tjl1P0014jl00<004ZlB[`02dZl00<004ZlB[`02dZl
0P003DZL00<004JLAY`034JL00<004JLAY`034JL00<004JLAY`02DJL00@004JLAY`000i2W003001o
ogoo01Aoo`03001oogoo01Ioo`0037oo00<007ooOol00goo00<007ooOol09Goo00<005;LD]`00`00
2E;L00<005;LD]`035;L00<005;LD]`01e;L0`000U;L00<005;LD]`00U;L0`001e;L00<004jlC[`0
2djl00<004jlC[`02Tjl1P002Tjl00<004ZlB[`034Zl00<004ZlB[`02dZl00<004ZLBY`034ZL00<0
04JLAY`034JL00<004JLAY`02dJL00<004JLAY`02TJL00<004JL00003T:L00<007ooOol04goo0P00
67oo000<Ool00`00Oomoo`03Ool2000WOol2000=D]`00`00D]aBg00;D]`00`00D]aBg004D]`30006
D]`4000:D]`2000=C[`00`00C[a>_005C[`40003C[`00`00C[a>_00;C[`00`00B[a:_00;B[`2000=
B[`00`00BYa:W00<BY`00`00AYa6W00;AY`00`00AYa6W005AY`V000FOol00`00Oomoo`0EOol000Qo
o`H000Aoo`03001oogoo02Moo`03001Bg5;L00]Bg003001Bg5;L00aBg003001Bg5;L00<000MBg0<0
00iBg003001>_4jl00]>_004001>_4jlC[`40007C[`00`00C[a>_00<C[`00`00B[a:_00;B[`00`00
B[a:_00<B[`00`00BYa:W00;BY`00`00AYa6W005AY`?0007AY`00`00AYa6W009AY`01000AYa6W000
3T:L00<007ooOol04goo00<007ooOol05Goo0009Ool01000Oomoo`001Goo00<007ooOol0:7oo00<0
05;LD]`02e;L00<005;LD]`02U;L10001e;L0`000e;L00<005;LD]`035;L00<004jlC[`02Djl1@00
34jl00<004jlC[`02djl0P003DZl00<004ZlB[`02dZl00<004ZLBY`01DZL3`001dJL00<004JLAY`0
2dJL00<004JLAY`02TJL00<004JL00003T:L00<007ooOol057oo00<007ooOol057oo0009Ool01000
Oomoo`001Goo00<007ooOol0:Goo00<005;LD]`02e;L00<005;LD]`01E;L1@000U;L00<005;LD]`0
0U;L0`001e;L00<005;LD]`035;L00<004jlC[`014jl1@000Tjl00<004jlC[`034jl00<004jlC[`0
2djl00<004ZlB[`034Zl00<004ZlB[`024Zl2`001dZL00<004JLAY`02dJL00<004JLAY`034JL00<0
04JLAY`02TJL00<004JL00003T:L00<007ooOol057oo00<007ooOol04goo000:Ool00`00Ool00004
Ool2000/Ool00`00D]aBg00;D]`00`00D]aBg0050007D]`4000;D]`00`00D]aBg00;D]`00`00C[a>
_0050007C[`00`00C[a>_00;C[`2000=C[`00`00B[a:_00;B[`00`00B[a:_002B[`60004BY`00`00
BYa:W00;BY`00`00AYa6W00<AY`00`00AYa6W00;AY`00`00AYa6W00:AY`00`00AY`0000>@Y`00`00
Oomoo`0COol3000DOol000]oo`8000Aoo`03001oogoo02]oo`03001Bg5;L00]Bg0@000UBg0@000iB
g003001Bg5;L00UBg0D000a>_003001>_4jl00]>_003001>_4jl00a>_003001:_4Zl00Q:_0L000Y:
W003001:W4ZL00a:W0030016W4JL00]6W0030016W4JL00a6W0030016W4JL00Y6W0030016W00000i2
W003001oogoo01Aoo`03001oogoo019oo`004Goo00<007ooOol0;7oo00<005;LD]`01e;L0`000U;L
00<005;LD]`01E;L0`0015;L00<005;LD]`02e;L00<005;LD]`01E;L1@000U:l00<004jlC[`034jl
00<004jlC[`02djl00<004jlC[`02djl00<004ZlB[`00TZl1P0014Zl00<004ZLBY`02dZL00<004ZL
BY`02dZL00<004JLAY`034JL00<004JLAY`02dJL00<004JLAY`02dJL0P003T:L00<007ooOol05Goo
00<007ooOol04Goo000AOol00`00Oomoo`0]Ool00`00D]aBg004D]`20006D]`00`00D]aBg002D]`2
0007D]`00`00D]aBg00<D]`00`00D]aBg0050007D[`00`00C[a>_00;C[`00`00C[a>_00<C[`00`00
C[a>_008C[`7000:B[`00`00BYa:W00<BY`00`00BYa:W00;BY`00`00AYa6W00;AY`00`00AYa6W00<
AY`00`00AYa6W00;AY`2000>@Y`00`00Oomoo`0DOol00`00Oomoo`0AOol0015oo`03001oogoo02io
o`03001Bg5;L00<000QBg003001Bg000008000YBg003001Bg5;L00YBg0D000]B_003001>_4jl00a>
_003001>_4jl00]>_003001>_4jl009>_0H000A>_003001:_4Zl00]:_003001:W4ZL00]:W003001:
W4ZL00a:W0030016W4JL00]6W0030016W4JL00]6W0030016W4JL00]6W08000i2W003001oogoo01Eo
o`03001oogoo00Ioo`D000Eoo`004Goo0P00<7oo0P002U;L0`003U;L00<005;LD]`01E;L1@000U:l
00<005:lD[`02e:l00<004jlC[`034jl00<004jlC[`024jl1`002Tjl00<004ZlB[`034Zl00<004ZL
BY`02dZL00<004ZLBY`02dZL00<004JLAY`02dJL00<004JLAY`034JL00<004JLAY`02dJL0P003T:L
00<007ooOol05Goo00<007ooOol01Goo00D007ooOomoo`0000Eoo`004Goo00<007ooOol0<7oo00<0
05;LD]`01E;L0`000e;L00<005;LD]`035;L00<005;LD]`01@001e:l00<005:lD[`02e:l00<004jl
C[`034jl00@004jlC[a>_0L000=>_003001>_4jl00]>_003001:_4Zl00]:_08000a:W003001:W4ZL
00a:W0030016W4JL00]6W0030016W4JL00]6W0030016W4JL00a6W0030012W4:L00a2W003001oogoo
01Aoo`8000Qoo`03001oogoo00Ioo`0047oo00<007ooOol0<Woo00@005;LD]aBg0<000MBg003001B
g5;L00]Bg0@000]B_003001B_5:l00aB_003001>_4jl00Y>_0H000U>_003001>_4jl00a>_003001:
_4Zl00]:_003001:W4ZL00]:W003001:W4ZL00]:W0030016W4JL00]6W0030016W4JL00E6W2H001Mo
o`03001oogoo00Ioo`03001oogoo00Eoo`0047oo00<007ooOol0<goo0`002e;L00<005;LD]`01e;L
0`000U;L00<005:lD[`02e:l00<005:lD[`02e:l00<004jlC[`01Tjl10000djl00<004jlC[`02Tjl
00<004jlC[`02djl0P003DZl00<004ZLBY`02dZL00<004ZLBY`024ZL6@001dJL00<004JLAY`02dJL
0P003T9l00<007ooOol05Goo00<007ooOol01Woo00<007ooOol017oo000@Ool3000`Ool300000goo
001Bg00;D]`00`00D]aBg004D]`30006D]`00`00D[aB_00;D[`00`00D[aB_00;D[`01000C[a>_4jl
10001djl00<004jlC[`02djl00<004jlC[`02djl00<004ZlB[`034Zl00<004ZLBY`02TZL00<004ZL
BY`00TZL1P0014ZL00<004JLAY`02dJL00<004JLAY`02dJL00<004JLAY`034JL00<0049l@W`0349l
00<007ooOol05Goo00<007ooOol01goo00<007ooOol00goo0007Ool30006Ool00`00Oomoo`0]Ool3
0004Ool00`00D]aBg00;D]`00`00D]aBg0030009D]`00`00D[aB_00<D[`00`00D[aB_009D[`5000<
C[`00`00C[a>_00:C[`2000=C[`00`00B[a:_00;B[`00`00BYa:W005BY`:000:BY`00`00AYa6W00;
AY`00`00AYa6W00<AY`00`00AYa6W00<AY`00`00@Wa2O00<@W`00`00Oomoo`0DOol20004Ool01@00
Oomoogoo00001Goo0006Ool01@00Oomoogoo00001Goo00<007ooOol0:Woo0`0027oo00<005;LD]`0
2U;L0`003E;L00<005:lD[`02e:l00<005:lD[`01E:l1@000U:l00<004jlC[`034jl00<004jlC[`0
2Tjl00<004jlC[`034jl00<004ZlB[`024Zl2P001dZL00<004ZLBY`02dZL00<004JLAY`02dJL00<0
04JLAY`034JL00<004JLAY`02dJL00<0049l@W`0349l00<007ooOol04Goo0`0000=oo`00Ool017oo
0`001Woo0006Ool01@00Oomoogoo00001Goo00<007ooOol09goo0`0037oo00<005;LD]`01E;L1000
0U;K00<005;LD]`035;L00<005:lD[`02e:l00<005:lD[`01@001e:l00<004jlC[`02djl0P0034jl
00<004jlC[`02djl00<004ZlB[`00TZl1P0014ZL00<004ZLBY`02TZL00<004ZLBY`034ZL00<004JL
AY`02dJL00<004JLAY`02dJL00<004JLAY`034JL00<0049l@W`0349l00<007ooOol037oo100017oo
00<007ooOol037oo0006Ool01@00Oomoogoo000017oo0P009goo0P0047oo00<005;LD]`010001e;K
00<005;LD]`035;L00<005:lD[`02E:l1@002e:l00<004jlC[`034jl00<004jlC[`02djl00<004jl
C[`024jl1`002TZL00<004ZLBY`02dZL00<004ZLBY`02dZL00<004JLAY`02dJL0P003DJL00<004JL
AY`02dJL0P003D9l00<007ooOol02Goo0`0027oo00<007ooOol037oo0006Ool40005Ool00`00Oomo
o`0SOol3000COol2000<D]/00`00D]aBg00;D]`00`00D[aB_005D[`50002D[/00`00D[aB_00;D[`0
0`00C[a>_00<C[`00`00C[a>_00:C[`00`00C[a>_002C[`60004CY`00`00BYa:W00;BY`00`00BYa:
W00:BY`00`00BYa:W00<BY`00`00AYa6W00;AY`00`00AYa6W00;AY`00`00AYa6W00<AY`2000=@W`0
0`00Oomoo`05Ool3000<Ool00`00Oomoo`0;Ool000Ioo`03001oogoo00Ioo`03001oogoo021oo`<0
01Moo`03001Bfe;K00]Bf`03001Bg5;L00]Bg003001B_5:l00D000MB^`03001B_5:l00]B_003001>
_4jl00a>_003001>_4jl00M>_0L000Y>W003001:W4ZL00]:W003001:W4ZL00]:W003001:W4ZL00]:
W0030016W4JL00a6W0030016W4JL00]6W0030016W4JL00]6W08000e2O004001oogooOol4000?Ool0
0`00Oomoo`0;Ool000Moo`03001oogoo00Eoo`03001oogoo01eoo`<001]oo`03001Bfe;K00YBf`03
001Bg5;L00]Bg0@000]B^`03001B_5:l00aB_003001>_4jl00]>_004001>_4jlC[`70003C[/00`00
CYa>W00;CY`00`00BYa:W00;BY`00`00BYa:W00;BY`00`00BYa:W00;BY`00`00AYa6W00<AY`00`00
AYa6W00;AY`00`00AYa6W00;AY`2000=@W`3000COol00`00Oomoo`0;Ool000Qoo`<000Aoo`8001]o
o`<001ioo`03001Bfe;K00]Bf`03001Bg5;L00MBg0<0009B^`03001B^e:k00]B^`03001B_5:l00aB
_003001>_4jl00U>_0H000U>^`03001>W4jL00a>W003001:W4ZL00]:W003001:W4ZL00Y:W003001:
W4ZL00a:W0030016W4JL00]6W0030016W4JL00]6W0030016W4JL00]6W0030012O00000a2O003001o
ogoo01=oo`03001oogoo00]oo`003goo00<007ooOol05goo0`008Woo00<005;KD]/02e;K00<005;L
D]`015;L0P001U:k00<005:kD[/02e:k00<005:lD[`02e:l00<004jlC[`01Djl1@000Tjk00<004jk
C[/02Tjk00<004jLCY`02djL0P0034ZL00<004ZLBY`02dZL00<004ZLBY`02dZL00<004JLAY`01DJL
<`0057oo00<007ooOol02goo000>Ool00`00Oomoo`0EOol3000VOol00`00D]]Bf`0;D]/00`00D]aB
g0030008D[/00`00D[]B^`0<D[/00`00D[aB_00;D[`00`00C[a>_0050006C[/00`00C[]>^`0;C[/0
0`00CYa>W00;CY`00`00BYa:W00;BY`00`00BYa:W00:BY`00`00BYa:W005BY`?0007AY`00`00AYa6
W00;AY`00`00AWa6O00;AW`2000=@W`00`00Oomoo`0AOol00`00Oomoo`0;Ool000ioo`03001oogoo
019oo`<002Yoo`03001Bfe;K00UBf`@000aB^`03001B^e:k00aB^`03001B_5:l00UB_0D000]>^`03
001>^djk00Y>^`8000e>W003001:W4ZL00Y:W003001:W4ZL00E:W0h000M:W0030016W4JL00]6W003
0016W4JL00]6W0030016O4Il00]6O0030012O00000a2O003001oogoo015oo`03001oogoo00]oo`00
3Woo00<007ooOol03goo0`00;Goo00<005;KD]/01E;K1@000U:k00<005:kD[/02e:k00<005:kD[/0
2e:k00<005:lD[`01E:l1@000U:k00<004jkC[/02djk00<004jkC[/02Tjk00<004jLCY`034jL00<0
04ZLBY`01dZL2P001dZK00<004ZLBY`02dZL00<004JLAY`034JL00<004JLAY`02dJL00<004IlAW`0
2dIl00<0049l0000349l00<007ooOol047oo00<007ooOol02goo000>Ool2000=Ool3000aOol00`00
D]]Bf`050007D[/00`00D[]B^`0;D[/00`00D[]B^`0;D[/00`00D[aB_0050006D[/00`00C[]>^`0;
C[/2000<C[/00`00CYa>W00;CY`01000BYa:W4ZL1`000dZK00<004ZKBY/02TZK00<004ZLBY`034ZL
00<004JLAY`02dJL00<004JLAY`02dJL00<004IlAW`02dIl00@0049l@W`000]2O003001oogoo015o
o`03001oogoo00Yoo`003Woo00<007ooOol02Woo0P00=Goo0`002e:k00<005:kD[/035:k00<005:k
D[/02E:k1@002e:k00<004jkC[/02djk00<004jkC[/02djk00<004jLCY`024jL1`002DZK00<004ZK
BY/02dZK00<004ZLBY`02dZL00<004JLAY`034JL00<004JLAY`02dJL00<004IlAW`02dIl00<0049l
0000349l00<007ooOol047oo00<007ooOol02Woo000>Ool00`00Oomoo`07Ool3000hOol00`00D[]B
^`0;D[/00`00D[]B^`0;D[/00`00D[]B^`05D[/50002D[/00`00D[]B^`0:D[/00`00C[]>^`0<C[/0
0`00C[]>^`0:C[/00`00CYa>W002CY`60004CY/00`00BY]:V`0:BY/00`00BY]:V`0;BY/00`00BYa:
W00;BY`00`00AYa6W00;AY`00`00AYa6W00;AY`00`00AWa6O00;AW`01000@Wa2O0002d9l00<007oo
Ool047oo00<007ooOol02Woo000=Ool00`00Oomoo`05Ool3000lOol00`00D[]B^`0;D[/00`00D[]B
^`0;D[/00`00D[]B^`050007D[/00`00D[]B^`0:D[/00`00C[]>^`0<C[/00`00C[]>^`07C[/7000:
CY/00`00BY]:V`0;BY/00`00BY]:V`0:BY/00`00BYa:W00;BY`00`00AYa6W00<AY`00`00AYa6W00;
AY`00`00AWa6O00;AW`01000@Wa2O0002d9l00<007ooOol03goo00<007ooOol02Woo000=Ool30002
Ool3000oOol00`00D[]B^`0<D[/00`00D[]B^`09D[/5000;D[/00`00D[]B^`0;D[/00`00C[]>^`0;
C[/01000C[]>^djk1`000djK00<004jKCY/02djK00<004ZKBY/02TZK00<004ZKBY/02dZK00<004ZL
BY`02dZL00<004JLAY`02dJL00<004JLAY`02dJL00<004IlAW`02dIl00@0049l@W`000]2O003001o
ogoo00moo`03001oogoo00Yoo`0017oo10001Goo00<007oo00000P00@goo00<005:kD[/02e:k00<0
05:kD[/01E:k1@000U:k00<005:kD[/02e:k00<005:kD[/02U:k00<004jkC[/02Tjk1P002DjK00<0
04jKCY/02djK00<004ZKBY/02dZK00<004ZKBY/02TZK00<004ZLBY`02dZL00<004JLAY`034JL00<0
04JLAY`02dJL00<004IlAW`02dIl00@0049l@W`000]2O003001oogoo00ioo`03001oogoo00Yoo`00
0goo00<007ooOol00Woo00<007ooOol00Woo0P00Agoo00<005:kD[/02e:k00<005:kD[/01@001e:k
00<005:kD[/02e:k00<005:kD[/02U:k00<004jkC[/01Djk10000djk00<004jKCY/02TjK00<004jK
CY/02djK00<004ZKBY/02TZK00<004ZKBY/02dZK00<004ZLBY`02dZL00<004JLAY`02dJL00<004JL
AY`02dJL00<004IlAW`02dIl00D0049l@Wa2O00000Y2O003001oogoo00ioo`03001oogoo00Yoo`00
0goo00<007ooOol00Woo00<007ooOol00goo00<007ooOol0AWoo00<005:kD[/02U:k10002e:k00<0
05:kD[/035:k00<005:kD[/02E:k00@004jkC[]>^`@000M>^`03001>VdjK00]>V`03001>VdjK00]>
V`03001:VdZK00Y:V`03001:VdZK00]:V`03001:W4ZL00Y:W0030016W4JL00E6W3<0011oo`03001o
ogoo00Uoo`000goo00<007ooOol00Woo00<007ooOol017oo0P00Agoo00<005:kD[/01U:k0`000U:k
00<005:kD[/02e:k00<005:kD[/02e:k00<005:kD[/025:k1@0034jk00<004jKCY/02TjK0P0034jK
00<004ZKBY/02dZK00<004ZKBY/02TZK00<004ZLBY`01DZL3P001dIk00<004IkAW/02dIk00<004Ik
AW/02dIk00@004IkAW/000]6N`03001oogoo00eoo`03001oogoo00Uoo`0017oo10002Goo00<007oo
Ool0A7oo00<005:kD[/015:k0P001E:k00<005:kD[/035:k00<005:kD[/02e:k00@005:kD[]B^`H0
00=B^`03001>^djk00]>^`03001>VdjK00]>V`03001>VdjK00]>V`03001:VdZK00Y:V`03001:VdZK
00E:V`d000M:V`030016NdIk00]6N`030016NdIk00]6N`030016NdIk00]6N`050016NdIkAW/0000:
AW/00`00Oomoo`0=Ool00`00Oomoo`09Ool000=oo`03001oogoo009oo`03001oogoo00Moo`03001o
ogoo04Aoo`03001B^e:k00<000QB^`03001B^e:k00aB^`03001B^e:k00UB^`D000UB^`03001>^djk
00a>^`03001>VdjK00]>V`03001>VdjK00Y>V`03001:VdZK00E:V`d000M:V`03001:VdZK00Y:V`03
0016NdIk00a6N`030016NdIk00]6N`030016NdIk00]6N`050016NdIkAW/0000:AW/00`00Oomoo`0<
Ool00`00Oomoo`09Ool000=oo`03001oogoo009oo`03001oogoo00Qoo`03001oogoo04Aoo`8000aB
^`03001B^e:k00]B^`03001B^e:k00EB^`D0009B^`03001B^e:k00UB^`03001>^djk00a>^`03001>
VdjK00]>V`03001>VdjK00M>V`X000M:V`03001:VdZK00Y:V`03001:VdZK00]:V`030016NdIk00]6
N`030016NdIk00]6N`030016NdIk00]6N`030016NdIk0096N`030016NdIk00M6N`03001oogoo00ao
o`03001oogoo00Uoo`0017oo100037oo0P00AGoo00<005:kD[/02U:k0P003E:k00<005:kD[/01@00
1U:k00<005:kD[/02U:k00<004jkC[/02djk00<004jKCY/02djK00@004jKCY]>V`L000=>V`03001:
VdZK00Y:V`03001:VdZK00]:V`03001:VdZK00Y:V`030016NdIk00a6N`030016NdIk00]6N`030016
NdIk00]6N`050016NdIkAW/0000:AW/00`00Oomoo`0;Ool00`00Oomoo`09Ool001Ioo`03001oogoo
04=oo`03001B^e:k00YB^`03001B^e:k00]B^`@000]B^`03001B^e:k00UB^`8000e>^`03001>VdjK
00Q>V`L000U>V`03001:VdZK00]:V`03001:VdZK00Y:V`03001:VdZK00]:V`030016NdIk00]6N`03
0016NdIk00]6N`030016NdIk00]6N`030016NdIk0096N`030016NdIk00M6N`03001oogoo00]oo`03
001oogoo00Uoo`005goo00<007ooOol0@Woo00<005:kD[/02e:k00<005:kD[/01e:k0`000U:k00<0
05:kD[/02U:k00<005:kD[/02U:k00<004jkC[/02djk00<004jKCY/00TjK1P0014jK00<004jKCY/0
2TjK00<004ZKBY/02TZK00<004ZKBY/02dZK00<004ZKBY/02dZK00<004IkAW/02dIk00<004IkAW/0
2dIk00<004IkAW/02dIk00<004IkAW/00TIk00<004IkAW/01dIk00<007ooOol02goo00<007ooOol0
27oo000HOol00`00Oomoo`12Ool00`00D[]B^`0;D[/00`00D[]B^`03D[/30005D[/00`00D[]B^`0;
D[/00`00D[]B^`0:D[/00`00C[]>^`09C[/6000:CY/00`00CY]>V`0;CY/00`00BY]:V`0:BY/00`00
BY]:V`0;BY/00`00BY]:V`0:BY/00`00AW]6N`0;AW/00`00AW]6N`0;AW/00`00AW]6N`0;AW/00`00
AW]6N`02AW/00`00AW]6N`07AW/00`00Oomoo`0;Ool00`00Oomoo`08Ool001Uoo`8004=oo`03001B
^e:k00YB^`03001B^e:k00<000UB^`03001B^e:k00]B^`03001B^e:k00YB^`03001>^djk00A>^`D0
009>V`03001>VdjK00]>V`03001>VdjK00Y>V`03001:VdZK00]:V`03001:VdZK00Y:V`03001:VdZK
00]:V`030016NdIk00]6N`030016NdIk00]6N`030016NdIk00]6N`030016NdIk0096N`030016NdIk
00M6N`03001oogoo00Yoo`03001oogoo00Qoo`006goo00<007ooOol0@Goo00<005:kD[/02E:k0`00
3E:k00<005:kD[/02U:k00<005:kD[/02U:k00<004jkC[/01@001TjK00<004jKCY/02djK00<004jK
CY/02djK00<004ZKBY/02TZK00<004ZKBY/02dZK00<004ZKBY/02TZK00<004IkAW/02dIk00<004Ik
AW/02dIk00<004IkAW/02dIk00<004IkAW/00dIk00<004IkAW/01TIk00<007ooOol02Woo00<007oo
Ool027oo000LOol00`00Oomoo`10Ool00`00D[]B^`05D[/40002D[/00`00D[]B^`0;D[/2000<D[/0
0`00D[]B^`07D[/6000;CY/00`00CY]>V`0;CY/00`00CY]>V`0:CY/00`00BY]:V`0;BY/00`00BY]:
V`0:BY/00`00BY]:V`05BY]0000;Ool00`00Oomoo`08Ool001eoo`03001oogoo041oo`03001B^e:k
00@000MB^`03001B^e:k00]B^`03001B^e:k00YB^`04001B^e:kD[/70003DY/00`00CY]>V`0;CY/0
0`00CY]>V`0;CY/00`00CY]>V`0:CY/00`00BY]:V`0:BY/00`00BY]:V`05BY/=0007BW/00`00BW]:
N`0;BW/00`00AW]6N`0;AW/00`00AW]6N`0;AW/00`00AW]6N`02AW/00`00AW]6N`06AW/00`00Oomo
o`09Ool00`00Oomoo`08Ool001ioo`80045oo`8000]B^`03001B^e:k00aB^`03001B^e:k00UB^`D0
00UBV`03001>VdjK00]>V`8000a>V`03001>VdjK00]>V`03001:VdZK00M:V`X000M:V`03001:NdYk
00Y:N`03001:NdYk00]:N`030016NdIk00]6N`030016NdIk00]6N`030016NdIk00=6N`030016NdIk
00I6N`03001oogoo00Qoo`03001oogoo00Qoo`0087oo00<007ooOol0?goo00<005:kD[/02U:k00<0
05:kD[/035:k00<005:kD[/015:k10000U:k00<005:KDY/02U:K00<004jKCY/02djK00<004jKCY/0
2djK00<004jKCY/02TjK00@004ZKBY]:V`L000=:V`03001:VdZK00Y:V`03001:NdYk00]:N`03001:
NdYk00]:N`030016NdIk00]6N`030016NdIk00]6N`030016NdIk00=6N`030016NdIk00E6N`03001o
ogoo00Qoo`03001oogoo00Qoo`008Goo00<007ooOol0?Woo00<005:kD[/02e:k00<005:kD[/02e:k
00<005:kD[/010001U:k00<005:KDY/02e:K00<004jKCY/02djK00<004jKCY/02TjK00<004jKCY/0
1DjK2P002DZK00<004ZKBY/02dZK00<004YkBW/02dYk00<004YkBW/02TYk00<004IkAW/02dIk00<0
04IkAW/02dIk00<004IkAW/014Ik00<004IkAW/01DIk00<007ooOol027oo00<007ooOol01goo000R
Ool00`00Oomoo`0nOol00`00D[]B^`0;D[/00`00D[]B^`09D[/4000;D[/00`00DY]BV`0:DY/2000=
CY/00`00CY]>V`07CY/:0007CY/00`00BY]:V`0:BY/00`00BY]:V`0:BY/00`00BW]:N`0;BW/00`00
BW]:N`0;BW/00`00AW]6N`0;AW/00`00AW]6N`0;AW/00`00AW]6N`03AW/00`00AW]6N`05AW/00`00
Oomoo`08Ool00`00Oomoo`07Ool002=oo`8003moo`03001B^e:k00YB^`03001B^e:k00EB^`D0009B
^`03001B^e:k00YB^`03001BVe:K00YBV`03001>VdjK00]>V`04001>VdjKCY/70003CY/00`00CY]>
V`0:CY/00`00BY]:V`0:BY/00`00BY]:V`0;BY/00`00BW]:N`0;BW/00`00BW]:N`0:BW/00`00AW]6
N`0;AW/00`00AW]6N`0;AW/00`00AW]6N`04AW/00`00AW]6N`05AW/00`00Oomoo`07Ool00`00Oomo
o`07Ool002Eoo`03001oogoo03eoo`03001B^e:k00YB^`03001B^e:k00D000IB^`03001B^e:k00YB
^`8000aBV`03001>VdjK00U>V`H000U>V`03001>VdjK00]>V`03001:VdZK00Y:V`03001:VdZK00Y:
V`03001:NdYk00]:N`03001:NdYk00]:N`030016NdIk00]6N`030016NdIk00]6N`030016NdIk00A6
N`030016NdIk00A6N`03001oogoo00Moo`03001oogoo00Moo`009Woo00<007ooOol0?7oo00<005:k
D[/02U:k10002e:k00<005:kD[/02U:k00<005:KDY/02e:K00<004jKCY/014jK1@000TjK00<004jK
CY/02TjK00<004jKCY/02TjK00<004ZKBY/02TZK00<004ZKBY/02dZK00<004YkBW/02dYk00<004Yk
BW/02TYk00<004IkAW/02dIk00<004IkAW/02dIk00<004IkAW/01DIk00<004IkAW/014Ik00<007oo
Ool01Woo00<007ooOol01goo000WOol00`00Oomoo`0lOol00`00D[]B^`06D[/30002D[/00`00D[]B
^`0;D[/00`00D[]B^`0:D[/00`00DY]BV`0:DY/00`00CY]>V`050006CY/00`00CY]>V`0:CY/00`00
CY]>V`0;CY/00`00BY]:V`0:BY/00`00BY]:V`0:BY/00`00BW]:N`0<BW/00`00BW]:N`0:BW/00`00
AW]6N`0;AW/00`00AW]6N`0;AW/00`00AW]6N`04AW/00`00AW]6N`04AW/00`00Oomoo`06Ool00`00
Oomoo`07Ool002Qoo`8003eoo`03001B^e:k00=B^`8000EB^`03001B^e:k00]B^`8000aB^`03001B
Ve:K00MBV`H000]>V`03001>VdjK00Y>V`03001>VdjK00]>V`03001:VdZK00U:V`03001:VdZK00]:
V`03001:NdYk00]:N`03001:NdYk00Y:N`030016NdIk00]6N`030016NdIk00]6N`030016NdIk00E6
N`030016NdIk00A6N`03001oogoo00Eoo`03001oogoo00Moo`00:Woo00<007ooOol0>Woo00<005:k
D[/00`0025:k00<005:kD[/02e:k00<005:kD[/02U:k00@005:KDY]BV`L000=BV`03001>VdjK00Y>
V`03001>VdjK00Y>V`03001>VdjK00]>V`03001:VdZK00Y:V`03001:VdZK00Y:V`03001:NdYk00E:
NcT000E6N`03001oogoo00Ioo`03001oogoo00Ioo`00:goo00<007ooOol0>Woo0P0035:k00<005:k
D[/02e:k00<005:kD[/02E:k1@002E:K00<004jKCY/02djK00<004jKCY/02TjK00<004jKCY/02djK
00<004ZKBY/02DZK00<004ZKBY/01DZK3P001dYk00<004YkBW/02TYk00<004IkAW/02dIk00<004Ik
AW/02dIk00<004IkAW/014Ik20001goo00<007ooOol01Woo000/Ool00`00Oomoo`0jOol00`00D[]B
^`0:D[/2000=D[/00`00D[]B^`04D[/40002DY/00`00DY]BV`0:DY/00`00CY]>V`0;CY/00`00CY]>
V`09CY/00`00CY]>V`0;CY/00`00BY]:V`04BY/=0007BW/00`00BW]:N`0;BW/00`00BW]:N`0:BW/0
0`00AW]6N`0;AW/00`00AW]6N`0;AW/00`00AW]6N`05AW/00`00AW]6N`03AW/00`00Oomoo`05Ool0
0`00Oomoo`06Ool002eoo`03001oogoo03Yoo`03001B^e:k00YB^`03001B^e:k00]B^`03001B^e:k
00@000IBV`03001BVe:K00YBV`03001>VdjK00]>V`03001>VdjK00Y>V`03001>VdjK00Q>V`X000I:
V`03001:NdYk00Y:N`03001:NdYk00a:N`03001:NdYk00Y:N`030016NdIk00]6N`030016NdIk00]6
N`030016NdIk00E6N`030016NdIk00=6N`03001oogoo00Aoo`03001oogoo00Ioo`00;Woo0P00>Woo
00<005:kD[/02e:k00<005:kD[/02E:k10002e:K00<005:KDY/02U:K00<004jKCY/02djK00<004jK
CY/02DjK00<004jKCY/00TjK1P0014jK00<004ZKBY/02DZK00<004YkBW/02dYk00<004YkBW/02dYk
00<004YkBW/02TYk00<004IkAW/02dIk00<004IkAW/02dIk00<004IkAW/01TIk00<004IkAW/00TIk
00<007ooOol017oo00<007ooOol01Woo000`Ool00`00Oomoo`0hOol00`00D[]B^`0;D[/00`00D[]B
^`04D[/50002DY/00`00DY]BV`0:DY/00`00DY]BV`0:DY/00`00CY]>V`0:CY/00`00CY]>V`04CY/:
000:CY/00`00BY]:V`0:BY/00`00BW]:N`0:BW/00`00BW]:N`0<BW/00`00BW]:N`0:BW/00`00AW]6
N`0;AW/00`00AW]6N`0;AW/00`00AW]6N`05AW/00`00AW]6N`03AW/00`00Oomoo`03Ool00`00Oomo
o`06Ool0035oo`03001oogoo03Qoo`03001B^e:k00YB^`03001B^e:k00D000IBV`03001BVe:K00YB
V`8000]BV`03001>VdjK00U>V`T000I>V`03001>VdjK00]>V`03001:VdZK00Y:V`03001:NdYk00Y:
N`03001:NdYk00]:N`03001:NdYk00Y:N`030016NdIk00]6N`030016NdIk00]6N`030016NdIk00I6
N`030016NdIk0096N`03001oogoo00=oo`03001oogoo00Ioo`00<Woo00<007ooOol0>7oo00<005:k
D[/02E:k10002e:K00<005:KDY/02U:K00<005:KDY/02U:K00<004jKCY/014jK1@000TjK00<004jK
CY/02DjK00<004jKCY/02djK00<004ZKBY/02TZK0P002dYk00<004YkBW/034Yk00<004YkBW/02TYk
00<004IkAW/02dIk00<004IkAW/02dIk00<004IkAW/01TIk00<004IkAW/00TIk00<007ooOol00goo
00<007ooOol01Goo000cOol2000hOol00`00D[]B^`05D[/40002D[X00`00DY]BV`0:DY/00`00DY]B
V`0;DY/00`00DY]BV`09DY/00`00CY]>V`050006CY/00`00CY]>V`0:CY/00`00CY]>V`0;CY/00`00
BY]:V`0:BY/00`00BW]:N`0:BW/00`00BW]:N`0;BW/00`00BW]:N`0:BW/00`00AW]6N`0;AW/00`00
AW]6N`0;AW/00`00AW]6N`07AW/01@00AW]6NdIk00001Goo00<007ooOol01Goo000eOol00`00Oomo
o`0fOol00`00D[]B^`040006D[X00`00DY]BV`0;DY/00`00DY]BV`0;DY/00`00DY]BV`07DY/5000;
CY/00`00CY]>V`0:CY/00`00CY]>V`0:CY/00`00BY]:V`0;BY/00`00BW]:N`09BW/00`00BW]:N`0<
BW/00`00BW]:N`0:BW/00`00AW]6N`0;AW/00`00AW]6N`0;AW/00`00AW]6N`06AW/00`00AW]6N`02
AW/00`00Oomoo`02Ool00`00Oomoo`05Ool003Ioo`03001oogoo03Ioo`8000]B^P03001BVe:K00]B
V`03001BVe:K00YBV`04001BVe:KDY/60003DY/00`00CY]>V`0;CY/00`00CY]>V`09CY/2000<CY/0
0`00BY]:V`0;BY/00`00BW]:N`09BW/00`00BW]:N`0;BW/00`00BW]:N`0:BW/00`00AW]6N`0;AW/0
0`00AW]6N`0;AW/00`00AW]6N`07AW/01@00AW]6NdIk000017oo00<007ooOol01Goo000gOol00`00
Oomoo`0fOol00`00D[YB^P0:D[X00`00DY]BV`0:DY/00`00DY]BV`09DY/50009DY/00`00CY]>V`0;
CY/00`00CY]>V`0:CY/00`00CY]>V`0:CY/00`00BY]:V`0;BY/00`00BW]:N`09BW/00`00BW]:N`05
BW/g0003AW/01@00AW]6NdIk00000goo00<007ooOol01Goo000hOol2000fOol00`00D[YB^P0:D[X2
000<DY/00`00DY]BV`04DY/50002DYX00`00DY]BV`09DY/00`00CY]>V`0;CY/00`00CY]>V`0:CY/0
0`00CY]>V`0:CY/00`00BY]:V`08BY/G0006BW/00`00BW]:N`0;BW/00`00AW]6N`0;AW/00`00AW]6
N`0:AW/20005AW/80003Ool00`00Oomoo`05Ool003Yoo`03001oogoo03Aoo`03001B^U:j00YB^P03
001BVe:K00YBV`03001BVe:K00D000IBVP03001BVe:K00YBV`03001>VdjK00Y>V`03001>VdjK00]>
V`03001>VdjK00U>V`03001:VdZK009:V`H000A>N`03001:NdYk00U:N`03001:NdYk00]:N`03001:
NdYk00Y:N`030016NdIk00]6N`030016NdIk00]6N`030016NdIk00M6N`040016NdIk0003Ool00`00
Oomoo`05Ool003]oo`03001oogoo03Aoo`03001B^U:j00YB^P03001BVe:K00UBV`@000]BVP03001B
Ve:K00UBV`8000a>V`03001>VdjK00Y>V`03001>VdjK00A>V`X000Y>N`03001:NdYk00U:N`03001:
NdYk00]:N`03001:NdYk00]:N`030016NdIk00]6N`030016NdIk00Y6N`8000U6N`040016NdIk0002
Ool00`00Oomoo`05Ool003aoo`03001oogoo03Aoo`03001B^U:j00YB^P03001BVe:K00ABV`@0009B
VP03001BVU:J00YBVP03001BVe:K00YBV`03001>VdjK00]>V`03001>VdjK00M>V`X000I>N`03001>
Ndik00]>N`03001:NdYk00U:N`03001:NdYk00]:N`03001:NdYk00Y:N`030016NdIk00]6N`030016
NdIk00]6N`030016NdIk00Q6N`030016N`0000=oo`03001oogoo00Aoo`00?Goo0P00=7oo00<005:j
D[X02U:j00<005:KDY/010001U:J00<005:JDYX02e:J00<005:KDY/02U:K00<004jKCY/02TjK00@0
04jKCY]>V`L000=>V`03001>Ndik00U>N`03001>Ndik00]>N`03001:NdYk00U:N`03001:NdYk00]:
N`03001:NdYk00]:N`030016NdIk00]6N`030016NdIk00Y6N`8000U6N`040016NdIk0002Ool00`00
Oomoo`04Ool003moo`03001oogoo039oo`03001B^U:j00UB^P<000]BVP03001BVU:J00]BVP03001B
Ve:K00YBV`03001>VdjK00M>V`L000U>V`03001>Ndik00Y>N`03001>Ndik00]>N`03001:NdYk00U:
N`03001:NdYk00]:N`03001:NdYk00Y:N`030016NdIk00]6N`030016NdIk00]6N`030016NdIk00Q6
N`030016N`00009oo`03001oogoo00Aoo`00@7oo00<007ooOol0<Woo00<005:jD[X015:j10000U:J
00<005:JDYX02U:J00<005:JDYX02U:J00<005:KDY/02U:K00@004jKCY]>V`L000=>VP03001>VdjK
00Y>V`03001>Ndik00U>N`03001>Ndik00]>N`03001:NdYk00Y:N`03001:NdYk00Y:N`03001:NdYk
00]:N`030016NdIk00]6N`030016NdIk00Y6N`8000Y6N`050016N`00Ool00006Ool0045oo`03001o
ogoo035oo`03001B^U:j00@000IBVP03001BVU:J00YBVP8000aBVP03001BVe:K00MBV`L000U>VP03
001>VdjK00Y>V`03001>Ndik00Y>N`03001>Ndik00]>N`03001:NdYk00U:N`03001:NdYk00]:N`03
001:NdYk00Y:N`030016NdIk00]6N`030016NdIk00]6N`030016NdIk00U6N`800003Ool007oo00Eo
o`00@Woo0P00<Woo0P002e:J00<005:JDYX02U:J00<005:JDYX02U:J00@005:KDY]BV`L000=BVP03
001>VTjJ00Y>VP03001>VdjK00Y>V`03001>Ndik00Y>N`03001>Ndik00Y>N`03001:NdYk00Y:N`03
001:NdYk00Y:N`03001:NdYk00]:N`030016NdIk00]6N`030016NdIk00Y6N`8000Y6N`040016N`00
0006Ool004Aoo`03001oogoo031oo`03001BVU:J00YBVP03001BVU:J00YBVP03001BVU:J00UBVPD0
00UBVP03001>VTjJ00Y>VP03001>VdjK00Y>V`03001>Ndik00Y>N`03001>Ndik00]>N`03001:NdYk
00U:N`03001:NdYk00]:N`03001:NdYk00Y:N`030016NdIk00]6N`030016NdIk00]6N`030016NdIk
00U6N`<000Ioo`00AGoo00<007ooOol0;goo00<005:JDYX02U:J00<005:JDYX02e:J00<005:JDYX0
15:J10000U:J00<005:JDYX02U:J00<004jJCYX02TjJ00<004jKCY/02TjK00<004ikCW/02Tik00<0
04ikCW/02Tik00<004YkBW/014Yk=P001TIk0P002dIk0`001Goo0016Ool00`00Oomoo`0_Ool00`00
DYYBVP0:DYX00`00DYYBVP0:DYX00`00DYYBVP040006DYX00`00DYYBVP0:DYX00`00CYY>VP0;CYX0
0`00CY]>V`09CY/00`00CW]>N`0:CW/00`00CW]>N`05CW/<000fOol>0006AW/20005Ool004Moo`80
02moo`03001BVU:J00]BVP03001BVU:J00MBVPD000]BVP03001BVU:J00YBVP03001>VTjJ00Y>VP03
001>VdjK00Y>V`03001>Ndik00M>N`X0051oo`P000Eoo`00BGoo00<007ooOol0;Goo00<005:JDYX0
2U:J00@005:JDYYBVPL000=BVP03001BVU:J00UBVP03001BVU:J00]BVP03001>VTjJ00Y>VP03001>
VdjK00U>V`04001>NdikCW/6001POol20005Ool004Yoo`03001oogoo02eoo`03001BVU:J00UBVPD0
00UBVP03001BVU:J00YBVP03001BVU:J00YBVP03001>VTjJ00Y>VP03001>VdjK00A>V`T0069oo`@0
00Moo`00Bgoo00<007ooOol0;7oo00<005:JDYX01U:J0`000U:J00<005:JDYX02U:J00<005:JDYX0
2U:J00<005:JDYX02U:J00<004jJCYX01djJ2@00Igoo10002goo001<Ool2000]Ool00`00DYYBVP03
DYX20005DYX00`00DYYBVP0:DYX00`00DYYBVP0:DYX00`00DYYBVP0:DYX01000CYY>VTjJ1P00K7oo
10003goo001>Ool00`00Oomoo`0ZOol00`00DYYBVP030008DYX00`00DYYBVP0:DYX00`00DYYBVP0:
DYX00`00DYYBVP07DYX6001^Ool4000COol004moo`03001oogoo02Yoo`8000aBVP03001BVU:J00YB
VP03001BVU:J00UBVP04001BVU:JDYX6001`Ool4000GOol0051oo`03001oogoo02Yoo`03001BVU:J
00YBVP8000]BVP03001BVU:J00UBVP@007=oo`<001]oo`00DGoo0P00:goo00<005:JDYX02U:J00<0
05:JDYX02U:J00<005:JDYX015:J1000Lgoo10007Woo001COol00`00Oomoo`0XOol00`00DYYBVP0;
DYX00`00DYYBVP09DYX00`00DYYBVP04001cOol4000ROol005Aoo`03001oogoo02Qoo`03001BVU:J
00]BVP03001BVU:J00MBVP@007=oo`@002Ioo`00EGoo00<007ooOol0:7oo00<005:JDYX02U:J00@0
05:JDYYBVPH007=oo`@002Yoo`00EWoo0P00:Goo00<005:JDYX02E:J1000MGoo1000;Woo001HOol0
0`00Oomoo`0VOol00`00DYYBVP05DYX4001fOol3000bOol005Uoo`03001oogoo02Ioo`03001BVU:J
00@007Ioo`@003Eoo`00FWoo00<007ooOol09Woo0P00MWoo1000>Goo001KOol2000VOol00`00Oomo
o`1aOol4000mOol005eoo`03001oogoo02=oo`03001oogoo06eoo`@0045oo`00GWoo00<007ooOol0
8Woo00<007ooOol0JWoo0`00AGoo001OOol00`00Oomoo`0QOol00`00Oomoo`1VOol40018Ool0061o
o`80025oo`03001oogoo069oo`@004aoo`00HWoo00<007ooOol07Woo00<007ooOol0GWoo1000D7oo
001SOol00`00Oomoo`0MOol00`00Oomoo`1JOol4001DOol006Aoo`03001oogoo01aoo`03001oogoo
05Ioo`@005Qoo`00IGoo00<007ooOol06goo00<007ooOol0Dgoo0`00G7oo001VOol2000KOol00`00
Oomoo`1?Ool4001OOol006Qoo`03001oogoo01Qoo`03001oogoo04]oo`@006=oo`00JGoo00<007oo
Ool05goo00<007ooOol0Agoo1000Igoo001ZOol00`00Oomoo`0FOol00`00Oomoo`13Ool4001[Ool0
06]oo`8001Ioo`03001oogoo03moo`@006moo`00KGoo00<007ooOol04goo00<007ooOol0?7oo0`00
Lgoo001^Ool00`00Oomoo`0BOol00`00Oomoo`0hOol4001fOol006moo`03001oogoo011oo`03001o
ogoo03Eoo`@007Yoo`00L7oo0P0047oo00<007ooOol0<Goo1000OWoo001bOol00`00Oomoo`0=Ool0
0`00Oomoo`0]Ool40022Ool007=oo`03001oogoo00aoo`03001oogoo02Uoo`@008Ioo`00M7oo00<0
07ooOol02goo00<007ooOol09Woo0`00RWoo001eOol2000;Ool00`00Oomoo`0ROol4002=Ool007Mo
o`03001oogoo00Qoo`03001oogoo01ioo`@0095oo`00N7oo00<007ooOol01goo00<007ooOol06Woo
1000UGoo001iOol00`00Oomoo`06Ool00`00Oomoo`0FOol4002IOol007Yoo`8000Ioo`03001oogoo
01=oo`<009eoo`00O7oo00<007ooOol00goo00<007ooOol03goo1000X7oo001mOol00`00Oomoo`02
Ool00`00Oomoo`0;Ool4002TOol007ioo`05001oogooOol00009Ool4002XOol007moo`800003Ool0
07oo00Aoo`@00:aoo`00PGoo0P0000=oo`0000000P00/7oo0022Ool2002dOol00001\
\>"],
  ImageRangeCache->{{{0, 311.5}, {252.438, 0}} -> {-0.0435001, 0.017744, \
0.00405883, 0.00405883}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Options[Plot3D, SphericalRegion]\)], "Input"],

Cell[BoxData[
    \({SphericalRegion \[Rule] False}\)], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["SurfaceColor", "Section"],

Cell["The usage message for SurfaceColor is shown below.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?SurfaceColor\)\)], "Input"],

Cell[BoxData[
    \("SurfaceColor[dcol] is a three-dimensional graphics directive which \
specifies that the polygons which follow should act as diffuse reflectors of \
light with a color given by dcol. SurfaceColor[dcol, scol] specifies that a \
specular reflection component should be included, with a color given by scol. \
SurfaceColor[dcol, scol, n] specifies that the reflection should occur with \
specular exponent n."\)], "Print"]
}, Open  ]],

Cell[TextData[{
  "Further explanation can be found under ",
  ButtonBox["SurfaceColor",
    ButtonStyle->"RefGuideLink"],
  "  in the HelpBrowser and section  ",
  ButtonBox["2.9.12",
    ButtonStyle->"MainBookLink"],
  " of The ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " Book.  The ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " lighting model accounts for difuse light reflection, and specular light \
reflection. The SurfaceColor directive is used to specify the type of \
reflection for  Graphics3D primitives."
}], "Text"],

Cell[CellGroupData[{

Cell["Difuse Reflection", "Subsection"],

Cell[TextData[{
  "The default lighting model in ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " uses only difuse reflection. With difuse reflection light is equally \
dispursed in all directions such as the light reflected from cloth or flat \
paint. When SurfaceColor is used with one argument only difuse reflection is \
used. \n\nAn example is given below to demonstrate the effect of difuse \
lighting, but first the next cell should be evaluated to make the graphics of \
a surface with a slight curve shown  at four slightly different views."
}], "Text"],

Cell[BoxData[{
    \(\(SetOptions[Plot3D, 
        DisplayFunction \[RuleDelayed] $DisplayFunction];\)\), "\n", 
    \(\(SetOptions[Graphics3D, 
        DisplayFunction \[RuleDelayed] \
$DisplayFunction];\)\[IndentingNewLine]\), "\n", 
    \(Block[{$DisplayFunction = Identity}, \[IndentingNewLine]plt1 = 
        Graphics3D[
          Plot3D[Cos[\((x\^2 + y\^2)\)/7], {x, \(-1\), 1}, {y, \(-1\), 
              1}, \[IndentingNewLine]Axes \[Rule] False, Mesh \[Rule] False, 
            Boxed \[Rule] False, PlotPoints \[Rule] 70, 
            LightSources \[Rule] {{{0, 1, 1.03}, Hue[0.1, 0.1, 1]}}\ , 
            BoxRatios \[Rule] Automatic]]; \[IndentingNewLine]plt2 = 
        Show[plt1, 
          ViewPoint \[Rule] {1.1, \(-2.4\), 2.0}]; \[IndentingNewLine]plt3 = 
        Show[plt1, 
          ViewPoint \[Rule] {1.3, \(-2.6\), 2.0}]; \[IndentingNewLine]plt4 = 
        Show[plt1, 
          ViewPoint \[Rule] {1.3, \(-2.4\), 
              1.0}];\[IndentingNewLine]]\)}], "Input"],

Cell["\<\
The next cell shows the four views above with only difuse reflection.  Notice \
essentially the same color is reflected from different areas on the surface.  \
However, the right most view shows the surface with a lighter shade as a \
result of the way the surface is oriented relative to the light source. \
\>", "Text"],

Cell[BoxData[{
    \(\(difuse1 = 
        Insert[plt1, \[IndentingNewLine]SurfaceColor[GrayLevel[1]], {1, 
            1}];\)\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(difuse2 = 
        Insert[plt2, \[IndentingNewLine]SurfaceColor[GrayLevel[1]], {1, 
            1}];\)\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(difuse3 = 
        Insert[plt3, \[IndentingNewLine]SurfaceColor[GrayLevel[1]], {1, 
            1}];\)\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(difuse4 = 
        Insert[plt4, \[IndentingNewLine]SurfaceColor[GrayLevel[1]], {1, 
            1}];\)\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(Show[
        GraphicsArray[{{difuse1, difuse2, difuse3, 
              difuse4}}], \[IndentingNewLine]DisplayFunction \[Rule] \
$DisplayFunction, ImageSize \[Rule] {400, 100}];\)\)}], "Input"],

Cell[CellGroupData[{

Cell["Computing the color of difuse reflected light", "Subsubsection"],

Cell[TextData[{
  "When the SurfaceColor directive has one argument only difuse reflection is \
used.  If that argument is GrayLevel[g] then the red, green, and blue \
components of light reflected from each light source is the red, green, blue \
components of the incident light times (g Cos[\[Alpha]]) where \[Alpha] is \
the angle between (the vector normal to the surface of a polygon) and (the \
direction of the incident light beam).  If the only argument in SurfaceColor \
is RGBColor[r,g,b] then the red, green, blue compenets of reflected light for \
each light source are proportional to ",
  Cell[BoxData[
      \(TraditionalForm\`\((\ r\ Cos[\[Alpha]]\ )\)\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`\((g\ Cos[\[Alpha]]\ )\)\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`\((b\ Cos[\[Alpha]]\ )\)\)]],
  " respectively.  It seems the only color directives that can be used in \
SurfaceColor are GrayLevel and RGBColor."
}], "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sepcular Reflection", "Subsection"],

Cell[TextData[{
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " can also model specular reflection where reflected light is concentrated \
in one direction. A practical example of something that reflects light in \
this manner is the crome plated bumper on a car.  When SurfaceColor has two \
or three arguments the first argument specifies the amount of difuse \
reflection and the second argument specifies the amount of specular \
reflection. \n\nThe next cell shows the same graphics that were used above \
with specular reflection but no difuse reflection. In the view on the left \
light is only reflected from a spot in the center of the graphic. When a \
different ViewPoint is used light is reflected from a different spot on the \
surface.  In the right most view the surface is oriented such that no \
specular reflection is visible."
}], "Text"],

Cell[BoxData[{
    \(\(specular1 = \[IndentingNewLine]Insert[plt1, 
          SurfaceColor[GrayLevel[0], GrayLevel[1], 19000], {1, 
            1}];\)\), "\n", 
    \(\(specular2 = \[IndentingNewLine]Insert[plt2, 
          SurfaceColor[GrayLevel[0], GrayLevel[1], 19000], {1, 
            1}];\)\), "\n", 
    \(\(specular3 = \[IndentingNewLine]Insert[plt3, 
          SurfaceColor[GrayLevel[0], GrayLevel[1], 19000], {1, 
            1}];\)\), "\n", 
    \(\(specular4 = \[IndentingNewLine]Insert[plt4, 
          SurfaceColor[GrayLevel[0], GrayLevel[1], 19000], {1, 
            1}];\)\[IndentingNewLine]\), "\n", 
    \(\(Show[
        GraphicsArray[{{specular1, specular2, specular3, 
              specular4}}], \[IndentingNewLine]DisplayFunction \[Rule] \
$DisplayFunction, ImageSize \[Rule] {400, 100}];\)\)}], "Input"],

Cell[CellGroupData[{

Cell["Computing the color of Specular reflected light", "Subsubsection"],

Cell[TextData[{
  "The red, green, and blue components of difuse reflection and specular \
reflection from each light source are combined to determine the color used \
for rendering each polygon. The second argument in SurfaceColor specifies the \
type of specular reflection. Suppose the second argument of SurfaceColor is \
GrayLevel[g] and the third argument is n (a positive Real, Integer, or \
Rational).  In that case the red, green and blue components of specular \
reflected light are the red, green, blue components of incident light times \
",
  Cell[BoxData[
      \(TraditionalForm\`\((g\ Cos[\[Theta]]\^n)\)\)]],
  " where \[Theta] is the angle between (the direction the polygon is veiwed \
from) and (the direction in which light would reflect if the surface was a \
perfect mirror).  However, there is no specular reflection when \[Theta] is \
90\[Degree] or greater. If the second argument in SurfaceColor is \
RGBColor[r,g,b] then the red, green, and blue compenets of specular reflected \
light for each light source are proportional to ",
  Cell[BoxData[
      \(TraditionalForm\`\((\ r\ \(\(Cos[\[Theta]]\)\(\ \)\)\^n)\)\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`\((g\ \(\(Cos[\[Theta]]\)\(\ \)\)\^n)\)\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`\((b\ \(\(Cos[\[Theta]]\)\(\ \)\)\^n)\)\)]],
  ".  Here too no light is reflected for \[Theta]>90\[Degree]. When \
SurfaceColor has only two arguments the default value n=1 is used for the \
third argument.  It seems the only color directives that can be used in \
SurfaceColor are GrayLevel and RGBColor."
}], "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples using a Torus", "Subsection"],

Cell["\<\
In the cells that follow a torus is shown using different SurfaceColor \
directives.  First the next cell should be evaluated so the graphic of a \
torus can be made.\
\>", "Text"],

Cell[BoxData[
    \(<< Graphics`Shapes`\)], "Input"],

Cell["\<\
The next cell makes a torus and displays it with the default lighting \
effects.\
\>", "Text"],

Cell[BoxData[{
    \(\(t1 = Torus[1.5, 0.5, 30, 30];\)\), "\[IndentingNewLine]", 
    \(\(Show[Graphics3D[{EdgeForm[], t1}], 
        ImageSize \[Rule] {300, 250}];\)\)}], "Input"],

Cell[TextData[{
  "In the next cell the SurfaceColor specified has one argument which causes \
the Torus to come out like the one from the previous cell except a little \
gray.  The color used for each polygon is determined by multiplying the each \
component (red, green, blue) of the incident light from each light source by \
",
  Cell[BoxData[
      \(TraditionalForm\`0.87\ Cos[\[Alpha]]\)]],
  " where \[Alpha] is the angle between (the vector normal to the surface of \
a polygon) and (the direction of the incident light beam)."
}], "Text"],

Cell[BoxData[{
    \(\(gr1 = {EdgeForm[], SurfaceColor[GrayLevel[0.87]], t1};\)\), "\n", 
    \(\(Show[Graphics3D[{gr1}], ImageSize \[Rule] {300, 250}];\)\)}], "Input"],

Cell[TextData[{
  "In the next cell SurfaceColor has one argument (an RGBColor).   Here again \
only difuse reflection is used, and the Torus comes out green. In this case \
the color used for each polygon is determined by multiplying each component \
(red, green, blue) of the incident light by ",
  Cell[BoxData[
      \(TraditionalForm\`0.4\ Cos[\[Alpha]], \ Cos[\[Alpha]]\ , 
      0.4\ Cos[\[Alpha]]\)]],
  " respectively.  This is done for each light source and the reflected light \
form each source is combined to give the total effect."
}], "Text"],

Cell[BoxData[{
    \(\(gr1 = {EdgeForm[], SurfaceColor[RGBColor[0.4, 1, 0.4]], 
          t1};\)\), "\n", 
    \(\(Show[Graphics3D[{gr1}], ImageSize \[Rule] {300, 250}];\)\)}], "Input"],

Cell["\<\
In the next cell difuse reflection is used to make the Torus look red.  Here \
the calculation of the color for each polygon is similar to that used in the \
last example.\
\>", "Text"],

Cell[BoxData[{
    \(\(gr1 = {EdgeForm[], SurfaceColor[RGBColor[1, 0.3, 0.2]], 
          t1};\)\), "\[IndentingNewLine]", 
    \(\(Show[Graphics3D[{gr1}], ImageSize \[Rule] {300, 250}];\)\)}], "Input"],

Cell[TextData[{
  "When SurfaceColor is given two arguments the first argument indicates the \
color and amount of difuse reflection to use, and the second argument \
indicates the color and amount of specular reflection to use. In the next \
cell the first argument of SurfaceColor the black (GrayLevel[0]).  This \
causes the use of no difuse lighting, and all reflection of light is governed \
by the second argument which specifies the specular reflection. The second \
argument in SurfaceColor causes the intensity of the red, green, blue \
components of light reflected from each polygon to be proportional to ",
  Cell[BoxData[
      \(TraditionalForm\`Cos[\[Theta]], \ 0.3\ Cos[\[Theta]]\ , 
      0.2\ Cos[\[Theta]]\)]],
  " respectively.  As discussed above \[Theta] is the angle between (the \
direction the polygon is veiwed from) and (the direction in which light would \
reflect if the surface was a perfect mirror), except if \[Theta] is 90\
\[Degree] or greater there is no specular reflection."
}], "Text"],

Cell[BoxData[{
    \(\(gr1 = {EdgeForm[], SurfaceColor[GrayLevel[0], RGBColor[1, 0.3, 0.2]], 
          t1};\)\), "\[IndentingNewLine]", 
    \(\(Show[Graphics3D[{gr1}], ImageSize \[Rule] {300, 250}];\)\)}], "Input"],

Cell[TextData[{
  "The next cell is the same as the last cell except for the third argument \
in SpecularColor. In this case the third argument in SurfaceColor is 3, so \
the intensity of the red, green, blue components of light reflected from each \
polygon is proportional to ",
  Cell[BoxData[
      \(TraditionalForm\`Cos[\[Theta]]\^3, \ \ 0.3\ Cos[\[Theta]]\^3, \ 
      0.2\ Cos[\[Theta]]\^3\)]],
  " respectively.  "
}], "Text"],

Cell[BoxData[{
    \(\(gr1 = {EdgeForm[], 
          SurfaceColor[GrayLevel[0], RGBColor[1, 0.3, 0.2], 3], 
          t1};\)\), "\[IndentingNewLine]", 
    \(\(Show[Graphics3D[{gr1}], ImageSize \[Rule] {300, 250}];\)\)}], "Input"],

Cell["\<\
The next cell combines the effects of some of the previous examples.  In this \
case we have green difuse reflection and red specular reflection.  Where both \
types of reflection are present green and red combine to make yellow.\
\>", "Text"],

Cell[BoxData[{
    \(\(gr1 = {EdgeForm[], 
          SurfaceColor[RGBColor[0.4, 1, 0.4], RGBColor[1, 0.3, 0.2], 3], 
          t1};\)\), "\[IndentingNewLine]", 
    \(\(Show[Graphics3D[{gr1}], ImageSize \[Rule] {300, 250}];\)\)}], "Input"],

Cell["\<\
The next two cells use a higher and lower value for the third argument in \
SurfaceColor.  This gives a larger or smaller region with yellow \
reflection.\
\>", "Text"],

Cell[BoxData[{
    \(\(gr1 = {EdgeForm[], 
          SurfaceColor[RGBColor[0.4, 1, 0.4], RGBColor[1, 0.3, 0.2], 5], 
          t1};\)\), "\[IndentingNewLine]", 
    \(\(Show[Graphics3D[{gr1}], ImageSize \[Rule] {300, 250}];\)\)}], "Input"],

Cell[BoxData[{
    \(\(gr1 = {EdgeForm[], 
          SurfaceColor[RGBColor[0.4, 1, 0.4], RGBColor[1, 0.3, 0.2], 1.8], 
          t1};\)\), "\[IndentingNewLine]", 
    \(\(Show[Graphics3D[{gr1}], ImageSize \[Rule] {300, 250}];\)\)}], "Input"],

Cell["\<\
The next cell shows three Torus in the same graphic using the default \
SurfaceColor.\
\>", "Text"],

Cell[BoxData[{
    \(\(s1 = Torus[1.5, 0.5, 30, 30];\)\), "\[IndentingNewLine]", 
    \(\(s2 = Torus[2.25, 0.75, 30, 30];\)\), "\[IndentingNewLine]", 
    \(\(t1 = 
        TranslateShape[
          RotateShape[s2, 0, \[Pi]/2, \[Pi]/2], {\(-2\), 0, 
            0}];\)\), "\[IndentingNewLine]", 
    \(\(t2 = TranslateShape[s1, {0, 0, \(-3\)}];\)\), "\[IndentingNewLine]", 
    \(\(Show[
        Graphics3D[{{EdgeForm[], t1}, {EdgeForm[], s1}, {EdgeForm[], 
              t2}}]];\)\)}], "Input"],

Cell["\<\
In the next cell we can combine objects using different specifications for \
SurfaceColor.  The next example shows the same three Torus as the last \
example, but this time they each have a different SurfaceColor.\
\>", "Text"],

Cell[BoxData[{
    \(\(gr1 = {EdgeForm[], 
          SurfaceColor[RGBColor[0.4, 1, 0.4], RGBColor[1, 0.3, 0.2], 4], 
          t1};\)\), "\n", 
    \(\(gr2 = {EdgeForm[], SurfaceColor[RGBColor[1, 0.3, 0.2], GrayLevel[0]], 
          s1};\)\), "\n", 
    \(\(gr3 = {EdgeForm[], SurfaceColor[GrayLevel[1], GrayLevel[1], 6], 
          t2};\)\), "\[IndentingNewLine]", 
    \(\(Show[Graphics3D[{gr1, gr2, gr3}]];\)\)}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SurfaceColor for SurfaceGraphics", "Subsection"],

Cell["\<\
If we want to use SurfaceColor when showing Graphics3D as in
     Show[Graphics3D[{SurfaceColor[___], s }]]
Then we should provide (s) which is a list of polygons.  Actually \
SurfaceColor can affect the lighting of Cuboids as well, but we won't look \
into that right now.  Suppose you want to use SurfaceColor with the graphics \
produced by Plot3D in the next cell. \
\>", "Text"],

Cell["plt1=Plot3D[Sin[x y],{x,0.5,2.5},{y,0.5,2.5}];", "Input"],

Cell["\<\
The expression returned by Plot3D has the head SurfaceGraphics.  By using \
Graphics3D[plt1] we can convert the SurfaceGraphics to Graphics3D.  We can \
then insert a SurfaceColor directive at the appropriate position if we don't \
want to use the default surface. \
\>", "Text"],

Cell["\<\
gr4=Insert[Graphics3D[plt1],SurfaceColor[RGBColor[0,0.3,0.6],RGBColor[0,0.7,0.\
3],2],{1,1}];
Show[gr4];\
\>", "Input"],

Cell["\<\
We can even combine the graphics from Plot with a Torus that uses a specified \
SurfaceColor as in the next cell !\
\>", "Text"],

Cell[BoxData[{
    \(\(t1 = 
        TranslateShape[
          Torus[0.45, 0.1, 30, 30], {1.8, 1.8, 
            0}];\)\), "\[IndentingNewLine]", 
    \(\(rng = 
        PlotRange /. 
          AbsoluteOptions[plt1, PlotRange];\)\), "\[IndentingNewLine]", 
    \(\(gr5 = Insert[Graphics3D[plt1], {EdgeForm[], t1}, {1, 1}];\)\), "\n", 
    \(\(Show[gr5, PlotRange \[Rule] rng];\)\)}], "Input"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Text", "Section"],

Cell["\<\
The typical use of text is straight forward.  However, one must do some very \
tricky stuff to display framed text in Graphics or Graphics3D.  Alan Hayes \
showed how this can be done in response to a question in the MathGroup.  The \
next cell demonstrates Alan's solution.  I would elaborate on how it works, \
but I don't understand it myself.\
\>", "Text"],

Cell[BoxData[{
    \(\(\(txt2 = 
        Graphics[\[IndentingNewLine]Text[
            DisplayForm[
              FrameBox[\[IndentingNewLine]FormBox[
                  StyleBox[
                    MakeBoxes[\[Rho]\  = \ k\ r^2, 
                      TraditionalForm], \[IndentingNewLine]FontWeight \[Rule] \
"\<Bold\>", FontSize \[Rule] 24], TraditionalForm]]\[IndentingNewLine]], {5, 
              1/2}]];\)\(\[IndentingNewLine]\)
    \)\), "\n", 
    \(\(Block[{$DisplayFunction = Identity}, \[IndentingNewLine]plt2 = 
          Plot[\ Sin[x], {x, 0, 2  \[Pi]}]\[IndentingNewLine]];\)\), "\n", 
    \(\(Show[{plt2, txt2}];\)\)}], "Input"],

Cell["The next cell does the same thing with Graphics3D.", "Text"],

Cell[BoxData[{
    \(\(\(txt1 = 
        Graphics3D[\[IndentingNewLine]Text[
            DisplayForm[
              FrameBox[\[IndentingNewLine]FormBox[
                  StyleBox[
                    MakeBoxes[\[Rho]\  = \ k\ r^2, 
                      TraditionalForm], \[IndentingNewLine]FontWeight \[Rule] \
"\<Bold\>", FontSize \[Rule] 24], TraditionalForm]]\[IndentingNewLine]], {3, 
              3, 0}]];\)\(\[IndentingNewLine]\)
    \)\), "\n", 
    \(\(Block[{$DisplayFunction = Identity}, \[IndentingNewLine]plt1 = 
          Plot3D[Cos[x]\ Sin[y], {x, 0, 2  \[Pi]}, {y, 0, 
              2  \[Pi]}, \[IndentingNewLine]PlotPoints \[Rule] 40, 
            Mesh \[Rule] False]\[IndentingNewLine]];\)\), "\n", 
    \(\(Show[{plt1, txt1}];\)\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Ticks", "Section"],

Cell["\<\
The next line gives a plot with manually specified ticks on the horizontal \
axis.\
\>", "Text"],

Cell[BoxData[
    \(\(Plot[x\^2, {x, 0, 3}, \n\t
        Ticks \[Rule] {{1, 2, 3}, \n\t\tAutomatic}];\)\)], "Input"],

Cell["\<\
Next we have a plot with manually specified ticks where some of the ticks \
have no label.\
\>", "Text"],

Cell[BoxData[
    \(\(Plot[x\^2, {x, 0, 3}, \n\t
        Ticks \[Rule] {\n\t\t\t{{0.5, "\<\>"}, {1, 1}, {1.5, "\<\>"}, {2, 
                2}, {2.5, "\<\>"}, {3, 3}}, \n\t\tAutomatic}];\)\)], "Input"],

Cell["\<\
The next line makes a plot with manually specified ticks where some of the \
ticks have no label and the height of each tick is specified.  In this case \
one value is given for height and the tick is extended by that distance in \
the positive and negative directions.\
\>", "Text"],

Cell[BoxData[
    \(\(Plot[x\^2, {x, 0, 3}, \n\t
        Ticks \[Rule] {\n\t\t\t{{0.5, "\<\>", 0.01}, \n\t\t\t\t{1, 1, 
                0.03}, \n\t\t\t\t{1.5, "\<\>", 0.01}, \n\t\t\t\t{2, 2, 
                0.03}, \n\t\t\t\t{2.5, "\<\>", 0.01}, \n\t\t\t\t{3, 3, 
                0.03}}, \n\t\tAutomatic}];\)\)], "Input"],

Cell["\<\
The next line uses a list (of two values) for the height of the ticks.  This \
specifies the height in the positive and negative directions.\
\>", "Text"],

Cell[BoxData[
    \(\(Plot[x\^2, {x, 0, 3}, \n\t
        Ticks \[Rule] {\n\t\t\t{{0.5, "\<\>", {0.01, 0}}, \n\t\t\t\t{1, 
                1, {0.02, 0}}, \n\t\t\t\t{1.5, "\<\>", {0.01, 
                  0}}, \n\t\t\t\t{2, 
                2, {0.02, 0}}, \n\t\t\t\t{2.5, "\<\>", {0.01, 
                  0}}, \n\t\t\t\t{3, 
                3, {0.01, 0}}}, \n\t\tAutomatic}];\)\)], "Input"],

Cell["\<\
In the next line the specification a style for some ticks is given (in list \
braces) after the height specification.\
\>", "Text"],

Cell[BoxData[
    \(\(Plot[x\^2, {x, 0, 3}, \n\t
        Ticks \[Rule] {\n\t\t\t{{0.5, "\<\>", {0.01, 0}}, \n\t\t\t\t{1, 
                1, {0.02, 
                  0}, {Thickness[0.01]}}, \n\t\t\t\t{1.5, "\<\>", {0.01, 
                  0}}, \n\t\t\t\t{2, 
                2, {0.02, 
                  0}, {Thickness[0.01]}}, \n\t\t\t\t{2.5, "\<\>", {0.01, 
                  0}}, \t\t\t\t{3, 
                3, {0.02, 
                  0}, {Thickness[0.01]}}}, \n\t\tAutomatic}];\)\)], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["ViewCenter, ViewPoint, ViewVertical", "Section"],

Cell["\<\
The next cell creates a graphic we will use to demonstrate ViewCenter, \
ViewPoint, and ViewVertical.\
\>", "Text",
  CellTags->"ViewOptions"],

Cell["\<\
gr=Graphics3D[{
PointSize[0.05],
 Hue[1], Point[{5, 8, 10}], 
 Hue[0.17], Point[{6, 8, 10}], 
 Hue[0.35], Point[{6, 8, 11}],
 Hue[0.75],Point[{6,9,10}]
 },PlotRange -> {{4.97, 6.03}, {7.97,9.03}, {9.97,11.03}}
 ];
 Show[gr];\
\>", "Input"],

Cell[TextData[{
  StyleBox["\"Display Area\"",
    FontSize->14,
    FontWeight->"Bold"],
  "\nWhen Mathematica displays any type of graphics the result is displayed \
in \"display area\".  Click on the graphic and a box will be displayed around \
the graphic, and black squares will be shown in each corner of the box and at \
the center of each side of the box.  You can drag the black squares around to \
resize the graphic. The area inside this box is the \"display area\".\n\n",
  StyleBox["\"Bounding Box\"",
    FontSize->14,
    FontWeight->"Bold"],
  "\nBy default Graphics3D has the setting (Boxed\[Rule]True) which ensures a \
box is drawn around the volume covered by the PlotRange setting.  I call this \
box around the graphic the \"bounding box\".\n"
}], "Text"],

Cell[CellGroupData[{

Cell["ViewCenter", "Subsection"],

Cell["\<\
ViewCenter is an option for Graphics3D, SurfaceGraphics and funtions that \
return such graphics. The ViewCenter usage message is shown below.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?ViewCenter\)\)], "Input"],

Cell[BoxData[
    RowBox[{"\<\"ViewCenter is an option for Graphics3D and SurfaceGraphics \
which gives the scaled coordinates of the point which appears at the center \
of the display area in the final plot.\"\>", " ", 
      ButtonBox[
        StyleBox["More\[Ellipsis]",
          "SR"],
        ButtonData:>"ViewCenter",
        Active->True,
        ButtonStyle->"RefGuideLink"]}]], "Print",
  CellTags->"Info3246361525-7780459"]
}, Open  ]],

Cell["\<\
The coordinates used for ViewVenter are always scaled so that the bounding \
box of the graphic has range (0,1) in all three directions.  The default \
setting is ViewCenter\[Rule]{0.5,0.5,0.5} which ensures the center of the \
bounding box in in the center of the display area. Next I use ViewCenter\
\[Rule]{0,0,0} and the red point is in the center of the graphic.  Here the \
red point is in the center of the display area because it's near the lowest \
value for the range along all three axes.  Recall the red point is at \
{5,8,10}, the yellow point is at {6,8,10}, the green point is at {6,8,11}, \
and the purple point is at {6,9,10}.\
\>", "Text"],

Cell[BoxData[
    \(\(Show[gr, ViewCenter -> {0, 0, 0}];\)\)], "Input"],

Cell["\<\
In the next cell the green point is near the center of the display area.  \
That is because the setting ViewCenter\[Rule]{1,0,1} ensures the maximum \
value along the x, z axes, and the minimum value along the y axis is in the \
center of the display area.\
\>", "Text"],

Cell[BoxData[
    \(\(Show[gr, ViewCenter -> {1, 0, 1}];\)\)], "Input"],

Cell["\<\
Regardless of what setting for ViewPoint is used, ViewCenter always refers to \
the same point on the graphic.  So for example the next input ensures the red \
point is in the center of the display area.\
\>", "Text"],

Cell[BoxData[
    \(\(Show[gr, ViewPoint \[Rule] {4, 5.2, \(-2.8\)}, 
        ViewCenter -> {0, 0, 0}];\)\)], "Input"],

Cell["\<\
The setting (SphericalRegion\[Rule]True) overrides any ViewCenter setting.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["ViewPoint", "Subsection"],

Cell["\<\
ViewPointr is an option for Graphics3D, SurfaceGraphics and funtions that \
return such graphics. The ViewCenter usage message is shown below.\
\>", "Text",
  CellTags->"ViewCenter"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?ViewPoint\)\)], "Input"],

Cell[BoxData[
    RowBox[{"\<\"ViewPoint is an option for Graphics3D and SurfaceGraphics \
which gives the point in space from which the objects plotted are to be \
viewed.\"\>", " ", 
      ButtonBox[
        StyleBox["More\[Ellipsis]",
          "SR"],
        ButtonData:>"ViewPoint",
        Active->True,
        ButtonStyle->"RefGuideLink"]}]], "Print",
  CellTags->"Info3246359408-1828621"]
}, Open  ]],

Cell["\<\
For ViewPoint the coordinates of the bounding box have the range (-0.5, 0.5) \
along each axis.  The ViewPoint option uses this scaled coordinate system to \
specify the direction form which the graphics are viewed.  The setting of the \
ViewPoint option must be a point outside the bounding box.  In the next cell \
we see the default ViewPoint setting.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(AbsoluteOptions[gr, ViewPoint]\)], "Input"],

Cell[BoxData[
    \({ViewPoint \[Rule] {1.3`, \(-2.4`\), 2.`}}\)], "Output"]
}, Open  ]],

Cell["\<\
Because the coordinates used for ViewPoint are scaled to (-0.5,0.5) the \
viewing angle of the next example is parallel with the left edge and top edge \
of the bounding box.\
\>", "Text"],

Cell[BoxData[
    \(\(Show[gr, ViewPoint -> {2, \(-0.5\), 0.5}];\)\)], "Input"],

Cell["\<\
In the next example the last coordinate of the ViewPoint setting is zero, so \
our viewing angle is centered along the vertical axis.\
\>", "Text"],

Cell[BoxData[
    \(\(Show[gr, ViewPoint -> {2, \(-0.8\), 0}];\)\)], "Input"],

Cell["\<\
The effects of perspective are severe when the ViewPoint is very close to the \
edge of the bounding box.  In the next example we see what the graphic would \
look like to a fly who is about to land on the green point.\
\>", "Text"],

Cell[BoxData[
    \(\(Show[gr, ViewPoint -> {0.56, \(-0.59\), 0.61}];\)\)], "Input"],

Cell["\<\
In the next example the ViewPoint is far away, and out viewing angle is \
nearly parallel with the top and bottom surfaces of the bounding box.\
\>", "Text"],

Cell[BoxData[
    \(\(Show[gr, ViewPoint -> {18, \(-4\), 0}];\)\)], "Input"],

Cell["\<\
Next we view the graphic from a viewing angle that almost lines up opposite \
corners of the bounding box.\
\>", "Text"],

Cell[BoxData[
    \(\(Show[gr, ViewPoint -> {2, \(-2.06\), 2.26}];\)\)], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["ViewVertical", "Subsection"],

Cell["\<\
ViewVertical is an option for Graphics3D, SurfaceGraphics and funtions that \
return Graphics3D or SurfaceGraphics such graphics. The ViewVertical usage \
message is shown below.\
\>", "Text",
  CellTags->"ViewCenter"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?ViewVertical\)\)], "Input"],

Cell[BoxData[
    RowBox[{"\<\"ViewVertical is an option for Graphics3D and SurfaceGraphics \
which specifies what direction in scaled coordinates should be vertical in \
the final image.\"\>", " ", 
      ButtonBox[
        StyleBox["More\[Ellipsis]",
          "SR"],
        ButtonData:>"ViewVertical",
        Active->True,
        ButtonStyle->"RefGuideLink"]}]], "Print",
  CellTags->"Info3246359414-5804391"]
}, Open  ]],

Cell["\<\
The default ViewVertical setting has the z axis in the vertical direction.  \
This is clear in the next graphic.\
\>", "Text"],

Cell[BoxData[
    \(\(Show[gr, ViewVertical -> {0, 0, 1}, 
        ViewPoint -> {0.85, \(-6\), 0}];\)\)], "Input"],

Cell["\<\
In the next cell we have a ViewVertical setting that has the effect of \
rotating the bounding box counter-clockwise.  Here we have the setting \
ViewVertical\[Rule]{0.1,0,1} and we show an arrow in the direction of the \
vector {0.1,0,1}.  You will notice the bounding box is rotated to make the \
arrow pointing straight up.\
\>", "Text"],

Cell[BoxData[
    \(\(Show[gr, 
        Graphics3D[{Thickness[0.01], 
            Line[{{5, 8, 10}, {5.08, 8, 
                  10.8}}], \[IndentingNewLine]SurfaceColor[GrayLevel[0]], 
            Polygon[{{5.06, 8, 10.8}, {5.1, 8, 10.8}, {5.08, 8, 
                  10.88}}]\[IndentingNewLine]}], \
\[IndentingNewLine]ViewVertical -> {0.1, 0, 1}, 
        ViewPoint -> {\(-0.85\), \(-6\), 0}];\)\)], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["A palette with graphics in the buttons", "Section",
  CellFrame->{{0, 0}, {0, 4}}],

Cell["\<\
P. J. Hinton of Wolfram Research provided the amazing solution below to the \
Math Group which makes a palette with graphics in the buttons.  First we \
define a list of graphics objects that will appear in the buttons.\
\>", "Text"],

Cell[BoxData[
    \(\(grList = {\[IndentingNewLine]Plot[Sin[x], {x, 0, 2  \[Pi]}, 
            DisplayFunction \[Rule] Identity], \[IndentingNewLine]Plot3D[
            Sin[x]\ Cos\ [y], {x, 0, 2  \[Pi]}, {y, 0, 2  \[Pi]}, 
            DisplayFunction \[Rule] 
              Identity]\[IndentingNewLine]};\)\)], "Input"],

Cell["\<\
Next convert the graphics objects to Mathematica  PostScript strings.\
\>", "Text"],

Cell[BoxData[
    \(\(psStringList = Map[DisplayString, grList];\)\)], "Input"],

Cell["\<\
Now create a list of cells containing the graphics at 100 x 100 pixels.\
\>", "Text"],

Cell[BoxData[
    \(\(cellExprList = 
        Map[\[IndentingNewLine]Cell[\[IndentingNewLine]GraphicsData["\<\
PostScript\>", #], 
              ImageSize \[Rule] {100, 
                  100}] &, \[IndentingNewLine]psStringList];\)\)], "Input"],

Cell["\<\
The next line generates the needed ButtonBoxes. Here the buttons paste copies \
of the images so the front end automatically determines the size of the \
pasted image.\
\>", "Text"],

Cell[BoxData[
    \(\(btnBoxList = \[IndentingNewLine]Map[\[IndentingNewLine]ButtonBox[#, \
\[IndentingNewLine]ButtonFunction \[RuleDelayed] \((NotebookWrite[
                    InputNotebook[], # /. \((ImageSize \[Rule] _)\) \[Rule] \
\((ImageSize \[Rule] Automatic)\)])\)\[IndentingNewLine], 
              ButtonEvaluator \[Rule] Automatic, Active \[Rule] True] &, 
          cellExprList];\)\)], "Input"],

Cell["\<\
Finally a cell with buttons containing the graphics in a RowBox strcuture is \
created.  Pressing one of the buttons pastes a copy of the graphic in the \
notebook.\
\>", "Text"],

Cell[BoxData[
    \(CellPrint[Cell[BoxData[RowBox[btnBoxList]]]]\)], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Graphics primitives and directives", "Section"],

Cell[TextData[{
  "In ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " graphic primitives are nouns, and graphic directives are adjectives.  \
That is the the directives specify what the primitives look like.",
  StyleBox["\n", "Input",
    FontWeight->"Plain",
    Background->None,
    FontVariations->{"CompatibilityType"->0}],
  "\nThe graphics primitives (2D) for use in Graphics[{__}] are\n     Line, \
Point, Polygon, Text, Rectangle, Circle, Disk, Raster, RasterArray.\n\nThe \
graphics primitives (3D) for use in  Graphics3D[{__}] are\n     Line, Point, \
Polygon, Text, Cuboid.\n     \nThe directives available for specifying \
Graphics and Graphics3D primitives are:\n    Thickness, PointSize, Dashing, \
AbsoluteThickness, AbsolutePointSize, AbsoluteDashing, RGBColor, Hue, \
GrayLevel, CMYKColor.\n\nIn addition the following directives are available \
for Graphics3D primitives:\n    SurfaceColor, EdgeForm, FaceForm\n\nThe first \
argument in Graphics, or Graphics3D must be a suitable graphics primitive, or \
a list of such primatives. If a list of primitives is used, graphic \
directives can be included.  A graphics directive affects all relavent \
primitives that come after the directive until another directive is given to \
override the earlier directive.\n\nFor example in the next cell the first \
point, circle and line are drawn using the default directives.  The second \
circle and line are thicker due to the directive Thickness[0.02].  Also the \
second point is larger due to the directive PointSize[0.02]. The third point, \
circle and line are red due to the directive RGBColor[1,0,0] but the earlier \
directives for Thickness and PointSize still apply. Then for the fourth \
point, circle and line are green because the earlier color directive is \
overridden by the directive Hue[0.3]. In addition the directive \
AbsolutePointSize[20] makes the fourth point even larger than the points \
before it. However, the fourth circle and line are the same thickness as the \
third circle and line because there is no directive to override the earlier \
thickness. Finally the last circle and line are thinner due to the directive \
AbsoluteThickness[1], but they have the same color as the circle and line \
that preceeded them because the earlier directive wan not overridden.  \
Likewise the last point is the same size as the fourth point because there is \
no overridding directive.\n"
}], "Text"],

Cell[BoxData[{
    RowBox[{
      RowBox[{"example", "=", 
        RowBox[{"Graphics", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
            
            RowBox[{\(Point[{0.5, 0.5}]\), ",", 
              "\[IndentingNewLine]", \(Circle[{0.5, 0.5}, 0.3]\), ",", 
              "\[IndentingNewLine]", \(Line[{{1, 0}, {1, 1}}]\), ",", 
              "\[IndentingNewLine]", 
              StyleBox[\(Thickness[0.02]\),
                FontColor->RGBColor[1, 0, 0]], 
              StyleBox[",",
                FontColor->RGBColor[1, 0, 0]], 
              StyleBox[\(PointSize[0.02]\),
                FontColor->RGBColor[1, 0, 0]], ",", 
              "\[IndentingNewLine]", \(Point[{1.5, 0.5}]\), ",", 
              "\[IndentingNewLine]", \(Circle[{1.5, 0.5}, 0.3]\), ",", 
              "\[IndentingNewLine]", \(Line[{{2, 0}, {2, 1}}]\), ",", 
              "\[IndentingNewLine]", 
              StyleBox[\(RGBColor[1, 0, 0]\),
                FontColor->RGBColor[1, 0, 0]], ",", 
              "\[IndentingNewLine]", \(Point[{2.5, 0.5}]\), ",", 
              "\[IndentingNewLine]", \(Circle[{2.5, 0.5}, 0.3]\), ",", 
              "\[IndentingNewLine]", \(Line[{{3, 0}, {3, 1}}]\), ",", 
              "\[IndentingNewLine]", 
              StyleBox[\(Hue[0.3]\),
                FontColor->RGBColor[1, 0, 0]], 
              StyleBox[",",
                FontColor->RGBColor[1, 0, 0]], 
              StyleBox[\(AbsolutePointSize[20]\),
                FontColor->RGBColor[1, 0, 0]], ",", 
              "\[IndentingNewLine]", \(Point[{3.5, 0.5}]\), ",", 
              "\[IndentingNewLine]", \(Circle[{3.5, 0.5}, 0.3]\), ",", 
              "\[IndentingNewLine]", \(Line[{{4, 0}, {4, 1}}]\), ",", 
              "\[IndentingNewLine]", 
              StyleBox[\(AbsoluteThickness[1]\),
                FontColor->RGBColor[1, 0, 0]], ",", 
              "\[IndentingNewLine]", \(Point[{4.5, 0.5}]\), ",", 
              "\[IndentingNewLine]", \(Circle[{4.5, 0.5}, 0.3]\), ",", 
              "\[IndentingNewLine]", \(Line[{{5, 0}, {5, 1}}]\)}], 
            "\[IndentingNewLine]", "}"}], "]"}]}], 
      ";"}], "\[IndentingNewLine]", \(Show[example, 
        PlotRange -> {{0, 5.2}, {0, 1}}, Axes -> True, 
        AspectRatio \[Rule] Automatic, 
        ImageSize \[Rule] {600, 150}];\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Converting between Graphics3D, SurfaceGraphcs, ContourGraphics, \
DensityGraphics, Graphics\
\>", "Section"],

Cell["\<\
The different type of Mathematica graphics include Graphics, Graphics3D, \
SurfaceGraphics, DensityGraphics, and ContourGraphics.  Mathematica allows \
one to easily make the following conversions on SurfaceGraphics, \
ContourGraphics, and DensityGraphics.
 
SurfaceGraphics[\[Ellipsis]] \[DoubleLongRightArrow] DensityGraphics[\
\[Ellipsis]]
SurfaceGraphics[\[Ellipsis]] \[DoubleLongRightArrow] ContourGraphics[\
\[Ellipsis]]
SurfaceGraphics[\[Ellipsis]] \[DoubleLongRightArrow] Graphics3D[\[Ellipsis]]
 
ContourGraphics[\[Ellipsis]] \[DoubleLongRightArrow] DensityGraphics[\
\[Ellipsis]]
ContourGraphics[\[Ellipsis]] \[DoubleLongRightArrow] SurfaceGraphics[\
\[Ellipsis]]
ContourGraphics[\[Ellipsis]] \[DoubleLongRightArrow] Graphics[\[Ellipsis]]
 
DensityGraphics[\[Ellipsis]] \[DoubleLongRightArrow] ContourGraphics[\
\[Ellipsis]]
DensityGraphics[\[Ellipsis]] \[DoubleLongRightArrow] SurfaceGraphics[\
\[Ellipsis]]
DensityGraphics[\[Ellipsis]] \[DoubleLongRightArrow] Graphics[\[Ellipsis]]

To see how simple this is consider the next cell which makes a course \
DensityPlot, and displays the underlying expression for the graphic.  You \
will notice the underlying expression is simply the head DensityGraphics with \
a matrix of real numbers and a list of options.\
\>", "Text",
  CellTags->"Converting_Graphics"],

Cell[BoxData[{
    \(\(DensityGraph = 
        DensityPlot[Sin[x\ \ y], {x, 0, 3}, {y, 0, 3}, 
          PlotPoints -> 5];\)\), "\[IndentingNewLine]", 
    \(InputForm[DensityGraph]\)}], "Input"],

Cell["\<\
In the next cell we simply evaluate SurfaceGraphics[DensityGraph]  to change \
the above DensityGraphic to SurfaceGraphics.  This cell also shows the \
SurfaceGraphics and returns the underlying expression of the SurfaceGraphics. \
 Notice to the underlying expression is very similar to the one for \
DensityGraph.  We only changed the head to SurfaceGraphics, and made some \
minor changes to the options. Switching between SurfaceGraphics, \
DensityGraphics, and ContourGraphics is trivial because the three type of \
graphics have the same underlying form.\
\>", "Text"],

Cell[BoxData[{
    \(\(SurfaceGraph = 
        SurfaceGraphics[DensityGraph];\)\), "\[IndentingNewLine]", 
    \(\(Show[SurfaceGraph];\)\), "\[IndentingNewLine]", 
    \(InputForm[SurfaceGraph]\)}], "Input"],

Cell[TextData[{
  "In the next cell we simply evaluate  Graphics3D[SurfaceGraph]  to change \
the above SurfaceGraphics to Graphics3D.  This cell also shows the \
SurfaceGraphics and returns the underlying expression of the Graphics3D.  The \
result we get back has the form ",
  Cell[BoxData[
      \(TraditionalForm\`Graphics3D[{primatives}, \ options]\)]],
  ".  While the graphic rendered below is the same we get from \
Show[SurfaceGraph], we could combine the Graphics3D primitives below with \
other primitives in ways that aren't possible with SurfaceGraphics."
}], "Text"],

Cell[BoxData[{
    \(\(Graph3Dim = Graphics3D[SurfaceGraph];\)\), "\[IndentingNewLine]", 
    \(\(Show[Graph3Dim];\)\), "\[IndentingNewLine]", 
    \(InputForm[Graph3Dim]\)}], "Input"],

Cell[TextData[{
  "In the next cell we simply evaluate  Graphics[DensityGraph]  to change the \
above DensityGraphics to Graphics primitives.  This cell also shows the \
Graphics and returns the underlying expression.  The result we get back has \
the form ",
  Cell[BoxData[
      \(TraditionalForm\`Graphics[{primatives}, \ options]\)]],
  ".  While the graphic rendered below is the same we get from \
Show[DensityGraph], we could combine the Graphics primitives below with other \
primitives in ways that aren't possible with DensityGraphics."
}], "Text"],

Cell[BoxData[{
    \(\(gr = Graphics[DensityGraph];\)\), "\[IndentingNewLine]", 
    \(\(Show[gr];\)\), "\[IndentingNewLine]", 
    \(InputForm[gr]\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
How to hide the portion of a graphic that is outside of a circle\
\>", "Section"],

Cell["\<\
Sometimes one might want to display a graphic such that only the portion \
inside a circle with a certain radius is displayed. The plot of a Sin wave \
below will be used as an example where only the portion of the graphic inside \
a circle centered at the origin with radius 0.85 is displayed.\
\>", "Text"],

Cell[BoxData[
    \(\(curve = Plot[Sin[75\ t], {t, \(-1\), 1}];\)\)], "Input"],

Cell["\<\
The graphic made by the next cell is used to demonstrate how one can hide the \
portion of the above plot outside the desired circle.\
\>", "Text"],

Cell[BoxData[{
    \(\(circ = 
        ParametricPlot[{0.85*Cos[t], 0.85*Sin[t]}, {t, 0.03, 
            2  \[Pi] - 0.03}, \[IndentingNewLine]DisplayFunction \[Rule] 
            Identity, PlotPoints \[Rule] 9, 
          PlotDivision \[Rule] 
            1];\)\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(pnts = 
        Join[Part[circ, 1, 1, 1, 
            1], \[IndentingNewLine]{{1.1, \(-0.03\)}, {1.1, \(-1.1\)}, \
{\(-1.1\), \(-1.1\)}, {\(-1.1\), 1.1}, {1.1, 1.1}, {1.1, 
              0.03}}\ \[IndentingNewLine]];\)\[IndentingNewLine]\), "\
\[IndentingNewLine]", 
    \(\(mask = 
        Graphics[{GrayLevel[0.7], 
            Polygon[pnts]}];\)\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(Show[mask, AspectRatio \[Rule] Automatic, 
        PlotRange \[Rule] {{\(-1.5\), 1.5}, {\(-1.5\), 1.5}}, 
        Axes \[Rule] True];\)\)}], "Input"],

Cell["\<\
The next input displays the mask from above on-top of the Sin wave made \
earlier.\
\>", "Text"],

Cell[BoxData[
    \(\(Show[curve, mask, AspectRatio \[Rule] Automatic, 
        PlotRange \[Rule] {{\(-1.5\), 1.5}, {\(-1.5\), 1.5}}, 
        Axes \[Rule] True];\)\)], "Input"],

Cell["\<\
The next cell makes a circle with lots of points, and ensures the mask covers \
the whole circle.\
\>", "Text"],

Cell[BoxData[{
    \(\(circ = 
        ParametricPlot[{0.85*Cos[t], 0.85*Sin[t]}, {t, 0, 
            2  \[Pi]}, \[IndentingNewLine]DisplayFunction \[Rule] 
            Identity];\)\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(pnts = 
        Join[Part[circ, 1, 1, 1, 
            1], \[IndentingNewLine]{{1.1, 
              0}, {1.1, \(-1.1\)}, {\(-1.1\), \(-1.1\)}, {\(-1.1\), 
              1.1}, {1.1, 1.1}, {1.1, 
              0}}\ \[IndentingNewLine]];\)\[IndentingNewLine]\), "\
\[IndentingNewLine]", 
    \(\(mask = 
        Graphics[{GrayLevel[0.7], 
            Polygon[pnts]}];\)\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(Show[curve, mask, AspectRatio \[Rule] Automatic, 
        PlotRange \[Rule] {{\(-1\), 1}, {\(-1\), 1}}, 
        Axes \[Rule] True];\)\)}], "Input"],

Cell["\<\
In the next cell the mask is invisible since it's the same color as the \
bacgkround.\
\>", "Text"],

Cell[BoxData[{
    \(\(mask = 
        Graphics[{GrayLevel[1], 
            Polygon[pnts]}];\)\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(Show[curve, mask, AspectRatio \[Rule] Automatic, 
        PlotRange \[Rule] {{\(-1\), 1}, {\(-1\), 1}}, 
        Axes \[Rule] True];\)\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Making an animation", "Section"],

Cell["\<\
When making frames for an animation it's convenient to have all the frames of \
the animation grouped together with all but the first frame closed.  The code \
in the next cell does this automatically.  This solution was sent to the \
MathGroup by  (adam.smith@hillsdale.edu).\
\>", "Text"],

Cell[BoxData[{
    \(\(Do[
        Plot[Sin[2\ \[Pi]\ \ \((t + n/25)\)], {t, 0, 1}], {n, 1, 
          25}];\)\), "\[IndentingNewLine]", 
    \(\(SelectionMove[EvaluationNotebook[], All, 
        GeneratedCell];\)\), "\[IndentingNewLine]", 
    \(FrontEndTokenExecute["\<CellGroup\>"]\), "\[IndentingNewLine]", 
    \(FrontEndTokenExecute["\<OpenCloseGroup\>"]\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Stop the graphics error messages", "Section"],

Cell["\<\
It's not uncommon for Graphic command such as Plot to produce a series of \
annoying error messages. This typically happens when one makes a typo as in \
the next cell.\
\>", "Text"],

Cell[BoxData[
    \(\(Plot[BeselJ[1, x], {x, 0, 4}];\)\)], "Input"],

Cell["\<\
Plot and several other graphic functions will no longer  do this if you \
evaluate the cell below.\
\>", "Text"],

Cell[BoxData[
    \(Off[ContourPlot::plnr, DensityPlot::plnr, Plot::plnr, Plot3D::plnc, \n
      Plot3D::gval, ParametricPlot::pptr, ParametricPlot3D::pplr]\)], "Input"],

Cell["\<\
You can include the code above in your (init.m) file and Mathematica will \
automatically turn off these messages when the kernel is launched.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["The right way to plot  f'[x]", "Section"],

Cell["\<\
Consider several attempts to plot the derivative of f[x] below.\
\>", "Text"],

Cell[BoxData[
    \(\(f[x_] = Sum[Sin[n\ x]/n, \ {n, 20}];\)\)], "Input"],

Cell["This first attempt doesn't work at all.", "Text"],

Cell[BoxData[
    \(\(Plot[D[f[x], x], \ {x, 0, 8}];\)\)], "Input"],

Cell["\<\
The second attempt works, but takes over 11 seconds, because the derivative \
is derived for every sample point.\
\>", "Text"],

Cell[BoxData[
    \(\(Plot[\(f'\)[x], \ {x, 0, 8}];\)\)], "Input"],

Cell["\<\
The best version is below,and takes a little more than 1 second.  It works \
much faster because the derivative is worked out only once (before the \
derivative is sampled).\
\>", "Text"],

Cell[BoxData[
    \(\(Plot[Evaluate[\(f'\)[x]], {x, 0, 8}];\)\)], "Input"]
}, Closed]]
}, Open  ]]
},
FrontEndVersion->"5.2 for X",
ScreenRectangle->{{0, 1280}, {0, 1024}},
WindowToolbars->"EditBar",
WindowSize->{1209, 874},
WindowMargins->{{Automatic, 16}, {Automatic, 29}},
ShowSelection->True,
CellLabelAutoDelete->True,
AutoItalicWords->{},
Magnification->1.25,
StyleDefinitions -> "PastelColor.nb"
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{
  "ColorFunction"->{
    Cell[17984, 513, 364, 7, 69, "Text",
      CellTags->"ColorFunction"]},
  "ColorFunctionScaling"->{
    Cell[19347, 551, 1077, 19, 127, "Text",
      CellTags->"ColorFunctionScaling"]},
  "DisplayString"->{
    Cell[24149, 680, 97, 1, 31, "Text",
      CellTags->"DisplayString"]},
  "Info3247287724-5688812"->{
    Cell[24325, 688, 602, 12, 72, "Print",
      CellTags->"Info3247287724-5688812"]},
  "EdgeForm"->{
    Cell[25943, 733, 94, 1, 31, "Text",
      CellTags->"EdgeForm"]},
  "HiddenSurface"->{
    Cell[36387, 1025, 666, 14, 69, "Text",
      CellTags->"HiddenSurface"]},
  "LightSources"->{
    Cell[41504, 1152, 1025, 24, 164, "Text",
      CellTags->"LightSources"]},
  "ListPlot3D"->{
    Cell[47442, 1297, 563, 12, 88, "Text",
      CellTags->"ListPlot3D"]},
  "Mesh"->{
    Cell[48079, 1316, 229, 5, 50, "Text",
      CellTags->"Mesh"]},
  "MeshRange"->{
    Cell[49447, 1355, 615, 10, 107, "Text",
      CellTags->"MeshRange"]},
  "Offset"->{
    Cell[51361, 1405, 551, 15, 50, "Text",
      CellTags->"Offset"]},
  "Scaled"->{
    Cell[53105, 1452, 84, 1, 31, "Text",
      CellTags->"Scaled"]},
  "Plot3Matrix"->{
    Cell[58372, 1591, 616, 18, 69, "Text",
      CellTags->"Plot3Matrix"]},
  "PolygonIntersections"->{
    Cell[59067, 1616, 155, 4, 31, "Text",
      CellTags->"PolygonIntersections"]},
  "Raster"->{
    Cell[62901, 1716, 96, 1, 31, "Text",
      CellTags->"Raster"]},
  "Rectangle"->{
    Cell[68586, 1866, 591, 11, 107, "Text",
      CellTags->"Rectangle"]},
  "Shading"->{
    Cell[72460, 1968, 642, 18, 69, "Text",
      CellTags->"Shading"],
    Cell[73221, 1992, 282, 5, 63, "Input",
      CellTags->"Shading"]},
  "SphericalRegion"->{
    Cell[73657, 2008, 173, 4, 31, "Text",
      CellTags->"SphericalRegion"]},
  "ViewOptions"->{
    Cell[164524, 3996, 152, 4, 31, "Text",
      CellTags->"ViewOptions"]},
  "Info3246361525-7780459"->{
    Cell[166010, 4045, 434, 10, 51, "Print",
      CellTags->"Info3246361525-7780459"]},
  "ViewCenter"->{
    Cell[168080, 4102, 192, 4, 31, "Text",
      CellTags->"ViewCenter"],
    Cell[170711, 4190, 228, 5, 31, "Text",
      CellTags->"ViewCenter"]},
  "Info3246359408-1828621"->{
    Cell[168347, 4113, 397, 10, 51, "Print",
      CellTags->"Info3246359408-1828621"]},
  "Info3246359414-5804391"->{
    Cell[171017, 4202, 415, 10, 51, "Print",
      CellTags->"Info3246359414-5804391"]},
  "Converting_Graphics"->{
    Cell[179583, 4403, 1329, 29, 349, "Text",
      CellTags->"Converting_Graphics"]}
  }
*)

(*CellTagsIndex
CellTagsIndex->{
  {"ColorFunction", 189802, 4686},
  {"ColorFunctionScaling", 189906, 4689},
  {"DisplayString", 190013, 4692},
  {"Info3247287724-5688812", 190118, 4695},
  {"EdgeForm", 190221, 4698},
  {"HiddenSurface", 190312, 4701},
  {"LightSources", 190410, 4704},
  {"ListPlot3D", 190507, 4707},
  {"Mesh", 190594, 4710},
  {"MeshRange", 190679, 4713},
  {"Offset", 190768, 4716},
  {"Scaled", 190853, 4719},
  {"Plot3Matrix", 190941, 4722},
  {"PolygonIntersections", 191045, 4725},
  {"Raster", 191143, 4728},
  {"Rectangle", 191229, 4731},
  {"Shading", 191319, 4734},
  {"SphericalRegion", 191485, 4739},
  {"ViewOptions", 191583, 4742},
  {"Info3246361525-7780459", 191689, 4745},
  {"ViewCenter", 191796, 4748},
  {"Info3246359408-1828621", 191975, 4753},
  {"Info3246359414-5804391", 192094, 4756},
  {"Converting_Graphics", 192210, 4759}
  }
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 412, 13, 192, "Title"],

Cell[CellGroupData[{
Cell[2213, 70, 62, 1, 58, "Section"],
Cell[2278, 73, 63, 1, 29, "Miscellaneous Section"],
Cell[2344, 76, 1395, 52, 271, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[3776, 133, 62, 1, 45, "Section"],
Cell[3841, 136, 861, 14, 107, "Text"],
Cell[4705, 152, 414, 8, 103, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[5156, 165, 30, 0, 40, "Section"],
Cell[5189, 167, 504, 9, 69, "Text"],
Cell[5696, 178, 576, 11, 103, "Input"],
Cell[6275, 191, 333, 5, 50, "Text"],
Cell[6611, 198, 232, 6, 54, "Input"],
Cell[6846, 206, 450, 7, 69, "Text"],
Cell[7299, 215, 232, 6, 54, "Input"],
Cell[7534, 223, 382, 6, 50, "Text"],
Cell[7919, 231, 229, 6, 40, "Input"],
Cell[8151, 239, 481, 12, 40, "Input"],
Cell[8635, 253, 403, 6, 50, "Text"],
Cell[9041, 261, 489, 12, 40, "Input"],
Cell[9533, 275, 369, 6, 50, "Text"],
Cell[9905, 283, 370, 8, 50, "Text"],
Cell[10278, 293, 538, 12, 62, "Input"],
Cell[10819, 307, 124, 3, 31, "Text"],
Cell[10946, 312, 534, 12, 62, "Input"],
Cell[11483, 326, 357, 6, 50, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[11877, 337, 28, 0, 40, "Section"],
Cell[11908, 339, 560, 11, 69, "Text"],
Cell[12471, 352, 111, 2, 40, "Input"],
Cell[12585, 356, 533, 9, 107, "Text"],
Cell[13121, 367, 326, 7, 61, "Input"],
Cell[13450, 376, 364, 8, 126, "Text"],
Cell[13817, 386, 149, 2, 61, "Input"],
Cell[13969, 390, 125, 4, 50, "Text"],
Cell[14097, 396, 151, 2, 61, "Input"],
Cell[14251, 400, 263, 8, 50, "Text"],
Cell[14517, 410, 386, 8, 61, "Input"],
Cell[14906, 420, 482, 17, 278, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[15425, 442, 31, 0, 40, "Section"],
Cell[15459, 444, 75, 0, 31, "Text"],
Cell[15537, 446, 301, 5, 103, "Input"],
Cell[15841, 453, 417, 9, 69, "Text"],
Cell[16261, 464, 248, 5, 82, "Input"],
Cell[16512, 471, 220, 6, 31, "Text"],
Cell[16735, 479, 255, 5, 82, "Input"],
Cell[16993, 486, 598, 13, 126, "Text"],
Cell[17594, 501, 318, 5, 124, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[17949, 511, 32, 0, 40, "Section"],
Cell[17984, 513, 364, 7, 69, "Text",
  CellTags->"ColorFunction"],
Cell[18351, 522, 213, 4, 61, "Input"],
Cell[18567, 528, 236, 4, 82, "Input"],
Cell[18806, 534, 243, 4, 50, "Text"],
Cell[19052, 540, 216, 4, 61, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[19305, 549, 39, 0, 40, "Section"],
Cell[19347, 551, 1077, 19, 127, "Text",
  CellTags->"ColorFunctionScaling"],
Cell[20427, 572, 272, 4, 61, "Input"],
Cell[20702, 578, 272, 4, 61, "Input"],
Cell[20977, 584, 280, 5, 50, "Text"],
Cell[21260, 591, 425, 9, 124, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[21722, 605, 30, 0, 40, "Section"],

Cell[CellGroupData[{
Cell[21777, 609, 49, 1, 40, "Input"],
Cell[21829, 612, 137, 2, 51, "Print"]
}, Open  ]],
Cell[21981, 617, 356, 6, 69, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[22374, 628, 34, 0, 40, "Section"],
Cell[22411, 630, 573, 11, 126, "Text"],
Cell[22987, 643, 183, 3, 102, "Input"],
Cell[23173, 648, 435, 10, 69, "Text"],
Cell[23611, 660, 342, 8, 102, "Input"],
Cell[23956, 670, 121, 3, 31, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[24114, 678, 32, 0, 40, "Section"],
Cell[24149, 680, 97, 1, 31, "Text",
  CellTags->"DisplayString"],

Cell[CellGroupData[{
Cell[24271, 685, 51, 1, 40, "Input"],
Cell[24325, 688, 602, 12, 72, "Print",
  CellTags->"Info3247287724-5688812"]
}, Open  ]],
Cell[24942, 703, 327, 5, 50, "Text"],
Cell[25272, 710, 218, 4, 61, "Input"],
Cell[25493, 716, 110, 3, 31, "Text"],
Cell[25606, 721, 270, 5, 82, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[25913, 731, 27, 0, 40, "Section"],
Cell[25943, 733, 94, 1, 31, "Text",
  CellTags->"EdgeForm"],

Cell[CellGroupData[{
Cell[26062, 738, 46, 1, 40, "Input"],
Cell[26111, 741, 210, 3, 51, "Print"]
}, Open  ]],
Cell[26336, 747, 679, 13, 117, "Text"],
Cell[27018, 762, 108, 2, 40, "Input"],
Cell[27129, 766, 109, 3, 31, "Text"],
Cell[27241, 771, 120, 2, 40, "Input"],
Cell[27364, 775, 103, 3, 31, "Text"],
Cell[27470, 780, 134, 2, 40, "Input"],
Cell[27607, 784, 107, 3, 31, "Text"],
Cell[27717, 789, 179, 3, 61, "Input"],
Cell[27899, 794, 113, 3, 31, "Text"],
Cell[28015, 799, 294, 5, 103, "Input"],
Cell[28312, 806, 164, 3, 31, "Text"],
Cell[28479, 811, 125, 2, 61, "Input"],
Cell[28607, 815, 73, 0, 31, "Text"],
Cell[28683, 817, 130, 3, 40, "Input"],
Cell[28816, 822, 422, 11, 54, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[29275, 838, 33, 0, 40, "Section"],
Cell[29311, 840, 507, 10, 126, "Text"],
Cell[29821, 852, 859, 18, 355, "Input"],
Cell[30683, 872, 316, 6, 88, "Text"],
Cell[31002, 880, 756, 14, 376, "Input"],
Cell[31761, 896, 205, 4, 50, "Text"],
Cell[31969, 902, 50, 1, 40, "Input"],
Cell[32022, 905, 692, 13, 164, "Text"],
Cell[32717, 920, 78, 1, 40, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[32832, 926, 29, 0, 40, "Section"],

Cell[CellGroupData[{
Cell[32886, 930, 161, 4, 81, "Subsubsection"],
Cell[33050, 936, 185, 4, 50, "Text"],
Cell[33238, 942, 458, 9, 124, "Input"],
Cell[33699, 953, 172, 3, 50, "Text"],
Cell[33874, 958, 294, 4, 103, "Input"],
Cell[34171, 964, 172, 3, 50, "Text"],
Cell[34346, 969, 441, 8, 124, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[34824, 982, 202, 5, 81, "Subsubsection"],
Cell[35029, 989, 186, 4, 50, "Text"],
Cell[35218, 995, 1085, 22, 355, "Input"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[36352, 1023, 32, 0, 40, "Section"],
Cell[36387, 1025, 666, 14, 69, "Text",
  CellTags->"HiddenSurface"],
Cell[37056, 1041, 246, 4, 63, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[37339, 1050, 31, 0, 40, "Section"],
Cell[37373, 1052, 389, 6, 69, "Text"],
Cell[37765, 1060, 361, 5, 124, "Input"],
Cell[38129, 1067, 389, 7, 103, "Input"],
Cell[38521, 1076, 624, 9, 107, "Text"],
Cell[39148, 1087, 213, 3, 82, "Input"],
Cell[39364, 1092, 253, 4, 50, "Text"],
Cell[39620, 1098, 185, 4, 63, "Text"],
Cell[39808, 1104, 158, 2, 61, "Input"],
Cell[39969, 1108, 320, 5, 69, "Text"],
Cell[40292, 1115, 159, 2, 61, "Input"],
Cell[40454, 1119, 174, 4, 50, "Text"],
Cell[40631, 1125, 198, 3, 61, "Input"],
Cell[40832, 1130, 295, 5, 63, "Text"],
Cell[41130, 1137, 138, 3, 40, "Input"],
Cell[41271, 1142, 162, 3, 61, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[41470, 1150, 31, 0, 40, "Section"],
Cell[41504, 1152, 1025, 24, 164, "Text",
  CellTags->"LightSources"],
Cell[42532, 1178, 325, 6, 82, "Input"],
Cell[42860, 1186, 194, 4, 69, "Text"],
Cell[43057, 1192, 332, 6, 82, "Input"],
Cell[43392, 1200, 220, 5, 69, "Text"],
Cell[43615, 1207, 325, 6, 82, "Input"],
Cell[43943, 1215, 330, 5, 69, "Text"],
Cell[44276, 1222, 452, 9, 145, "Input"],
Cell[44731, 1233, 366, 6, 69, "Text"],
Cell[45100, 1241, 511, 9, 145, "Input"],
Cell[45614, 1252, 72, 0, 31, "Text"],
Cell[45689, 1254, 52, 1, 40, "Input"],
Cell[45744, 1257, 424, 7, 69, "Text"],
Cell[46171, 1266, 578, 9, 208, "Input"],
Cell[46752, 1277, 295, 5, 50, "Text"],
Cell[47050, 1284, 289, 6, 82, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[47376, 1295, 63, 0, 40, "Section"],
Cell[47442, 1297, 563, 12, 88, "Text",
  CellTags->"ListPlot3D"]
}, Closed]],

Cell[CellGroupData[{
Cell[48042, 1314, 34, 0, 40, "Section"],
Cell[48079, 1316, 229, 5, 50, "Text",
  CellTags->"Mesh"],
Cell[48311, 1323, 256, 4, 61, "Input"],
Cell[48570, 1329, 232, 4, 50, "Text"],
Cell[48805, 1335, 292, 4, 61, "Input"],
Cell[49100, 1341, 279, 7, 50, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[49416, 1353, 28, 0, 40, "Section"],
Cell[49447, 1355, 615, 10, 107, "Text",
  CellTags->"MeshRange"],
Cell[50065, 1367, 357, 6, 104, "Input"],
Cell[50425, 1375, 298, 5, 69, "Text"],
Cell[50726, 1382, 280, 5, 82, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[51043, 1392, 33, 0, 40, "Section"],

Cell[CellGroupData[{
Cell[51101, 1396, 44, 1, 40, "Input"],
Cell[51148, 1399, 198, 3, 51, "Print"]
}, Open  ]],
Cell[51361, 1405, 551, 15, 50, "Text",
  CellTags->"Offset"],
Cell[51915, 1422, 1187, 28, 208, "Input"],
Cell[53105, 1452, 84, 1, 31, "Text",
  CellTags->"Scaled"],

Cell[CellGroupData[{
Cell[53214, 1457, 44, 1, 40, "Input"],
Cell[53261, 1460, 359, 5, 93, "Print"]
}, Open  ]],
Cell[53635, 1468, 344, 6, 69, "Text"],
Cell[53982, 1476, 1044, 25, 166, "Input"],
Cell[55029, 1503, 580, 13, 69, "Text"],
Cell[55612, 1518, 1571, 39, 229, "Input"],
Cell[57186, 1559, 131, 3, 31, "Text"],
Cell[57320, 1564, 982, 20, 208, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[58339, 1589, 30, 0, 40, "Section"],
Cell[58372, 1591, 616, 18, 69, "Text",
  CellTags->"Plot3Matrix"]
}, Closed]],

Cell[CellGroupData[{
Cell[59025, 1614, 39, 0, 40, "Section"],
Cell[59067, 1616, 155, 4, 31, "Text",
  CellTags->"PolygonIntersections"],

Cell[CellGroupData[{
Cell[59247, 1624, 74, 1, 40, "Input"],
Cell[59324, 1627, 121, 3, 32, "Output"]
}, Open  ]],
Cell[59460, 1633, 268, 5, 50, "Text"],
Cell[59731, 1640, 345, 6, 103, "Input"],
Cell[60079, 1648, 162, 3, 31, "Text"],
Cell[60244, 1653, 64, 1, 40, "Input"],
Cell[60311, 1656, 129, 3, 31, "Text"],
Cell[60443, 1661, 70, 1, 40, "Input"],
Cell[60516, 1664, 124, 3, 31, "Text"],

Cell[CellGroupData[{
Cell[60665, 1671, 90, 1, 40, "Input"],
Cell[60758, 1674, 2066, 34, 137, "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[62873, 1714, 25, 0, 40, "Section"],
Cell[62901, 1716, 96, 1, 31, "Text",
  CellTags->"Raster"],
Cell[63000, 1719, 92, 1, 40, "Input"],
Cell[63095, 1722, 525, 8, 88, "Text"],
Cell[63623, 1732, 68, 1, 40, "Input"],
Cell[63694, 1735, 207, 4, 50, "Text"],
Cell[63904, 1741, 178, 3, 61, "Input"],
Cell[64085, 1746, 552, 11, 107, "Text"],
Cell[64640, 1759, 432, 10, 40, "Input"],
Cell[65075, 1771, 271, 5, 50, "Text"],
Cell[65349, 1778, 159, 3, 61, "Input"],
Cell[65511, 1783, 366, 6, 69, "Text"],
Cell[65880, 1791, 389, 9, 40, "Input"],
Cell[66272, 1802, 403, 6, 69, "Text"],
Cell[66678, 1810, 385, 9, 40, "Input"],
Cell[67066, 1821, 327, 5, 69, "Text"],
Cell[67396, 1828, 811, 19, 82, "Input"],
Cell[68210, 1849, 308, 10, 31, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[68555, 1864, 28, 0, 40, "Section"],
Cell[68586, 1866, 591, 11, 107, "Text",
  CellTags->"Rectangle"],
Cell[69180, 1879, 275, 6, 112, "Input"],
Cell[69458, 1887, 277, 5, 50, "Text"],
Cell[69738, 1894, 221, 4, 82, "Input"],
Cell[69962, 1900, 589, 9, 88, "Text"],
Cell[70554, 1911, 318, 6, 124, "Input"],
Cell[70875, 1919, 122, 3, 31, "Text"],
Cell[71000, 1924, 490, 9, 166, "Input"],
Cell[71493, 1935, 234, 4, 50, "Text"],
Cell[71730, 1941, 434, 7, 166, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[72201, 1953, 25, 0, 40, "Section"],
Cell[72229, 1955, 165, 6, 31, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[72431, 1966, 26, 0, 40, "Section"],
Cell[72460, 1968, 642, 18, 69, "Text",
  CellTags->"Shading"],
Cell[73105, 1988, 113, 2, 61, "Input"],
Cell[73221, 1992, 282, 5, 63, "Input",
  CellTags->"Shading"]
}, Closed]],

Cell[CellGroupData[{
Cell[73540, 2002, 114, 4, 40, "Section"],
Cell[73657, 2008, 173, 4, 31, "Text",
  CellTags->"SphericalRegion"],

Cell[CellGroupData[{
Cell[73855, 2016, 129, 2, 61, "Input"],
Cell[73987, 2020, 65, 1, 32, "Output"],
Cell[74055, 2023, 65, 1, 32, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[74157, 2029, 46, 1, 40, "Input"],
Cell[74206, 2032, 107, 2, 30, "Message"],
Cell[74316, 2036, 41, 1, 32, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[74394, 2042, 77, 1, 40, "Input"],
Cell[74474, 2045, 68441, 1399, 254, 21471, 815, "GraphicsData", "PostScript", \
"Graphics"]
}, Open  ]],

Cell[CellGroupData[{
Cell[142952, 3449, 65, 1, 40, "Input"],
Cell[143020, 3452, 65, 1, 32, "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[143134, 3459, 31, 0, 40, "Section"],
Cell[143168, 3461, 66, 0, 31, "Text"],

Cell[CellGroupData[{
Cell[143259, 3465, 50, 1, 40, "Input"],
Cell[143312, 3468, 439, 6, 114, "Print"]
}, Open  ]],
Cell[143766, 3477, 556, 16, 69, "Text"],

Cell[CellGroupData[{
Cell[144347, 3497, 39, 0, 57, "Subsection"],
Cell[144389, 3499, 572, 10, 107, "Text"],
Cell[144964, 3511, 990, 19, 251, "Input"],
Cell[145957, 3532, 331, 5, 69, "Text"],
Cell[146291, 3539, 844, 16, 313, "Input"],

Cell[CellGroupData[{
Cell[147160, 3559, 70, 0, 53, "Subsubsection"],
Cell[147233, 3561, 961, 19, 126, "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[148243, 3586, 41, 0, 57, "Subsection"],
Cell[148287, 3588, 865, 14, 145, "Text"],
Cell[149155, 3604, 827, 16, 250, "Input"],

Cell[CellGroupData[{
Cell[150007, 3624, 72, 0, 53, "Subsubsection"],
Cell[150082, 3626, 1608, 29, 202, "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[151739, 3661, 44, 0, 57, "Subsection"],
Cell[151786, 3663, 190, 4, 50, "Text"],
Cell[151979, 3669, 52, 1, 40, "Input"],
Cell[152034, 3672, 104, 3, 31, "Text"],
Cell[152141, 3677, 180, 3, 61, "Input"],
Cell[152324, 3682, 548, 10, 88, "Text"],
Cell[152875, 3694, 168, 2, 61, "Input"],
Cell[153046, 3698, 557, 10, 88, "Text"],
Cell[153606, 3710, 185, 3, 61, "Input"],
Cell[153794, 3715, 195, 4, 50, "Text"],
Cell[153992, 3721, 202, 3, 61, "Input"],
Cell[154197, 3726, 1023, 16, 145, "Text"],
Cell[155223, 3744, 216, 3, 61, "Input"],
Cell[155442, 3749, 435, 9, 69, "Text"],
Cell[155880, 3760, 230, 4, 61, "Input"],
Cell[156113, 3766, 253, 4, 50, "Text"],
Cell[156369, 3772, 239, 4, 61, "Input"],
Cell[156611, 3778, 178, 4, 50, "Text"],
Cell[156792, 3784, 239, 4, 61, "Input"],
Cell[157034, 3790, 241, 4, 61, "Input"],
Cell[157278, 3796, 109, 3, 31, "Text"],
Cell[157390, 3801, 495, 10, 124, "Input"],
Cell[157888, 3813, 237, 4, 50, "Text"],
Cell[158128, 3819, 425, 8, 103, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[158590, 3832, 54, 0, 57, "Subsection"],
Cell[158647, 3834, 393, 7, 88, "Text"],
Cell[159043, 3843, 63, 0, 39, "Input"],
Cell[159109, 3845, 289, 5, 50, "Text"],
Cell[159401, 3852, 129, 4, 77, "Input"],
Cell[159533, 3858, 138, 3, 31, "Text"],
Cell[159674, 3863, 392, 9, 103, "Input"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[160115, 3878, 23, 0, 40, "Section"],
Cell[160141, 3880, 370, 6, 69, "Text"],
Cell[160514, 3888, 644, 13, 229, "Input"],
Cell[161161, 3903, 66, 0, 31, "Text"],
Cell[161230, 3905, 763, 15, 250, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[162030, 3925, 24, 0, 40, "Section"],
Cell[162057, 3927, 106, 3, 31, "Text"],
Cell[162166, 3932, 116, 2, 83, "Input"],
Cell[162285, 3936, 114, 3, 31, "Text"],
Cell[162402, 3941, 201, 3, 104, "Input"],
Cell[162606, 3946, 293, 5, 50, "Text"],
Cell[162902, 3953, 321, 5, 209, "Input"],
Cell[163226, 3960, 164, 3, 31, "Text"],
Cell[163393, 3965, 389, 7, 209, "Input"],
Cell[163785, 3974, 141, 3, 31, "Text"],
Cell[163929, 3979, 501, 10, 209, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[164467, 3994, 54, 0, 40, "Section"],
Cell[164524, 3996, 152, 4, 31, "Text",
  CellTags->"ViewOptions"],
Cell[164679, 4002, 249, 10, 191, "Input"],
Cell[164931, 4014, 777, 15, 175, "Text"],

Cell[CellGroupData[{
Cell[165733, 4033, 32, 0, 57, "Subsection"],
Cell[165768, 4035, 166, 3, 31, "Text"],

Cell[CellGroupData[{
Cell[165959, 4042, 48, 1, 40, "Input"],
Cell[166010, 4045, 434, 10, 51, "Print",
  CellTags->"Info3246361525-7780459"]
}, Open  ]],
Cell[166459, 4058, 667, 10, 88, "Text"],
Cell[167129, 4070, 71, 1, 40, "Input"],
Cell[167203, 4073, 280, 5, 50, "Text"],
Cell[167486, 4080, 71, 1, 40, "Input"],
Cell[167560, 4083, 227, 4, 50, "Text"],
Cell[167790, 4089, 118, 2, 40, "Input"],
Cell[167911, 4093, 98, 2, 31, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[168046, 4100, 31, 0, 46, "Subsection"],
Cell[168080, 4102, 192, 4, 31, "Text",
  CellTags->"ViewCenter"],

Cell[CellGroupData[{
Cell[168297, 4110, 47, 1, 40, "Input"],
Cell[168347, 4113, 397, 10, 51, "Print",
  CellTags->"Info3246359408-1828621"]
}, Open  ]],
Cell[168759, 4126, 378, 6, 50, "Text"],

Cell[CellGroupData[{
Cell[169162, 4136, 63, 1, 40, "Input"],
Cell[169228, 4139, 76, 1, 32, "Output"]
}, Open  ]],
Cell[169319, 4143, 198, 4, 31, "Text"],
Cell[169520, 4149, 79, 1, 40, "Input"],
Cell[169602, 4152, 157, 3, 31, "Text"],
Cell[169762, 4157, 77, 1, 40, "Input"],
Cell[169842, 4160, 242, 4, 50, "Text"],
Cell[170087, 4166, 84, 1, 40, "Input"],
Cell[170174, 4169, 167, 3, 31, "Text"],
Cell[170344, 4174, 76, 1, 40, "Input"],
Cell[170423, 4177, 130, 3, 31, "Text"],
Cell[170556, 4182, 81, 1, 40, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[170674, 4188, 34, 0, 46, "Subsection"],
Cell[170711, 4190, 228, 5, 31, "Text",
  CellTags->"ViewCenter"],

Cell[CellGroupData[{
Cell[170964, 4199, 50, 1, 40, "Input"],
Cell[171017, 4202, 415, 10, 51, "Print",
  CellTags->"Info3246359414-5804391"]
}, Open  ]],
Cell[171447, 4215, 136, 3, 31, "Text"],
Cell[171586, 4220, 114, 2, 40, "Input"],
Cell[171703, 4224, 350, 6, 50, "Text"],
Cell[172056, 4232, 411, 8, 103, "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[172516, 4246, 88, 1, 44, "Section"],
Cell[172607, 4249, 243, 4, 50, "Text"],
Cell[172853, 4255, 320, 5, 103, "Input"],
Cell[173176, 4262, 93, 2, 31, "Text"],
Cell[173272, 4266, 79, 1, 40, "Input"],
Cell[173354, 4269, 95, 2, 31, "Text"],
Cell[173452, 4273, 245, 5, 103, "Input"],
Cell[173700, 4280, 191, 4, 31, "Text"],
Cell[173894, 4286, 409, 6, 124, "Input"],
Cell[174306, 4294, 188, 4, 31, "Text"],
Cell[174497, 4300, 77, 1, 40, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[174611, 4306, 53, 0, 40, "Section"],
Cell[174667, 4308, 2442, 38, 485, "Text"],
Cell[177112, 4348, 2313, 45, 481, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[179462, 4398, 118, 3, 40, "Section"],
Cell[179583, 4403, 1329, 29, 349, "Text",
  CellTags->"Converting_Graphics"],
Cell[180915, 4434, 195, 4, 61, "Input"],
Cell[181113, 4440, 584, 9, 88, "Text"],
Cell[181700, 4451, 207, 4, 82, "Input"],
Cell[181910, 4457, 581, 10, 69, "Text"],
Cell[182494, 4469, 184, 3, 82, "Input"],
Cell[182681, 4474, 559, 10, 69, "Text"],
Cell[183243, 4486, 161, 3, 82, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[183441, 4494, 91, 2, 40, "Section"],
Cell[183535, 4498, 318, 5, 50, "Text"],
Cell[183856, 4505, 78, 1, 40, "Input"],
Cell[183937, 4508, 157, 3, 31, "Text"],
Cell[184097, 4513, 868, 18, 229, "Input"],
Cell[184968, 4533, 106, 3, 31, "Text"],
Cell[185077, 4538, 177, 3, 40, "Input"],
Cell[185257, 4543, 121, 3, 31, "Text"],
Cell[185381, 4548, 804, 17, 229, "Input"],
Cell[186188, 4567, 109, 3, 31, "Text"],
Cell[186300, 4572, 297, 6, 82, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[186634, 4583, 38, 0, 40, "Section"],
Cell[186675, 4585, 300, 5, 50, "Text"],
Cell[186978, 4592, 374, 7, 103, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[187389, 4604, 51, 0, 40, "Section"],
Cell[187443, 4606, 192, 4, 31, "Text"],
Cell[187638, 4612, 67, 1, 40, "Input"],
Cell[187708, 4615, 122, 3, 31, "Text"],
Cell[187833, 4620, 169, 2, 61, "Input"],
Cell[188005, 4624, 166, 3, 31, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[188208, 4632, 47, 0, 40, "Section"],
Cell[188258, 4634, 87, 2, 33, "Text"],
Cell[188348, 4638, 73, 1, 39, "Input"],
Cell[188424, 4641, 55, 0, 33, "Text"],
Cell[188482, 4643, 67, 1, 39, "Input"],
Cell[188552, 4646, 136, 3, 33, "Text"],
Cell[188691, 4651, 66, 1, 39, "Input"],
Cell[188760, 4654, 197, 4, 33, "Text"],
Cell[188960, 4660, 74, 1, 39, "Input"]
}, Closed]]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

