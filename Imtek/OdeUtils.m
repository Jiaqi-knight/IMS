(*******************************************************************
This file was generated automatically by the Mathematica front end.
It contains Initialization cells from a Notebook file, which
typically will have the same name as this file except ending in
".nb" instead of ".m".

This file is intended to be loaded into the Mathematica kernel using
the package loading commands Get or Needs.  Doing so is equivalent
to using the Evaluate Initialization Cells menu command in the front
end.

DO NOT EDIT THIS FILE.  This entire file is regenerated
automatically each time the parent Notebook file is saved in the
Mathematica front end.  Any changes you make to this file will be
overwritten.
***********************************************************************)





(* *)
(* Title: OdeUtils.m *)
(* Context: *)
(* 
  Author: christian moosmann and oliver ruebenkoenig*)
(* Date: 28.02.2005,
  Freiburg i Br *)
(* 
  Summary: This package transforms a system of ODEs in Matrixform into a list \
of equations *)
(* Package Copyright: GNU GPL *)
(* Package Version: 0.1 *)
(* 
  Mathematica Version: 5.0 *)
(* History: *)
(* Keywords: *)
(* Sources: *)
(* 
  Warnings: *)
(* Limitations: *)
(* Discussion: *)
(* Requirements: *)
(* 
  Examples: *)
(* *)



(* Disclaimer: *)

(* <one line to give the program's name and a brief idea of what it does.> *)
\

(* Copyright (C) 2004 christian moosmann *)

(* This program is free software; *)

(* you can redistribute it and/
      or modify it under the terms of the GNU General Public License *)

(* as published by the Free Software Foundation;
  either version 2 of the License, *)

(* or (at your option) any later version.This program is distributed in the \
hope that *)

(* it will be useful,but WITHOUT ANY WARRANTY; *)

(* without even the implied warranty of MERCHANTABILITY or FITNESS FOR A \
PARTICULAR PURPOSE. *)

(* See the GNU General Public License for more details. 
      You should have received a copy of *)

(* the GNU General Public License along with this program;if not, 
  write to the *)

(* Free Software Foundation,Inc.,59 Temple Place,Suite 330,Boston,
  MA 02111-1307 USA *)



(* Start Package *)
BeginPackage["Imtek`OdeUtils`"];





(* *)
(* documentation *)
(* *)
Needs["Imtek`Maintenance`"]
imsCreateObsoleteFunctionInterface[ MatrixToODESystem, $Context ];


(* constructors *)

(* selectors *)

(* predicates *)

(* functions *)
imsMatrixToODESystem::usage = 
  "imsMatrixToODESystem[{x,t},{A,b},n] converts the ODESystem x\.b4[t]= A x[t] + b, into a List containing the ODEs x1'=a1x1 + a2x2 +....+ a3x3 + b1 and so on. x[t] is spezified as the symbol that is intended to use, A is spezified as a Matrix and b is spezified as a vector of the same length as the matrix A, n is the order of the derivative" 



(* *)
(* options documentation *)
(* *)







Begin["`Private`"];



(* *)
(* implementation part *)
(* *)

(* constructor *)







(* *)
(* define your options *)
(* *)
(* 
  Options[ myFunctio ] = { myOptionName \[Rule] myValue } *)




(* selector *)



(* predicates *)



\!\(\(\( (*\ functions\ *) \)\(\[IndentingNewLine]\)\(\(imsMatrixToODESystem[{var_Symbol, t_Symbol}, {matA_?MatrixQ, vecb_?VectorQ}, n_:  1] := \[IndentingNewLine]Module[{xdtVec, xVec}, \[IndentingNewLine]xdtVec\  = \(\(\(Derivative[n]\)[var\_#]\)[t] &\)\  /@ \ Range[Length[vecb]]; \[IndentingNewLine]xVec = \(var\_#[t] &\)\  /@ \ Range[Length[vecb]]; \[IndentingNewLine]eqnsred\  = Thread[\ Simplify[Equal[\ xdtVec, \ \((matA . xVec /. Times[0.`, x_] \[Rule] 0)\) + vecb\ ]\ ]]; \[IndentingNewLine]eqnsred];\)\(\[IndentingNewLine]\)
  \)\)\)



(* representors *)



End[] (* of Begin Private *)



(* Protect[] (* anything *) *)
EndPackage[] 
