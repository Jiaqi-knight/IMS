(*******************************************************************
This file was generated automatically by the Mathematica front end.
It contains Initialization cells from a Notebook file, which
typically will have the same name as this file except ending in
".nb" instead of ".m".

This file is intended to be loaded into the Mathematica kernel using
the package loading commands Get or Needs.  Doing so is equivalent
to using the Evaluate Initialization Cells menu command in the front
end.

DO NOT EDIT THIS FILE.  This entire file is regenerated
automatically each time the parent Notebook file is saved in the
Mathematica front end.  Any changes you make to this file will be
overwritten.
***********************************************************************)















BeginPackage["Imtek`Kinematics`"];

ComputationalKinematics::"usage"="The ComputationalKinematics package enables the analysis of mechanism kinematics. It provides methods to create mechanism links (see \!\(\* StyleBox[\"makeLink\",\nFontSlant->\"Italic\"]\), \!\(\* StyleBox[\"makeAnchorLink\",\nFontSlant->\"Italic\"]\) and \!\(\* StyleBox[\"makeSliderLink\",\nFontSlant->\"Italic\"]\)), to join the links with a variety of constraining joints (see \!\(\* StyleBox[\"makeGroundJoint\",\nFontSlant->\"Italic\"]\), \!\(\* StyleBox[\"makeRevoluteJoint\",\nFontSlant->\"Italic\"]\) and \!\(\* StyleBox[\"ckPrismaticJoint\",\nFontSlant->\"Italic\"]\)), to generate equations of motion from the constraints in a form that is ready for NDSolve (see \!\(\* StyleBox[\"linkageEquationOfMotion\",\nFontSlant->\"Italic\"]\), and to draw movies of the linkage from the computed solution trajectories (see \!\(\* StyleBox[\"drawMovedLinks\",\nFontSlant->\"Italic\"]\)). Individual objects can be drawn in their reference configuration using \!\(\* StyleBox[\"drawLink\",\nFontSlant->\"Italic\"]\) and \!\(\* StyleBox[\"drawJoint\",\nFontSlant->\"Italic\"]\).";

\!\(\(ckLink::"\<usage\>" = "\<ckLink[{{{\!\(x\_1\),\!\(y\_1\)},{\!\(x\_1\),\!\(y\_1\)},\[Ellipsis]},\!\(\[Theta]\_0\)},{\!\(x\&_\),\!\(y\&_\)},\!\(\* StyleBox[\"graphic\",\nFontSlant->\"Italic\"]\)] represents a rigid link. The local coordinate system of the link is centered at the center-of-gavity coordinates {\!\(x\&_\),\!\(y\&_\)} and initially inclined at an angle of \!\(\[Theta]\_0\) to the global coordinate axes. The link has two or more joints {{\!\(x\_1\),\!\(y\_1\)},{\!\(x\_1\),\!\(y\_1\)},\[Ellipsis]} whose coordinates are specified relative to the local coordinate axes. The link has a graphical image, also specified relative to the local coordinate axes, and is used to create animations of the linkage movement. Also see makeLink.\>";\)\n
  \(ckAnchorLink::"\<usage\>" = "\<ckAnchorLink[{{{\!\(x\_1\),\!\(y\_1\)}},\!\(\[Theta]\_0\)},{\!\(x\&_\),\!\(y\&_\)},\!\(\* StyleBox[\"graphic\",\nFontSlant->\"Italic\"]\)] represents an anchoring point. The local coordinate system of the link is centered at the center-of-gavity coordinates {\!\(x\&_\),\!\(y\&_\)} and initially inclined at an angle of \!\(\[Theta]\_0\) to the global coordinate axes. The link only one joint {{\!\(x\_1\),\!\(y\_1\)}}, its coordinates are specified relative to the local coordinate axes. The anchor has a graphical image, also specified relative to the local coordinate axes, and is used to create animations of the linkage movement. Also see makeAnchorLink.\>";\)\n
  \(ckSliderLink::"\<usage\>" = "\<ckSliderLink[{{{\!\(x\_1\),\!\(y\_1\)}},\!\(\[Theta]\_1\)},{\!\(x\&_\),\!\(y\&_\)},\!\(\* StyleBox[\"graphic\",\nFontSlant->\"Italic\"]\)] represents a slider that is constrained to move along a line passing through {\!\(x\_1\),\!\(y\_1\)} relative to {\!\(x\&_\),\!\(y\&_\)} and at an inclination of \!\(\[Theta]\_1\) relative to the global coordinate axes. The slider has a graphical image, also specified relative to the local coordinate axes, and is used to create animations of the linkage movement. Also see makeSliderLink.\>";\)\n
  \(ckGearLink::"\<usage\>" = "\<ckGearLink[{{{\!\(x\_1\),\!\(y\_1\)},{r,\!\(N\_t\)}},\[Theta]},{x,y},\!\(\* StyleBox[\"graphic\",\nFontSlant->\"Italic\"]\)] represents an involute gear with its axes of rotation centered at {\!\(x\_1\),\!\(y\_1\)} relative to the gear's co-rotating coordinate system, with a meshing radius r, \!\(N\_t\) number of gear teeth, the whole gear being initially rotated to angle \[Theta] relative to the global coordinate system. The gear has a graphical image, also specified relative to the local coordinate axes, and is used to create animations of the linkage movement. Also see makeGearLink and makeGearJoint.\>";\)\[IndentingNewLine]
  \(ckRevoluteJoint::"\<usage\>" = "\<ckRevoluteJoint[{{\!\(l\_i\),\!\(j\_ij\)},{\!\(l\_k\),\!\(j\_km\)}},{0,0},\!\(\* StyleBox[\"graphic\",\nFontSlant->\"Italic\"]\)] constrains the joints (\!\(j\_ij\) and \!\(j\_km\)) of two links (\!\(l\_i\) and \!\(l\_k\)) to coincide. The joint has a graphical image, centered at {0,0}, and is used to create animations of the linkage movement. Also see makeRevoluteJoint.\>";\)\n
  \(ckGroundJoint::"\<usage\>" = \*"\"\<ckGroundJoint[{\!\(l\_i\),\!\(j\_ij\)},{0,0},\!\(\* StyleBox[\\\"graphic\\\",\\nFontSlant->\\\"Italic\\\"]\)] completely fixes the coordinates of joint \!\(j\_ij\) of link \!\(l\_i\). The joint has a graphical image, centered at {0,0}, and is used to create animations of the linkage movement. Also see makeGroundJoint.\>\"";\)\n
  \(ckPrismaticJoint::"\<usage\>" = \*"\"\<ckPrismaticJoint[{{\\!\\(l\\_i\\),\\!\\(j\\_ij\\)},{\\!\\(l\\_k\\),\\!\\(j\\_km\\)}},{0,0},\\!\\(\\* StyleBox[\\\"graphic\\\",\\nFontSlant->\\\"Italic\\\"]\\)] constrains joint \!\(j\_ij\) of link \!\(l\_i\) to slide along a line on link \!\(l\_k\) at a fixed relative angle determined by the initial configuration of \!\(l\_i\) and \!\(l\_k\). The line of movement passes through  link \!\(l\_k\)'s center of gravity \!\(CG\_\(l\_k\)\) and joint \!\(j\_km\). The joint has a graphical image, centered at {0,0}, and is used to create animations of the linkage movement. Also see makePrismaticJoint.\>\"";\)\[IndentingNewLine]
  \(imsckGearJoint::usage = "\<imsckGearJoint[{{\!\(l\_i\),\!\(j\_ij\)},{\!\(l\_k\),\!\(j\_km\)}},{0,0},\!\(\* StyleBox[\"graphic\",\nFontSlant->\"Italic\"]\)] constrains the joint angles (\!\(j\_ij\) and \!\(j\_km\)) of two gear links (\!\(l\_i\) and \!\(l\_k\)) to the ratio of their number of gear teeth. Also see makeGearJoint.\>";\)\)

makeCustomLink::"usage"="makeCustomLink[\!\(\* StyleBox[\"head\",\nFontSlant->\"Italic\"]\),\!\(\* StyleBox[\"joints\",\nFontSlant->\"Italic\"]\),\!\(\* StyleBox[\"picture\",\nFontSlant->\"Italic\"]\)] creates a custom-designed link. The link will be of the type specified by \!\(\* StyleBox[\"head\",\nFontSlant->\"Italic\"]\), and whould be one of the pre-defined link heads available (currently ckLink, ckSliderLink, ckAnchorLink), with joints as specified by the list \!\(\* StyleBox[\"joints\",\nFontSlant->\"Italic\"]\), and a drawing specified by the Graphics object \!\(\* StyleBox[\"picture\",\nFontSlant->\"Italic\"]\)";
makeLink::"usage"="makeLink[{{\!\(x\_1\),\!\(y\_1\)},{\!\(x\_2\),\!\(y\_2\)},...,{\!\(x\_n\),\!\(y\_n\)}}] creates a link object with two or more joints at the specified default positions. The generalized coordinates of the link are located at the center of gravity {\!\(x\_0\),\!\(y\_0\)} of the joint positions. The link object has the following structure: ckLink[{{{\!\(x\_1\)-\!\(x\_0\),\!\(y\_1\)-\!\(y\_0\)},{\!\(x\_2\)-\!\(x\_0\),\!\(y\_2\)-\!\(y\_0\)},...,{\!\(x\_n\)-\!\(x\_0\),\!\(y\_n\)-\!\(y\_0\)}},\!\(\[Theta]\_0\)},{\!\(x\_0\),\!\(y\_0\)},\!\(\* StyleBox[\"graphic\",\nFontSlant->\"Italic\"]\)], where \!\(\* StyleBox[\"graphic\",\nFontSlant->\"Italic\"]\) indicates a Graphics[] object that defines a picture of the link in its reference state.";\

makeAnchorLink::"usage"="makeAnchorLink[{\!\(x\_1\),\!\(y\_1\)}] creates an anchor object with its joint at the specified fixed position. The generalized coordinates of the link are also located at this position. The anchor object has the following structure: ckAnchorLink[{{{0,0}},0},{\!\(x\_1\),\!\(y\_1\)},\!\(\* StyleBox[\"graphic\",\nFontSlant->\"Italic\"]\)], where \!\(\* StyleBox[\"graphic\",\nFontSlant->\"Italic\"]\) indicates a Graphics[] object that defines a picture of the anchor.";\

makeSliderLink::"usage"="makeSliderLink[{\!\(x\_1\),\!\(y\_1\)},\!\(\[Theta]\_1\)] creates a slider object with its joint at the specified default position and a sliding surface at the specified angle to the horizontal. The generalized coordinates of the link are also located at this position. The slider object has the following structure: ckSliderLink[{{{0,0}},\!\(\[Theta]\_1\)},{\!\(x\_1\),\!\(y\_1\)},\!\(\* StyleBox[\"graphic\",\nFontSlant->\"Italic\"]\)], where \!\(\* StyleBox[\"graphic\",\nFontSlant->\"Italic\"]\) indicates a Graphics[] object that defines a picture of the slider.";\

makeGearLink::"usage"="makeGearLink[\!\(\* StyleBox[\"origin\",\nFontSlant->\"Italic\"]\),\!\(\* StyleBox[\"radius\",\nFontSlant->\"Italic\"]\),\!\(\* StyleBox[\"toothDepth\",\nFontSlant->\"Italic\"]\)] creates an involute gear centered at the origin with the specified meshing radius the depth of the gear teeth. Together, these parameters determine the number of teeth. makeGearLink[\!\(\* StyleBox[\"origin\",\nFontSlant->\"Italic\"]\),\!\(\* StyleBox[\"radius\",\nFontSlant->\"Italic\"]\),\!\(\* StyleBox[\"toothDepth\",\nFontSlant->\"Italic\"]\),\!\(\* StyleBox[\"angle\",\nFontSlant->\"Italic\"]\)] causes the gear to be rotated by the specified angle. See \!\(\* StyleBox[\"makeGearJoint\",\nFontSlant->\"Italic\"]\).";\

makeGroundJoint::"usage"="makeGroundJoint[{\!\(l\_i\),\!\(j\_ij\)},\!\(\* StyleBox[\"links\",\nFontSlant->\"Italic\"]\)] completely fixes the joint \!\(j\_ij\) of the link \!\(l\_i\), where \!\(l\_i\)<Length[links] is an integer that refers to an entry in the list of links, and \!\(j\_ij\) is an integer that refers to the j'th joint of link \!\(l\_i\).";

makeRevoluteJoint::"usage"="makeRevoluteJoint[{{\!\(l\_i\),\!\(j\_ij\)},{\!\(l\_k\),\!\(j\_km\)}},\!\(\* StyleBox[\"links\",\nFontSlant->\"Italic\"]\)] constraints the joint of \!\(j\_ij\) link \!\(l\_i\) to be coincident with the joint \!\(j\_km\) of \!\(l\_k\), without restricting the rotational degree of freedom of the joint. Note that \!\(l\_i\)<Length[links] and \!\(l\_k\)<Length[links] are integers that refer to entries in the list of links, and \!\(j\_ij\) and \!\(j\_km\) are integers that refer to the j'th joint of link \!\(l\_i\) and the m'th joint of link \!\(l\_k\).";

\!\(\(makePrismaticJoint::"\<usage\>" = \*"\"\<makePrismaticJoint[{{\!\(l\_i\),\!\(j\_im\),\!\(j\_ip\)},{\!\(l\_k\),\!\(j\_kn\),\!\(j\_kq\))}},\\!\\(\\* StyleBox[\\\"links\\\",\\nFontSlant->\\\"Italic\\\"]\\)] constraints the joint m of link i to remain parallel to the line joining joints m and p and to move parallel to the line joining the joint n of link k with joint q, thereby restricting the rotational degree of freedom of the joint as well. Note that \!\(l\_i\)<Length[links] and \!\(l\_k\)<Length[links] are integers that refer to entries in the list of links, and \!\(j\_im\),\!\(j\_ip\),\!\(j\_kn\) and \!\(j\_kq\) are integers that refer to the m'th and p'th joint of link i and the n'th and q'th joint of link k.\>\"";\)\)

makeGearJoint::"usage"="makeGearJoint[{{\!\(l\_i\),\!\(j\_ij\)},{\!\(l\_k\),\!\(j\_km\)}},\!\(\* StyleBox[\"links\",\nFontSlant->\"Italic\"]\)] constrains the angle of the center joint \!\(j\_ij\) of gear link \!\(l\_i\) to be coincident with the angle of the center joint \!\(j\_km\) of the gear link \!\(l\_k\) via the respective gear's gear tooth ratios, i.e., the links referred to must be of type ckGearLink. Note that \!\(l\_i\)<Length[links] and \!\(l\_k\)<Length[links] are integers that refer to entries in the list of links, and \!\(j\_ij\) and \!\(j\_km\) are integers that refer to the j'th joint of link \!\(l\_i\) and the m'th joint of link \!\(l\_k\).";

drawLink::"usage"="drawLink[\!\(\* StyleBox[\"link\",\nFontSlant->\"Italic\"]\)] returns a Graphics[] object that represents the \!\(\* StyleBox[\"link\",\nFontSlant->\"Italic\"]\) in its reference configuration.\n drawLink[\!\(\* StyleBox[\"link\",\nFontSlant->\"Italic\"]\),{x,y,\[Theta]}] returns a Graphics[] object that represents the \!\(\* StyleBox[\"link\",\nFontSlant->\"Italic\"]\) transformed from its reference configuration to the absolute position {x,y} and rotated by the angle \[Theta].";\

drawJoint::"usage"="drawJoint[\!\(\* StyleBox[\"joint\",\nFontSlant->\"Italic\"]\)] returns a Graphics[] object that represents the \!\(\* StyleBox[\"joint\",\nFontSlant->\"Italic\"]\) in its reference configuration.\n drawJoint[\!\(\* StyleBox[\"joint\",\nFontSlant->\"Italic\"]\),{x,y,\[Theta]}] returns a Graphics[] object that represents the \!\(\* StyleBox[\"joint\",\nFontSlant->\"Italic\"]\) transformed from its reference configuration to the absolute position {x,y} and rotated by the angle \[Theta].";\

transformGraphicsObject::"usage"="transformGraphicsObject[\!\(\* StyleBox[\"object\",\nFontSlant->\"Italic\"]\),{x,y,\[Theta]}] produces a new object moved to position {x,y} and rotated by the angle \[Theta]. Works for most Graphics primitives.";\

linkageEquationOfMotion::"usage"=
    "linkageEquationOfMotion[\!\(\* StyleBox[\"links\",\nFontSlant->\"Italic\"]\),\!\(\* StyleBox[\"joints\",\nFontSlant->\"Italic\"]\),\!\(C\_d\)] creates a first-order set of ODEs based on the list of links and their joints (which define the intrinsic mechanism constraint equations) together with the list of driving constraints \!\(C\_d\). Each link has 3 degrees-of-freedom {\!\(Rx\_i\),\!\(Ry\_i\).\!\(\[Theta]\_i\)}, making 3*Length[\!\(\* StyleBox[\"links\",\nFontSlant->\"Italic\"]\)] DOFs in all, and care must be taken that there are as many constraint equations as there are DOFs. The joints generate some of the constraints, and the \!\(C\_d\) should provide the rest. The function returns the first two arguments of the NDSolve function, i.e., the list of ODEs and the list of variables.\n\n A typical usage is:\n NDSolve@@Join[linkageEquationOfMotion[links,joints,\!\(C\_d\)],{{t,0,1}}].";\

drawMovedLinks::"usage"="drawMovedLinks[\!\(\* StyleBox[\"links\",\nFontSlant->\"Italic\"]\),\!\(\* StyleBox[\"solutionRules\",\nFontSlant->\"Italic\"]\)] generates a picture of the complete linkage defined by the list of \!\(\* StyleBox[\"links\",\nFontSlant->\"Italic\"]\) based on a solution vector of rules \!\(\* StyleBox[\"solutionRules\",\nFontSlant->\"Italic\"]\) (the typical output of NDSolve).\n\n It can be used to generate a movie as follows:\n Table[Show[drawMovedLinks[\!\(\* StyleBox[\"links\",\nFontSlant->\"Italic\"]\),\!\(\* StyleBox[\"solutionRules\",\nFontSlant->\"Italic\"]\)]],{t,0,1-.025,.025}].";

makeLinkVariables::"usage"="makeLinkVariables[\!\(\* StyleBox[\"link\",\nFontSlant->\"Italic\"]\),{i}] creates the global DOF variables {\!\(Rx\_i\)[t],\!\(Ry\_i\)[t],\!\(\[Theta]\_i\)[t]}. It is intended to be index mapped to a list of links to generate the global list of DOFs.";\

makeLinkJointEquation::"usage"="makeLinkJointEquation[\!\(\* StyleBox[\"l\",\nFontSlant->\"Italic\"]\),\!\(\* StyleBox[\(j\_l\),\nFontSlant->\"Italic\"]\),\!\(\* StyleBox[\"links\",\nFontSlant->\"Italic\"]\)] creates the constraint equation for a link l's joint \!\(\* StyleBox[\(j\_l\),\nFontSlant->\"Italic\"]\), given the list of \!\(\* StyleBox[\"links\",\nFontSlant->\"Italic\"]\).";

Begin["`Private`"];
<<DiscreteMath`ComputationalGeometry`
<<Geometry`Rotations`
Needs["Imtek`VectorAngles`"]
Off[ParametricPlot::"ppcom"];





\!\(\(makeCustomLink[theHead_, theJoints_List, theGraphic_Graphics] := makeCustomLink[theHead, theJoints, N[Plus @@ theJoints\/Length[theJoints]], theGraphic];\)\[IndentingNewLine]
  \(makeCustomLink[theHead_, theJoints_List, cg_List, theGraphic_Graphics] := Module[{nj = Length[theJoints]}, \[IndentingNewLine]If[\(! MemberQ[{ckLink, ckAnchorLink, ckSliderLink, ckGearLink}, theHead]\), \[IndentingNewLine]Print["\<Error: unknown link type\>"]; \[IndentingNewLine]Return[Null]\[IndentingNewLine]]; \[IndentingNewLine]Switch[theHead, \[IndentingNewLine]ckLink, \[IndentingNewLine]If[nj < 2, \[IndentingNewLine]Print["\<Error: too few joints for a ckLink[].\>"]; \[IndentingNewLine]Return[Null]\[IndentingNewLine]]; \[IndentingNewLine]Return[ckLink[{\(\((# - cg)\) &\) /@ theJoints, 0}, cg, theGraphic]], \[IndentingNewLine]\[IndentingNewLine]ckAnchorLink, \[IndentingNewLine]If[nj \[NotEqual] 1, \[IndentingNewLine]Print["\<Error: too many joints for a ckAnchorLink[].\>"]; \[IndentingNewLine]Return[Null]\[IndentingNewLine]]; \[IndentingNewLine]cg = theJoints\[LeftDoubleBracket]1\[RightDoubleBracket]; \[IndentingNewLine]Return[ckAnchorLink[{\(\((# - cg)\) &\) /@ theJoints, 0}, cg, theGraphic]], \[IndentingNewLine]\[IndentingNewLine]ckSliderLink, \[IndentingNewLine]If[nj \[NotEqual] 1, \[IndentingNewLine]Print["\<Error: too many joints for a ckSliderLink[].\>"]; \[IndentingNewLine]Return[Null]\[IndentingNewLine]]; \[IndentingNewLine]cg = theJoints\[LeftDoubleBracket]1\[RightDoubleBracket]; \[IndentingNewLine]Return[ckSliderLink[{\(\((# - cg)\) &\) /@ theJoints, 0}, cg, theGraphic]], \[IndentingNewLine]\[IndentingNewLine]ckGearLink, \[IndentingNewLine]If[nj \[NotEqual] 1, \[IndentingNewLine]Print["\<Error: too many joints for a ckGearLink[].\>"]; \[IndentingNewLine]Return[Null]\[IndentingNewLine]]; \[IndentingNewLine]cg = theJoints\[LeftDoubleBracket]1\[RightDoubleBracket]; \[IndentingNewLine]Return[ckGearLink[{\(\((# - cg)\) &\) /@ theJoints, 0}, cg, theGraphic]]\[IndentingNewLine]]\[IndentingNewLine]] /; Depth[theJoints] \[Equal] 3;\)\)

\!\(\(\(makeLink[joints_List] := Module[{hullPoints, hullLines, edgeShifts, edgeAngles, cornerAngles, lineGraphics, curveGraphics, cg, cgGraphics, \[Theta]}, If[Length[joints] \[NotEqual] Length[Union[joints]], Print["\<Error: coincident joints\>"]; Return[Null]]; hullPoints = joints\[LeftDoubleBracket]ConvexHull[joints]\[RightDoubleBracket]; cg = N[Plus @@ hullPoints\/Length[hullPoints]]; \[IndentingNewLine]hullPoints = \(\((# - cg)\) &\) /@ hullPoints; \[IndentingNewLine]hullLines = Transpose[{hullPoints, RotateLeft[hullPoints]}]; edgeShifts = \((0.1\ unitRightVector[#1\[LeftDoubleBracket]2\[RightDoubleBracket] - #1\[LeftDoubleBracket]1\[RightDoubleBracket]] &)\) /@ hullLines; edgeAngles = \((vectorAngle[#1\[LeftDoubleBracket]2\[RightDoubleBracket] - #1\[LeftDoubleBracket]1\[RightDoubleBracket]] &)\) /@ hullLines; \[IndentingNewLine]cornerAngles = RotateRight[\(filterAngles[\(-\((# + \[Pi]/2)\)\)] &\) /@ Transpose[{edgeAngles, RotateLeft[edgeAngles]}]]; \[IndentingNewLine]\[IndentingNewLine]curveGraphics = {\((Circle @@ #1 &)\) /@ Transpose[{hullPoints, Table[0.1, {Length[hullPoints]}], cornerAngles}]}; lineGraphics = \((Line[#1] &)\) /@ \((hullLines + Transpose[{edgeShifts, edgeShifts}])\); cgGraphics = {Line[{{\(- .05\), 0. }, { .05, 0. }}], Line[{{0. , \(- .05\)}, {0. ,  .05}}]}; \[Theta] = vectorAngle[joints\[LeftDoubleBracket]\(-1\)\[RightDoubleBracket] - cg]; ckLink[Join[{\((#1 - cg &)\) /@ joints}, {0}], cg, Graphics[{curveGraphics, lineGraphics, \((\((Circle[#1,  .05] &)\) /@ \((\(\((# - cg)\) &\) /@ joints)\))\), cgGraphics}]]];\)\(\n\)
  \)\[IndentingNewLine]
  \(\(makeAnchorLink[{x_, y_}] := Module[{}, ckAnchorLink[{{{0, 0}}, 0}, {x, y}, Graphics[{Circle[{0, 0},  .05], Circle[{0, 0}, 0.1, {0, \[Pi]}], Line[{{\(-0.1\), 0}, {\(-0.1\), \(- .15\)}, {0.1, \(- .15\)}, {0.1, 0}}], imsPolygon[{{\(-0.1\), \(- .15\)}, {\(-0.1\), \(- .2\)}, {0.1, \(- .2\)}, {0.1, \(- .15\)}}]}]]];\)\(\n\)
  \)\[IndentingNewLine]
  \(\(makeSliderLink[{x_, y_}, \[Theta]_] := Module[{Q}, Q = RotationMatrix2D[N[\[Theta]]]; ckSliderLink[{{{0, 0}}, \[Theta]}, {x, y}, Graphics[{Circle[{0, 0},  .05], Line[\(\((Q . #)\) &\) /@ {{0 - 0.1, 0 - 0.1}, {0 + 0.1, 0 - 0.1}, {0 + 0.1, 0 + 0.1}, {0 - 0.1, 0 + 0.1}, {0 - 0.1, 0 - 0.1}}], imsPolygon[\(\((Q . #)\) &\) /@ {{0 -  .3, 0 -  .11}, {0 -  .3, 0 -  .2}, {0 +  .3, 0 -  .2}, {0 +  .3, 0 -  .11}, {0 -  .3, 0 -  .11}}]}]]];\)\(\[IndentingNewLine]\)
  \)\[IndentingNewLine]
  \(makeGearLink[{x_, y_}, radius_, toothDepth_] := makeGearLink[{x, y}, radius, toothDepth, 0];\)\[IndentingNewLine]
  \(makeGearLink[{x_, y_}, radius_, toothDepth_, \[Theta]_] := Module[{nTeeth, r0, r1}, \[IndentingNewLine]r0 = radius - toothDepth/2; \[IndentingNewLine]r1 = radius + toothDepth/2; \[IndentingNewLine]nTeeth = maxTeeth[r0, r1]; ckGearLink[{{{0, 0}, {radius, nTeeth}}, 0}, {x, y}, \[IndentingNewLine]drawGear[r0, r1, nTeeth, \[Theta]]]\[IndentingNewLine]];\)\)



\!\(\(\(makeGroundJoint[{linkNumber_Integer, linkJointNumber_Integer}, links_List] := Module[{pos, l}, \[IndentingNewLine]l = links\[LeftDoubleBracket]linkNumber\[RightDoubleBracket]; \[IndentingNewLine]If[Length[l\[LeftDoubleBracket]1, 1\[RightDoubleBracket]] < linkJointNumber - 1, \[IndentingNewLine]Print["\<Error: link \>", l, "\< has too few joints.\>"]; \[IndentingNewLine]Return[Null]\[IndentingNewLine]]; \[IndentingNewLine]pos = l\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket] + RotationMatrix2D[\(-l\[LeftDoubleBracket]1, \(-1\)\[RightDoubleBracket]\)] . l\[LeftDoubleBracket]1, 1, linkJointNumber\[RightDoubleBracket]; \[IndentingNewLine]ckGroundJoint[{linkNumber, linkJointNumber}, pos, Graphics[{GrayLevel[ .5], Disk[pos,  .05], GrayLevel[0], Circle[pos,  .05], GrayLevel[ .5], imsPolygon[{pos, pos + { .2, 0}, pos + { .2, 0}, pos + { .2, \(- .1\)}, pos + {\(- .2\), \(- .1\)}, pos + {\(- .2\), 0}, pos}], GrayLevel[0], Line[{pos + { .05, 0}, pos + { .2, 0}, pos + { .2, 0}, pos + { .2, \(- .1\)}, pos + {\(- .2\), \(- .1\)}, pos + {\(- .2\), 0}, pos + {\(- .05\), 0}}]}]]\[IndentingNewLine]];\)\(\n\)
  \)\[IndentingNewLine]
  \(\(makeRevoluteJoint[{{linkNumber1_Integer, linkJointNumber1_Integer}, {linkNumber2_Integer, linkJointNumber2_Integer}}, links_List] := Module[{pos, l1, l2}, \[IndentingNewLine]l1 = links\[LeftDoubleBracket]linkNumber1\[RightDoubleBracket]; \[IndentingNewLine]l2 = links\[LeftDoubleBracket]linkNumber2\[RightDoubleBracket]; \[IndentingNewLine]If[Length[l1\[LeftDoubleBracket]1, 1\[RightDoubleBracket]] < linkJointNumber1 - 1, \[IndentingNewLine]Print["\<Error: link \>", l1, "\< has too few joints.\>"]; \[IndentingNewLine]Return[Null]\[IndentingNewLine]]; \[IndentingNewLine]If[Length[l2\[LeftDoubleBracket]1, 1\[RightDoubleBracket]] < linkJointNumber2 - 1, \[IndentingNewLine]Print["\<Error: link \>", l2, "\< has too few joints.\>"]; \[IndentingNewLine]Return[Null]\[IndentingNewLine]]; \[IndentingNewLine]pos = l1\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket] + l1\[LeftDoubleBracket]1, 1, linkJointNumber1\[RightDoubleBracket]; \[IndentingNewLine]ckRevoluteJoint[{{linkNumber1, linkJointNumber1}, {linkNumber2, linkJointNumber2}}, pos, Graphics[{GrayLevel[ .5], Disk[{0, 0},  .05], GrayLevel[0], Circle[{0, 0},  .05]}]]\[IndentingNewLine]];\)\(\[IndentingNewLine]\)
  \)\n
  \(\(makePrismaticJoint[{{linkNumber1_Integer, linkJointNumber11_Integer, linkJointNumber12_Integer}, {linkNumber2_Integer, linkJointNumber21_Integer, linkJointNumber22_Integer}}, links_List] := Module[{pos, l1, l2, \[Theta]}, \[IndentingNewLine]l1 = links\[LeftDoubleBracket]linkNumber1\[RightDoubleBracket]; \[IndentingNewLine]l2 = links\[LeftDoubleBracket]linkNumber2\[RightDoubleBracket]; \[IndentingNewLine]If[Length[l1\[LeftDoubleBracket]1, 1\[RightDoubleBracket]] < linkJointNumber11 - 1, \[IndentingNewLine]Print["\<Error: link \>", l1, "\< has too few joints.\>"]; \[IndentingNewLine]Return[Null]\[IndentingNewLine]]; \[IndentingNewLine]If[Length[l1\[LeftDoubleBracket]1, 1\[RightDoubleBracket]] < linkJointNumber12 - 1, \[IndentingNewLine]Print["\<Error: link \>", l1, "\< has too few joints.\>"]; \[IndentingNewLine]Return[Null]\[IndentingNewLine]]; \[IndentingNewLine]If[Length[l2\[LeftDoubleBracket]1, 1\[RightDoubleBracket]] < linkJointNumber21 - 1, \[IndentingNewLine]Print["\<Error: link \>", l2, "\< has too few joints.\>"]; \[IndentingNewLine]Return[Null]\[IndentingNewLine]]; \[IndentingNewLine]If[Length[l2\[LeftDoubleBracket]1, 1\[RightDoubleBracket]] < linkJointNumber22 - 1, \[IndentingNewLine]Print["\<Error: link \>", l2, "\< has too few joints.\>"]; \[IndentingNewLine]Return[Null]\[IndentingNewLine]]; \[IndentingNewLine]pos = l1\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket] + RotationMatrix2D[\[Theta] = \(-l1\[LeftDoubleBracket]1, \(-1\)\[RightDoubleBracket]\)] . l1\[LeftDoubleBracket]1, 1, linkJointNumber11\[RightDoubleBracket]; \[IndentingNewLine]ckPrismaticJoint[{{linkNumber1, linkJointNumber11, linkJointNumber12}, {linkNumber2, linkJointNumber21, linkJointNumber22}}, pos, Graphics[{GrayLevel[ .5], imsPolygon[\(\((RotationMatrix2D[\(-\[Theta]\)] . #)\) &\) /@ {{0,  .05}, {\(- .15\),  .05}, {\(- .15\), \(- .05\)}, {\(- .05\), \(- .05\)}, {\(- .05\), \(- .15\)}, { .05, \(- .15\)}, { .05, \(- .05\)}, { .15, \(- .05\)}, { .15,  .05}, {0,  .05}}], GrayLevel[0], Line[\(\((RotationMatrix2D[\(-\[Theta]\)] . #)\) &\) /@ {{0,  .05}, {\(- .15\),  .05}, {\(- .15\), \(- .05\)}, {\(- .05\), \(- .05\)}, {\(- .05\), \(- .15\)}, { .05, \(- .15\)}, { .05, \(- .05\)}, { .15, \(- .05\)}, { .15,  .05}, {0,  .05}}]}]]\[IndentingNewLine]];\)\(\[IndentingNewLine]\)
  \)\[IndentingNewLine]
  \(makeGearJoint[{{linkNumber1_Integer, linkJointNumber1_Integer}, {linkNumber2_Integer, linkJointNumber2_Integer}}, links_List] := Module[{l1, l2}, \[IndentingNewLine]l1 = links\[LeftDoubleBracket]linkNumber1\[RightDoubleBracket]; \[IndentingNewLine]l2 = links\[LeftDoubleBracket]linkNumber2\[RightDoubleBracket]; \[IndentingNewLine]If[Head[l1] =!= ckGearLink || Head[l2] =!= ckGearLink, \[IndentingNewLine]Print["\<Error: links must both be gears.\>"]; \[IndentingNewLine]Return[Null]\[IndentingNewLine]]; \[IndentingNewLine]imsckGearJoint[{{linkNumber1, linkJointNumber1}, {linkNumber2, linkJointNumber2}}, l1\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket] + \((l1\[LeftDoubleBracket]1, 1, 2\[RightDoubleBracket]\/\(l1\[LeftDoubleBracket]1, 1, 2\[RightDoubleBracket] + l2\[LeftDoubleBracket]1, 1, 2\[RightDoubleBracket]\))\) \((l2\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket] - l1\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket])\), Graphics[GrayLevel[ .5], Disk[{0, 0},  .05]]]\[IndentingNewLine]];\)\)



drawLink[link_ckLink]:=
    transformGraphicsObject[#,{0,0,0},
          Join[link\[LeftDoubleBracket]-2\[RightDoubleBracket],{0}]]&/@
      link\[LeftDoubleBracket]-1\[RightDoubleBracket];
drawLink[link_ckAnchorLink]:=
    transformGraphicsObject[#,{0,0,0},
          Join[link\[LeftDoubleBracket]-2\[RightDoubleBracket],{0}]]&/@
      link\[LeftDoubleBracket]-1\[RightDoubleBracket];
drawLink[link_ckSliderLink]:=
    transformGraphicsObject[#,{0,0,0},
          Join[link\[LeftDoubleBracket]-2\[RightDoubleBracket],{0}]]&/@
      link\[LeftDoubleBracket]-1\[RightDoubleBracket];
drawLink[link_ckGearLink]:=
    transformGraphicsObject[#,{0,0,0},
          Join[link\[LeftDoubleBracket]-2\[RightDoubleBracket],{0}]]&/@
      link\[LeftDoubleBracket]-1\[RightDoubleBracket];

drawJoint[joint_ckGroundJoint]:=
    transformGraphicsObject[#,{0,0,0},
          Join[joint\[LeftDoubleBracket]-2\[RightDoubleBracket],{0}]]&/@
      joint\[LeftDoubleBracket]-1\[RightDoubleBracket];
drawJoint[joint_ckRevoluteJoint]:=
    transformGraphicsObject[#,{0,0,0},
          Join[joint\[LeftDoubleBracket]-2\[RightDoubleBracket],{0}]]&/@
      joint\[LeftDoubleBracket]-1\[RightDoubleBracket];
drawJoint[joint_ckPrismaticJoint]:=
    transformGraphicsObject[#,{0,0,0},
          Join[joint\[LeftDoubleBracket]-2\[RightDoubleBracket],{0}]]&/@
      joint\[LeftDoubleBracket]-1\[RightDoubleBracket];
drawJoint[joint_imsckGearJoint]:=
    transformGraphicsObject[#,{0,0,0},
          Join[joint\[LeftDoubleBracket]-2\[RightDoubleBracket],{0}]]&/@
      joint\[LeftDoubleBracket]-1\[RightDoubleBracket];

transformGraphicsObject[
      Disk[{xc_,yc_},radius_],{x0_,y0_,\[Theta]0_},{x_,y_,\[Theta]_}]:=
    Module[{},Disk[RotationMatrix2D[\[Theta]].{xc,yc}+{x,y},radius]];
transformGraphicsObject[
      Circle[{xc_,yc_},radius_],{x0_,y0_,\[Theta]0_},{x_,y_,\[Theta]_}]:=
    Module[{},Circle[RotationMatrix2D[\[Theta]].{xc,yc}+{x,y},radius]];
transformGraphicsObject[
    Circle[{xc_,yc_},radius_,{\[Theta]1_,\[Theta]2_}],{x0_,
      y0_,\[Theta]0_},{x_,y_,\[Theta]_}]:=
  Module[{},
    Circle[RotationMatrix2D[\[Theta]].{xc,yc}+{x,y},radius,
      filterAngles[{\[Theta]1-\[Theta],\[Theta]2-\[Theta]}]]];
transformGraphicsObject[Line[pts_],{x0_,y0_,\[Theta]0_},{x_,y_,\[Theta]_}]:=
    Module[{dx,dy,Q},
      Q=RotationMatrix2D[\[Theta]];
      Line[(Q.(#)+{x,y})&/@pts]
      ];
transformGraphicsObject[imsPolygon[pts_],{x0_,y0_,\[Theta]0_},{x_,y_,\[Theta]_}]:=
    Module[{Q},
      Q=RotationMatrix2D[\[Theta]];
      imsPolygon[(Q.(#)+{x,y})&/@pts]
      ];
transformGraphicsObject[o_GrayLevel,{x0_,y0_,\[Theta]0_},{x_,y_,\[Theta]_}]:=
    o;
transformGraphicsObject[o_Hue,{x0_,y0_,\[Theta]0_},{x_,y_,\[Theta]_}]:=o;
transformGraphicsObject[o_RGBColor,{x0_,y0_,\[Theta]0_},{x_,y_,\[Theta]_}]:=
    o;
transformGraphicsObject[o_CMYKColor,{x0_,y0_,\[Theta]0_},{x_,y_,\[Theta]_}]:=
    o;
transformGraphicsObject[o_Thickness,{x0_,y0_,\[Theta]0_},{x_,y_,\[Theta]_}]:=
    o;
transformGraphicsObject[o_PointSize,{x0_,y0_,\[Theta]0_},{x_,y_,\[Theta]_}]:=
    o;
transformGraphicsObject[o_Dashing,{x0_,y0_,\[Theta]0_},{x_,y_,\[Theta]_}]:=o;
transformGraphicsObject[
      o_AbsoluteThickness,{x0_,y0_,\[Theta]0_},{x_,y_,\[Theta]_}]:=o;
transformGraphicsObject[
      o_AbsolutePointSize,{x0_,y0_,\[Theta]0_},{x_,y_,\[Theta]_}]:=o;
transformGraphicsObject[
      o_AbsoluteDashing,{x0_,y0_,\[Theta]0_},{x_,y_,\[Theta]_}]:=o;
transformGraphicsObject[o_List,{x0_,y0_,\[Theta]0_},{x_,y_,\[Theta]_}]:=
    transformGraphicsObject[#,{x0,y0,\[Theta]0},{x,y,\[Theta]}]&/@o;

drawLink[link_ckLink,{x_,y_,\[Theta]_}]:=Module[{},
      (transformGraphicsObject[#,
              Join[link\[LeftDoubleBracket]-2\[RightDoubleBracket],{link\
\[LeftDoubleBracket]1,2\[RightDoubleBracket]}],{x,y,\[Theta]}])&/@
        link\[LeftDoubleBracket]-1\[RightDoubleBracket]
      ];
drawLink[link_ckAnchorLink,{x_,y_,\[Theta]_}]:=Module[{},
      (transformGraphicsObject[#,
              Join[link\[LeftDoubleBracket]-2\[RightDoubleBracket],{link\
\[LeftDoubleBracket]1,2\[RightDoubleBracket]}],{x,y,\[Theta]}])&/@
        link\[LeftDoubleBracket]-1\[RightDoubleBracket]
      ];
drawLink[link_ckSliderLink,{x_,y_,\[Theta]_}]:=Module[{},
      (transformGraphicsObject[#,
              Join[link\[LeftDoubleBracket]-2\[RightDoubleBracket],{link\
\[LeftDoubleBracket]1,2\[RightDoubleBracket]}],{x,y,\[Theta]}])&/@
        link\[LeftDoubleBracket]-1\[RightDoubleBracket]
      ];
drawLink[link_ckGearLink,{x_,y_,\[Theta]_}]:=Module[{},
      (transformGraphicsObject[#,
              Join[link\[LeftDoubleBracket]-2\[RightDoubleBracket],{link\
\[LeftDoubleBracket]1,2\[RightDoubleBracket]}],{x,y,\[Theta]}])&/@
        link\[LeftDoubleBracket]-1\[RightDoubleBracket]
      ];

\!\(\(drawMovedLinks[links_List, sol_List] := Module[{}, \[IndentingNewLine]Map[drawLink @@ # &, Transpose[{links, Table[{Global`Rx\_i[Global`t], Global`Ry\_i[Global`t], Mod[Global`\[Theta]\_i[Global`t], 2  \[Pi]]} /. Flatten[sol], {i, 1, Length[links]}]}], 1]\[IndentingNewLine]];\)\)

\!\(\(maxTeeth[r0_, r1_] := IntegerPart[\(\[Pi] \((r0 + r1)\)\)\/\(2 \((r1 - r0)\)\)];\)\[IndentingNewLine]
  \(flankAngle[r0_, r1_] := Module[{flankTip}, \[IndentingNewLine]flankTip = RotationMatrix2D[\@\(\((r1\/r0)\)\^2 - 1. \)] . {r0, 0} + \[IndentingNewLine]RotationMatrix2D[\(-\[Pi]\)/2] . RotationMatrix2D[\@\(\((r1\/r0)\)\^2 - 1. \)] . {r0\ \@\(\((r1\/r0)\)\^2 - 1. \), 0}; \[IndentingNewLine]ArcCos[flankTip . {1, 0}\/\@\(flankTip . flankTip\)]\[IndentingNewLine]];\)\[IndentingNewLine]
  \(\(generateGearTooth[r0_, r1_, nTeeth_] := Module[{\[Theta]base, \[Theta]tip, flankLine, \[Theta]f, \[Theta]fm, \[Theta]t, Q}, \[IndentingNewLine]If[nTeeth > maxTeeth[r0, r1], \[IndentingNewLine]Return[Null]\[IndentingNewLine]]; \[IndentingNewLine]\[Theta]f = flankAngle[r0, r1]; \[IndentingNewLine]\[Theta]fm = flankAngle[r0, \(r0 + r1\)\/2]; \[IndentingNewLine]\[Theta]t = \(2  \[Pi]\)\/nTeeth; \[IndentingNewLine]\[Theta]base = \[Theta]t\/2 - 2  \[Theta]fm; \[IndentingNewLine]\[Theta]tip = \[Theta]t\/2 - 2 \((\[Theta]f - \[Theta]fm)\); \[IndentingNewLine]flankLine = \(ParametricPlot[RotationMatrix2D[\[Theta]] . {r0, 0} + \[IndentingNewLine]RotationMatrix2D[\(-\[Pi]\)/2] . RotationMatrix2D[\[Theta]] . {r0\ \[Theta], 0}, {\[Theta], 0, \@\(\((r1\/r0)\)\^2 - 1\)}, DisplayFunction \[Rule] Identity, PlotDivision \[Rule] 5]\)\[LeftDoubleBracket]1, 1, 1\[RightDoubleBracket]; \[IndentingNewLine]baseLine = \(ParametricPlot[Evaluate[RotationMatrix2D[\[Alpha]] . {r0, 0}], {\[Alpha], \[Theta]t, \[Theta]t - \[Theta]base}, DisplayFunction \[Rule] Identity, PlotDivision \[Rule] 5]\)\[LeftDoubleBracket]1, 1, 1\[RightDoubleBracket]; \[IndentingNewLine]tipLine = \(ParametricPlot[Evaluate[RotationMatrix2D[\[Alpha]] . {r1, 0}], {\[Alpha], \[Theta]f + \[Theta]tip, \[Theta]f}, DisplayFunction \[Rule] Identity, PlotDivision \[Rule] 5]\)\[LeftDoubleBracket]1, 1, 1\[RightDoubleBracket]; \[IndentingNewLine]Q = RotationMatrix2D[\[Theta]t - \[Theta]base]; \[IndentingNewLine]{flankLine, tipLine, Map[\((Q . {#\[LeftDoubleBracket]1\[RightDoubleBracket], \(-#\[LeftDoubleBracket]2\[RightDoubleBracket]\)})\) &, flankLine, {2}], baseLine}\[IndentingNewLine]];\)\(\[IndentingNewLine]\)
  \)\[IndentingNewLine]
  drawGear[r0_, r1_, nTeeth_] := drawGear[r0, r1, nTeeth, 0]; drawGear[r0_, r1_, nTeeth_, \[Theta]i_] := Module[{gt, \[Theta]}, \[IndentingNewLine]If[nTeeth > maxTeeth[r0, r1], \[IndentingNewLine]Return[Null]\[IndentingNewLine]]; \[IndentingNewLine]gt = generateGearTooth[r0, r1, nTeeth]; \[IndentingNewLine]\[Theta] = 2  \[Pi]/nTeeth; \[IndentingNewLine]Graphics[{Table[Map[\((RotationMatrix2D[\[Alpha]\ \[Theta] + \[Theta]i] . #)\) &, gt, {3}], {\[Alpha], 0, nTeeth - 1}], Circle[{0, 0},  .05], {Line[{{\(- .05\), 0. }, { .05, 0. }}], Line[{{0. , \(- .05\)}, {0. ,  .05}}]}\ \[IndentingNewLine]}]\[IndentingNewLine]];\)





\!\(\(makeLinkEquations[theLink_ckLink, {Rx_, Ry_, \[Theta]z_}] := Module[{jointLocalPositions, coRotatingAxesAngle}, \[IndentingNewLine]{jointLocalPositions, coRotatingAxesAngle} = theLink\[LeftDoubleBracket]1\[RightDoubleBracket]; \[IndentingNewLine]Return[\({Rx, Ry} + \((RotationMatrix2D[\[Theta]z - coRotatingAxesAngle] . #)\) &\) /@ jointLocalPositions]\[IndentingNewLine]];\)\n
  \(makeLinkEquations[theLink_ckAnchorLink, {Rx_, Ry_, \[Theta]z_}] := Module[{jointLocalPositions, coRotatingAxesAngle}, \[IndentingNewLine]{jointLocalPositions, coRotatingAxesAngle} = theLink\[LeftDoubleBracket]1\[RightDoubleBracket]; \[IndentingNewLine]Return[\({Rx, Ry} + \((RotationMatrix2D[\[Theta]z - coRotatingAxesAngle] . #)\) &\) /@ jointLocalPositions]\[IndentingNewLine]];\)\[IndentingNewLine]
  \(makeLinkEquations[theLink_ckSliderLink, {Rx_, Ry_, \[Theta]z_}] := Module[{jointLocalPositions, coRotatingAxesAngle}, \[IndentingNewLine]{jointLocalPositions, coRotatingAxesAngle} = theLink\[LeftDoubleBracket]1\[RightDoubleBracket]; \[IndentingNewLine]Return[\({Rx, Ry} + \((RotationMatrix2D[\[Theta]z - coRotatingAxesAngle] . #)\) &\) /@ jointLocalPositions]\[IndentingNewLine]];\)\[IndentingNewLine]
  \(\(makeLinkEquations[theLink_ckGearLink, {Rx_, Ry_, \[Theta]z_}] := Module[{jointLocalPositions, coRotatingAxesAngle}, \[IndentingNewLine]{jointLocalPositions, coRotatingAxesAngle} = theLink\[LeftDoubleBracket]1\[RightDoubleBracket]; \[IndentingNewLine]Return[\({Rx, Ry} + \((RotationMatrix2D[\[Theta]z - coRotatingAxesAngle] . #)\) &\) /@ Drop[jointLocalPositions, \(-1\)]]\[IndentingNewLine]];\)\(\[IndentingNewLine]\)
  \)\[IndentingNewLine]
  \(makeLinkConstraintEquation[theLink_ckLink, {Rx_, Ry_, \[Theta]z_}] := {Null};\)\[IndentingNewLine]
  \(makeLinkConstraintEquation[theLink_ckGearLink, {Rx_, Ry_, \[Theta]z_}] := {Null};\)\[IndentingNewLine]
  \(makeLinkConstraintEquation[theLink_ckAnchorLink, {Rx_, Ry_, \[Theta]z_}] := Flatten[{{Rx, Ry} - theLink\[LeftDoubleBracket]2\[RightDoubleBracket], {\[Theta]z} - theLink\[LeftDoubleBracket]1, \(-1\)\[RightDoubleBracket]}];\)\[IndentingNewLine]
  \(\(makeLinkConstraintEquation[theLink_ckSliderLink, {Rx_, Ry_, \[Theta]z_}] := Module[{jointLocalPositions, coRotatingAxesAngle}, \[IndentingNewLine]{jointLocalPositions, coRotatingAxesAngle} = theLink\[LeftDoubleBracket]1\[RightDoubleBracket]; \[IndentingNewLine]Return[{\((RotationMatrix2D[\(-coRotatingAxesAngle\)] . \(({Rx, Ry} - jointLocalPositions\[LeftDoubleBracket]1\[RightDoubleBracket] - theLink\[LeftDoubleBracket]2\[RightDoubleBracket])\))\)\[LeftDoubleBracket]2\[RightDoubleBracket], \[Theta]z}]\[IndentingNewLine]];\)\(\[IndentingNewLine]\)
  \)\[IndentingNewLine]
  \(\(makeLinkInitialCondition[theLink_] := Join[theLink\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket], {0}];\)\(\[IndentingNewLine]\)
  \)\[IndentingNewLine]
  \(makeLinkVariables[theLink_ckLink, {i_}] := {Global`Rx\_i[Global`t], Global`Ry\_i[Global`t], Global`\[Theta]\_i[Global`t]};\)\n
  \(makeLinkVariables[theLink_ckAnchorLink, {i_}] := {Global`Rx\_i[Global`t], Global`Ry\_i[Global`t], Global`\[Theta]\_i[Global`t]};\)\[IndentingNewLine]
  \(makeLinkVariables[theLink_ckSliderLink, {i_}] := {Global`Rx\_i[Global`t], Global`Ry\_i[Global`t], Global`\[Theta]\_i[Global`t]};\)\n
  \(\(makeLinkVariables[theLink_ckGearLink, {i_}] := {Global`Rx\_i[Global`t], Global`Ry\_i[Global`t], Global`\[Theta]\_i[Global`t]};\)\(\n\)
  \)\n
  \(makeJointEquation[joint_ckRevoluteJoint, links_List, linkVariables_List] := Module[{linkNumber1, linkJoint1, linkNumber2, linkJoint2}, \[IndentingNewLine]{{linkNumber1, linkJoint1}, {linkNumber2, linkJoint2}} = joint\[LeftDoubleBracket]1\[RightDoubleBracket]; \[IndentingNewLine]Return[\(makeLinkEquations[links\[LeftDoubleBracket]linkNumber1\[RightDoubleBracket], Part[linkVariables, Range[3 \((linkNumber1 - 1)\) + 1, 3 \((linkNumber1 - 1)\) + 3]]]\)\[LeftDoubleBracket]linkJoint1\[RightDoubleBracket] - \[IndentingNewLine]\(makeLinkEquations[links\[LeftDoubleBracket]linkNumber2\[RightDoubleBracket], Part[linkVariables, Range[3 \((linkNumber2 - 1)\) + 1, 3 \((linkNumber2 - 1)\) + 3]]]\)\[LeftDoubleBracket]linkJoint2\[RightDoubleBracket]]\[IndentingNewLine]];\)\[IndentingNewLine]
  \(makeJointEquation[joint_imsckGearJoint, links_List, linkVariables_List] := Module[{linkNumber1, linkJoint1, linkNumber2, linkJoint2, ratio}, \[IndentingNewLine]{{linkNumber1, linkJoint1}, {linkNumber2, linkJoint2}} = joint\[LeftDoubleBracket]1\[RightDoubleBracket]; \[IndentingNewLine]ratio = \(links\[LeftDoubleBracket]linkNumber2\[RightDoubleBracket]\)\[LeftDoubleBracket]1, 1, 2, 2\[RightDoubleBracket]/\(links\[LeftDoubleBracket]linkNumber1\[RightDoubleBracket]\)\[LeftDoubleBracket]1, 1, 2, 2\[RightDoubleBracket]; \[IndentingNewLine]Return[Part[linkVariables, 3 \((linkNumber1 - 1)\) + 3] + \[IndentingNewLine]Part[linkVariables, 3 \((linkNumber2 - 1)\) + 3] ratio]\[IndentingNewLine]];\)\[IndentingNewLine]
  \(\(makeJointEquation[joint_ckPrismaticJoint, links_List, linkVariables_List] := Module[{linkNumber1, linkJoint11, linkJoint12, linkNumber2, linkJoint21, linkJoint22, ri, rj}, \[IndentingNewLine]{{linkNumber1, linkJoint11, linkJoint12}, {linkNumber2, linkJoint21, linkJoint22}} = joint\[LeftDoubleBracket]1\[RightDoubleBracket]; \[IndentingNewLine]ri = makeLinkEquations[links\[LeftDoubleBracket]linkNumber1\[RightDoubleBracket], Part[linkVariables, Range[3 \((linkNumber1 - 1)\) + 1, 3 \((linkNumber1 - 1)\) + 3]]]; \[IndentingNewLine]rj = makeLinkEquations[links\[LeftDoubleBracket]linkNumber2\[RightDoubleBracket], Part[linkVariables, Range[3 \((linkNumber2 - 1)\) + 1, 3 \((linkNumber2 - 1)\) + 3]]]; \[IndentingNewLine]Return[Flatten[{\((ri\[LeftDoubleBracket]linkJoint11\[RightDoubleBracket] - rj\[LeftDoubleBracket]linkJoint21\[RightDoubleBracket])\) . \((ri\[LeftDoubleBracket]linkJoint11\[RightDoubleBracket] - ri\[LeftDoubleBracket]linkJoint12\[RightDoubleBracket])\), Part[linkVariables, 3 \((linkNumber1 - 1)\) + 3] - Part[linkVariables, 3 \((linkNumber2 - 1)\) + 3] - links\[LeftDoubleBracket]linkNumber1, 1, \(-1\)\[RightDoubleBracket] + links\[LeftDoubleBracket]linkNumber2, 1, \(-1\)\[RightDoubleBracket]}]]\[IndentingNewLine]];\)\(\[IndentingNewLine]\)
  \)\[IndentingNewLine]
  \(\(linkageEquationOfMotion[links_List, joints_List, driveConstraints_List] := Module[{constraintEquations, anchoredLinkConstraintEquations, generalizedCoordinates, jacobianMatrix, rightHandVector, initialConditions}, \[IndentingNewLine]generalizedCoordinates = Flatten[MapIndexed[makeLinkVariables, links]]; \[IndentingNewLine]anchoredLinkConstraintEquations = Select[Flatten[\(\((makeLinkConstraintEquation[#\[LeftDoubleBracket]1\[RightDoubleBracket], #\[LeftDoubleBracket]2\[RightDoubleBracket]])\) &\) /@ Transpose[{links, MapIndexed[makeLinkVariables, links]}]], # =!= Null &]; \[IndentingNewLine]constraintEquations = Join[Flatten[\(makeJointEquation[#, links, generalizedCoordinates] &\) /@ joints], anchoredLinkConstraintEquations, driveConstraints]; \[IndentingNewLine]jacobianMatrix = Transpose[\(D[constraintEquations, #] &\) /@ generalizedCoordinates]; \[IndentingNewLine]rightHandVector = \(-D[constraintEquations /. \((\(\((# \[Rule] 0)\) &\) /@ generalizedCoordinates)\), Global`t]\); \[IndentingNewLine]initialConditions = \((\(\((#\[LeftDoubleBracket]1\[RightDoubleBracket] == #\[LeftDoubleBracket]2\[RightDoubleBracket])\) &\) /@ Transpose[{generalizedCoordinates, Flatten[\(\((makeLinkInitialCondition[#])\) &\) /@ links]}])\) /. {Global`t \[Rule] 0}; \[IndentingNewLine]Return[{Join[\(\((# \[Equal] 0)\) &\) /@ \((jacobianMatrix . D[generalizedCoordinates, Global`t] - rightHandVector)\), initialConditions], \(\((Head[#])\) &\) /@ generalizedCoordinates}]\[IndentingNewLine]];\)\(\[IndentingNewLine]\)
  \)\[IndentingNewLine]
  makeLinkJointEquation[l_, j_, links_List] := Return[\(makeLinkEquations[links\[LeftDoubleBracket]l\[RightDoubleBracket], {Global`Rx\_l[Global`t], Global`Ry\_l[Global`t], Global`\[Theta]\_l[Global`t]}]\)\[LeftDoubleBracket]j\[RightDoubleBracket]]\)



End[];
EndPackage[];