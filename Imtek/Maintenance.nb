(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     19396,        472]*)
(*NotebookOutlinePosition[     20058,        495]*)
(*  CellTagsIndexPosition[     20014,        491]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell["Maintenance Package", "Subtitle"],

Cell[CellGroupData[{

Cell["Introduction", "Section"],

Cell[BoxData[
    \(\(\( (*\ *) \)\(\[IndentingNewLine]\)\( (*\ 
      Title : \ imsMaintenance . 
          m\ *) \)\(\[IndentingNewLine]\)\( (*\ \(Context\)\(:\)\ *) \)\(\
\[IndentingNewLine]\)\( (*\ 
      Author : oliver\ ruebenkoenig\ *) \)\(\[IndentingNewLine]\)\( (*\ 
      Date : \ 10.10  .2005, \ 
      Leipzig\ to\ Freiburg\ *) \)\(\[IndentingNewLine]\)\( (*\ 
      Summary : \ 
        This\ is\ the\ IMTEK\ package\ to\ maintain\ the\ IMS\ mathematica\ \
packages\ *) \)\(\[IndentingNewLine]\)\( (*\ 
      Package\ \(Copyright : \ GNU\ GPL\)\ *) \)\(\[IndentingNewLine]\)\( (*\ 
      Package\ \(Version : \ 0.2  .0\)\ *) \)\(\[IndentingNewLine]\)\( (*\ 
      Mathematica\ \(Version : \ 5.2\)\ *) \)\(\[IndentingNewLine]\)\( (*\ 
      History : \[IndentingNewLine]Now\ wors\ for\ genrating\ index\ entries\ \
which\ are\ IndexTag\ besed; \[IndentingNewLine]Added\ functionalitry\ for\ \
calling\ a\ function\ from\ another\ packge\ if\ function\ in\ considered\ \
apckage\ is\ \(\(obsolete\)\(.\)\)\[IndentingNewLine]\ *) \)\(\
\[IndentingNewLine]\)\( (*\ \(Keywords\)\(:\)\ *) \)\(\[IndentingNewLine]\)\( \
(*\ \(Sources\)\(:\)\ *) \)\(\[IndentingNewLine]\)\( (*\ \(Warnings\)\(:\)\ \
*) \)\(\[IndentingNewLine]\)\( (*\ \(Limitations\)\(:\)\ *) \)\(\
\[IndentingNewLine]\)\( (*\ \(Discussion\)\(:\)\ *) \)\(\[IndentingNewLine]\)\
\( (*\ \(Requirements\)\(:\)\ *) \)\(\[IndentingNewLine]\)\( (*\ \(Examples\)\
\(:\)\ *) \)\(\[IndentingNewLine]\)\( (*\ *) \)\)\)], "Input",
  InitializationCell->True],

Cell[CellGroupData[{

Cell["Disclaimer", "Subsubsection"],

Cell[BoxData[
    \(\(\( (*\ 
      Disclaimer\ *) \)\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)\( (*\ 
      Whereever\ the\ GNU\ GPL\ is\ not\ applicable, \ 
      the\ software\ should\ be\ used\ in\ the\ same\ \(\(spirit\)\(.\)\)\ \
*) \)\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)\( (*\ 
      Users\ of\ this\ code\ must\ verify\ correctness\ for\ their\ \
\(\(application\)\(.\)\)\ *) \)\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)\
\( (*\ Free\ Software\ Foundation, \(\(Inc\)\(.\)\), 59\ Temple\ Place, 
      Suite\ 330, Boston, MA\ 02111 - 1307\ USA\ *) \)\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(\( (*\ \(Disclaimer\)\(:\)\ *) \)\(\[IndentingNewLine]\)\(\
\[IndentingNewLine]\)\( (*\ 
      Summary : \ 
        This\ is\ the\ IMTEK\ package\ to\ maintain\ the\ IMS\ mathematica\ \
packages\ *) \)\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)\( (*\ 
      Copyright\ \((C)\)\ 2005\ Oliver\ Ruebenkoenig\ *) \)\(\
\[IndentingNewLine]\)\(\[IndentingNewLine]\)\( (*\ \(This\ program\ is\ free\ \
software;\)\ *) \)\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)\( (*\ 
      you\ can\ redistribute\ it\ and/
          or\ modify\ it\ under\ the\ terms\ of\ the\ GNU\ General\ Public\ \
License\ *) \)\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)\( (*\ \(as\ \
published\ by\ the\ Free\ Software\ Foundation; 
      either\ version\ 2\ of\ the\ License\)\(,\)\ *) \)\(\[IndentingNewLine]\
\)\(\[IndentingNewLine]\)\( (*\ 
      or\ \((at\ your\ option)\)\ any\ later\ version . 
          This\ program\ is\ distributed\ in\ the\ hope\ that\ *) \)\(\
\[IndentingNewLine]\)\(\[IndentingNewLine]\)\( (*\ 
      it\ will\ be\ useful, \(but\ WITHOUT\ ANY\ WARRANTY;\)\ *) \)\(\
\[IndentingNewLine]\)\(\[IndentingNewLine]\)\( (*\ 
      without\ even\ the\ implied\ warranty\ of\ MERCHANTABILITY\ or\ FITNESS\
\ FOR\ A\ PARTICULAR\ \(\(PURPOSE\)\(.\)\)\ *) \)\(\[IndentingNewLine]\)\(\
\[IndentingNewLine]\)\( (*\ 
      See\ the\ GNU\ General\ Public\ License\ for\ more\ details . \ 
          You\ should\ have\ received\ a\ copy\ of\ \
*) \)\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)\( (*\ 
      the\ GNU\ General\ Public\ License\ along\ with\ this\ program; 
      if\ not, \ 
      write\ to\ the\ *) \)\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)\( \
(*\ Free\ Software\ Foundation, \(\(Inc\)\(.\)\), 59\ Temple\ Place, 
      Suite\ 330, Boston, MA\ 02111 - 1307\ USA\ *) \)\)\)], "Input",
  InitializationCell->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Start Package", "Section"],

Cell[BoxData[
    \(\(\( (*\ 
      Start\ Package\ \
*) \)\(\[IndentingNewLine]\)\(BeginPackage["\<Imtek`Maintenance`\>"];\)\)\)], \
"Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Documentation // Error - Messages", "Section"],

Cell[CellGroupData[{

Cell["Docu", "Subsection"],

Cell[BoxData[
    \(\(\( (*\ *) \)\(\[IndentingNewLine]\)\( (*\ 
      documentation\ *) \)\(\[IndentingNewLine]\)\( (*\ *) \)\(\
\[IndentingNewLine]\)\(\[IndentingNewLine]\)\( (*\ 
      constructors\ *) \)\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)\( (*\ 
      selectors\ *) \)\(\[IndentingNewLine]\)\(\n\)\( (*\ 
      predicates\ *) \)\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)\( (*\ 
      functions\ \
*) \)\(\[IndentingNewLine]\)\(\(imsGenerateIMSIndexEntry::usage = \
"\<imsGenerateIMSIndexEntry[ functionName, packageName, addOnsFunctionPrefix, \
tagName ] returns a Notebook cell that is suitable for a HelpBrowser index \
entry. functionName, packageName, addOnsFunctionPrefix and tagName are a \
Strings.\>";\)\[IndentingNewLine]\[IndentingNewLine]
    \(imsBuildIndexPackagePair::usage = "\<imsBuildIndexPackagePair[ \
functionNames, packageName ] returns a List of pairs of functionNames and \
packageName. functionNames is a List of Strings. packageName is a string.\>";\
\)\[IndentingNewLine]\[IndentingNewLine]
    \(imsCreateObsoleteFunctionInterface::usage = \
"\<imsCreateObsoleteFunctionInterface[ functionName, context, prefix ] \
creates an error message for an obsolete function name in context. prefix \
defaults to ims.\>";\)\[IndentingNewLine]\[IndentingNewLine]
    \(imsCreateObsoleteFunctionPackageInterface::usage = \
"\<imsCreateObsoleteFunctionPackageInterface[ oldFunctionName, \
newFunctionName ] creates an error message for an obsolete old function name \
and calls the new function name. The new function name has to be given with a \
complete context path.\>";\)\[IndentingNewLine]\[IndentingNewLine]
    \(imsCreatePackageIndexEntries::usage\  = \ \
"\<imsCreatePackageIndexEntries[ context ] returns a list contaning a list \
for function names in the context of a package and the package \
name.\>";\)\)\)\)], "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Options Docu", "Subsection"],

Cell[BoxData[
    \(\(\( (*\ *) \)\(\[IndentingNewLine]\)\( (*\ 
      options\ docu\ *) \)\(\[IndentingNewLine]\)\( (*\ *) \)\)\)], "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Error Messages", "Subsection"],

Cell[BoxData[
    \(\(\( (*\ *) \)\(\[IndentingNewLine]\)\( (*\ 
      error\ messages\ *) \)\(\[IndentingNewLine]\)\( (*\ *) \)\)\)], "Input",\

  InitializationCell->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Start Private", "Section"],

Cell[BoxData[
    \(\(Begin["\<`Private`\>"];\)\)], "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Needs - Private Imports", "Section"],

Cell[BoxData[
    \(\(\( (*\ *) \)\(\[IndentingNewLine]\)\( (*\ 
      private\ imports\ *) \)\(\[IndentingNewLine]\)\( (*\ *) \)\)\)], "Input",\

  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Constructor", "Section"],

Cell[BoxData[
    \(\(\( (*\ *) \)\(\[IndentingNewLine]\)\( (*\ 
      implementation\ part\ *) \)\(\[IndentingNewLine]\)\( (*\ *) \)\(\
\[IndentingNewLine]\)\(\[IndentingNewLine]\)\( (*\ 
      constructor\ *) \)\(\[IndentingNewLine]\)\( (*\ *) \)\)\)], "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Options", "Section"],

Cell[BoxData[
    \(\(\( (*\ *) \)\(\[IndentingNewLine]\)\( (*\ 
      define\ your\ options\ *) \)\(\[IndentingNewLine]\)\( (*\ *) \)\)\)], \
"Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Selector", "Section"],

Cell[BoxData[
    \( (*\ selector\ *) \)], "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Predicates", "Section"],

Cell[BoxData[
    \( (*\ predicates\ *) \)], "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions // Overloads", "Section"],

Cell[BoxData[
    \(\(\( (*\ *) \)\(\[IndentingNewLine]\)\( (*\ 
      public\ functions\ *) \)\(\[IndentingNewLine]\)\( (*\ *) \)\(\
\[IndentingNewLine]\)\(\(imsGenerateIMSIndexEntry[\ functionName_String, \ 
          packageName_String, \ addOnsFunctionPrefix_String, \ 
          tagName_String\ ]\  := \ 
        CellPrint[\[IndentingNewLine]indexCell[\[IndentingNewLine]\
functionName, \ \[IndentingNewLine]StringDrop[\ functionName, \ 
              Flatten[\ 
                StringPosition[\ functionName, \ 
                  addOnsFunctionPrefix\ ]\ ]\ ], \[IndentingNewLine]\ 
            packageName, \ 
            tagName\ ]\[IndentingNewLine]];\)\[IndentingNewLine]\
\[IndentingNewLine]
    \(imsBuildIndexPackagePair[{{}}, {}] := {};\)\[IndentingNewLine]
    imsBuildIndexPackagePair[\ functionNames_List, \ 
        packageName_String\ ]\  := \ \({\ #, \ packageName\ } &\)\  /@ \ 
        functionNames\[IndentingNewLine]\[IndentingNewLine]
    \(imsCreateObsoleteFunctionInterface[\ functionName_, \ context_, \ 
          prefix_: "\<ims\>"\ ]\  := \ 
        CompoundExpression[\[IndentingNewLine]\(obsoleteFunction[\ 
              functionName, \ prefix\ ];\), \[IndentingNewLine]functionName[\ 
              args___\ ]\  := \[IndentingNewLine]\((\ 
              obsoleteFunctionMessage[\ 
                functionName\ ]; \ \(ToExpression[\((\ 
                    context\  <> \ prefix\  <> 
                      ToString[\ functionName\ ]\ )\)]\)[\ 
                args\ ]\ \ )\)\ ];\)\[IndentingNewLine]\[IndentingNewLine]
    \(imsCreateObsoleteFunctionPackageInterface[\ oldFunctionName_, \ 
          newFunctionName_\ ]\  := \ 
        CompoundExpression[\[IndentingNewLine]\(obsoletePackageFunction[\ 
              oldFunctionName, \ 
              newFunctionName\ ];\), \[IndentingNewLine]\(ToExpression[\ 
                oldFunctionName\ ]\)[\ 
              args___\ ]\  := \ \
\((\[IndentingNewLine]obsoletePackageFunctionMessage[\ oldFunctionName, \ 
                newFunctionName\ ]; \[IndentingNewLine]Needs[\ 
                Context[\ 
                  Evaluate[\ 
                    ToExpression[\ 
                      newFunctionName\ ]\ ]\ ]\ ]; \
\[IndentingNewLine]\(ToExpression[\ newFunctionName\ ]\)[\ 
                args\ ]\[IndentingNewLine])\)\[IndentingNewLine]];\)\
\[IndentingNewLine]\[IndentingNewLine]
    imsCreatePackageIndexEntries[\ pathToPackage_\ ]\  := \ 
      Module[\[IndentingNewLine]{\ 
          notebookName\  = \ 
            pathToPackage, \[IndentingNewLine]thisOpenNotebook, \
\[IndentingNewLine]notebookContent, \ \[IndentingNewLine]rawPackageName, \
\[IndentingNewLine]thisPackageName, \[IndentingNewLine]rawIndexHits, \
\[IndentingNewLine]thisIndexEntries\[IndentingNewLine]}, \[IndentingNewLine]\
\[IndentingNewLine]thisOpenNotebook\  = 
          NotebookOpen[\ 
            notebookName\ ]; \
\[IndentingNewLine]\[IndentingNewLine]thisNotebookContent\  = \ 
          NotebookGet[\ 
            thisOpenNotebook\ ]; \
\[IndentingNewLine]\[IndentingNewLine]rawPackageName\  = \ 
          Cases[\ \[IndentingNewLine]thisNotebookContent, \ 
            RowBox[{"\<BeginPackage\>", "\<[\>", ___, "\<]\>"}], \ 
            Infinity\ ]; \[IndentingNewLine]thisPackageName\  = \ 
          filterPackageName[\ 
            rawPackageName\ ]; \[IndentingNewLine]\[IndentingNewLine]If[\ 
          isPackageQ[\ 
            thisPackageName\ ], \[IndentingNewLine]rawIndexHits\  = \ 
            Cases[\ thisNotebookContent, \ 
              RowBox[{___, "\<::\>", "\<usage\>"}], \ 
              Infinity\ \ ]; \[IndentingNewLine]thisIndexEntries\  = \ 
            filterRawHits[\ 
              rawIndexHits\ ];\[IndentingNewLine], \
\[IndentingNewLine]\(thisIndexEntries\  = \ {};\)\[IndentingNewLine]]; \
\[IndentingNewLine]\[IndentingNewLine]NotebookClose[\ 
          thisOpenNotebook\ ]; \[IndentingNewLine]\[IndentingNewLine]Return[\ \
\[IndentingNewLine]{\ Append[\ thisIndexEntries, \ thisPackageName\ ], \ 
            thisPackageName\ }\ ]\[IndentingNewLine]]\[IndentingNewLine]
    \)\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(\( (*\ *) \)\(\[IndentingNewLine]\)\( (*\ 
      private\ functions\ *) \)\(\[IndentingNewLine]\)\( (*\ *) \)\(\
\[IndentingNewLine]\)\( (*\[IndentingNewLine]\(indexCell[\ functionName_, \ 
            stippedFunctionName_, \ packageName_\ ]\  := \ 
          Cell[\[IndentingNewLine]TextData[\ {\[IndentingNewLine]StringJoin[\ 
                  functionName, \ "\< , \>"\ ], \[IndentingNewLine]ButtonBox[\
\[IndentingNewLine]packageName, \ 
                  ButtonStyle\  \[Rule] \ \
"\<AddOnsLink\>"\[IndentingNewLine]]\[IndentingNewLine]}\ ], \
\[IndentingNewLine]"\<Index\>", \[IndentingNewLine]CellTags\  \[Rule] \ 
              Union[\ {\ functionName, \ 
                  stippedFunctionName\ }\ ]\[IndentingNewLine]];\)\
\[IndentingNewLine]*) \)\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)\(\(\
indexCell[\ functionName_, \ stippedFunctionName_, \ packageName_, \ 
          tagName_\ ]\  := \ 
        Cell[\[IndentingNewLine]TextData[\ {\[IndentingNewLine]StringJoin[\ 
                functionName, \ "\< , \>"\ ], \[IndentingNewLine]\ 
              ButtonBox[\[IndentingNewLine]packageName, 
                ButtonData\  \[RuleDelayed] \ tagName, 
                ButtonStyle\  \[Rule] \ "\<AddOnsLink\>"\[IndentingNewLine]]\
\[IndentingNewLine]}\ ], \[IndentingNewLine]"\<Index\>", \
\[IndentingNewLine]CellTags\  \[Rule] \ 
            Union[\ {\ functionName, \ 
                stippedFunctionName\ }\ ]\[IndentingNewLine]];\)\
\[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine]
    obsoleteFunctionMessage[\ functionName_\ ]\  := \ 
      Message[\ functionName::"\<imsObsolete\>", \ 
        functionName\ ]\[IndentingNewLine]\[IndentingNewLine]
    obsoletePackageFunctionMessage[\ oldFunctionName_, \ 
        newFunctionName_\ ]\  := \ 
      Message[\ oldFunctionName::"\<imsObsoletePackageFunction\>", \ 
        oldFunctionName, \ 
        newFunctionName\ ]\[IndentingNewLine]\[IndentingNewLine]
    obsoleteFunction[\ functionName_, \ 
        prefix_\ ]\  := \[IndentingNewLine]\(functionName::"\<imsObsolete\>"\ \
 = \ "\<Function name `1` is obsolete. Try function name \>"\  <> \ 
          prefix\  <> "\<`1` instead.\>"\)\[IndentingNewLine]\
\[IndentingNewLine]
    obsoletePackageFunction[\ oldFunctionName_, \ 
        newFunctionName_\ ]\  \
:= \[IndentingNewLine]\(oldFunctionName::"\<imsObsoletePackageFunction\>"\  = \
\ "\<Function name `1` is obsolete. Use function name `2` instead.\>"\)\
\[IndentingNewLine]\[IndentingNewLine]
    \(filterPackageName[\ {}\ ]\  := \ {};\)\n
    \(filterPackageName[\ {\ thisPackage_\ }\ ]\  := \ 
        Module[\[IndentingNewLine]{\ contextName, \ 
            packageName\ }, \[IndentingNewLine]\[IndentingNewLine]contextName\
\  = \ First[\ 
              Select[\ Flatten[\ 
                  thisPackage\  //. \ 
                    RowBox[\ this___]\  \[RuleDelayed] \ 
                      List[\ this\ ]\ ], \ \((StringMatchQ[\ #, \ "\<\"*\>"\ \
] &)\), \ 
                Infinity\ ]\ ]; \[IndentingNewLine]\[IndentingNewLine] (*\ \
\*"\"\<Imtek`blah`packageName` -> packageName \
\>"*) \[IndentingNewLine]packageName\  = \ 
            Last[\ Flatten[\ 
                StringSplit[\ 
                  StringSplit[\ 
                    contextName, \ "\<\"\>"], \ "\<`\>"\ ]\ ]\ ]; \
\[IndentingNewLine]\[IndentingNewLine]Return[\ 
            packageName\ ];\[IndentingNewLine]];\)\[IndentingNewLine]\n
    \(filterRawHits[\ lst_\ ]\  := \ \(filterHit[\ #\ ] &\)\  /@ \ lst;\)\n
    filterHit[\ row_\ ]\  := \ 
      row\  /. \ RowBox[\ {\ 
              functionName_, \ "\<::\>", \ "\<usage\>"\ }\ ]\  \[Rule] \ \ \ \
functionName\[IndentingNewLine]\n
    \(isPackageQ[\ expr_\ ]\  := \ StringQ[\ expr\ ];\)\)\)\)], "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Representors", "Section"],

Cell[BoxData[
    \(\(\( (*\ 
      representors\ *) \)\(\[IndentingNewLine]\)\( \
(*\[IndentingNewLine]Unprotect[\ 
        Graphics\ ]; \[IndentingNewLine]\[IndentingNewLine]Graphics[\ 
          aLineList : {_Line\  .. }\ , \ 
          options___\ ] := \[IndentingNewLine]\ 
        Graphics[\ 
          Line[\ \[IndentingNewLine]\(Through[\ \(List[\ GetPointX, \ 
                      GetPointY\ ]\)[\ #\ ]\ ]\  &\)\  /@ 
              Flatten[\ \[IndentingNewLine]\(Through[\ \(List[GetLineStart, \ 
                          GetLineEnd]\)[\ #\ ]\ ]\  &\)\  /@ \ 
                  aLineList\[IndentingNewLine]]\[IndentingNewLine]\ ], \ 
          options\[IndentingNewLine]]\ ; \[IndentingNewLine]\
\[IndentingNewLine]Protect[\ 
        Graphics\ ];\[IndentingNewLine]*) \)\)\)], "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["End Private", "Section"],

Cell[BoxData[
    \(\(\(End[]\)\(\ \)\( (*\ of\ Begin\ Private\ *) \)\)\)], "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["End Package", "Section"],

Cell[BoxData[
    \(\(\( (*\ 
      Protect[]\  (*\ 
        anything\ *) \ *) \)\(\[IndentingNewLine]\)\(\(EndPackage[]\)\(\ \)\(\
\n\)
    \)\)\)], "Input",
  InitializationCell->True]
}, Closed]]
}, Open  ]]
},
FrontEndVersion->"5.2 for X",
ScreenRectangle->{{0, 1024}, {0, 768}},
AutoGeneratedPackage->Automatic,
WindowSize->{896, 599},
WindowMargins->{{54, Automatic}, {Automatic, 43}}
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 39, 0, 51, "Subtitle"],

Cell[CellGroupData[{
Cell[1840, 57, 31, 0, 74, "Section"],
Cell[1874, 59, 1518, 24, 363, "Input",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[3417, 87, 35, 0, 28, "Subsubsection"],
Cell[3455, 89, 618, 10, 70, "Input",
  InitializationCell->True],
Cell[4076, 101, 1851, 31, 70, "Input",
  InitializationCell->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[5976, 138, 32, 0, 44, "Section"],
Cell[6011, 140, 170, 5, 43, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[6218, 150, 52, 0, 44, "Section"],

Cell[CellGroupData[{
Cell[6295, 154, 26, 0, 38, "Subsection"],
Cell[6324, 156, 1896, 30, 523, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[8257, 191, 34, 0, 30, "Subsection"],
Cell[8294, 193, 169, 3, 59, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[8500, 201, 36, 0, 30, "Subsection"],
Cell[8539, 203, 173, 4, 59, "Input",
  InitializationCell->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[8761, 213, 32, 0, 44, "Section"],
Cell[8796, 215, 88, 2, 70, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[8921, 222, 42, 0, 44, "Section"],
Cell[8966, 224, 174, 4, 70, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[9177, 233, 30, 0, 44, "Section"],
Cell[9210, 235, 291, 5, 70, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[9538, 245, 26, 0, 44, "Section"],
Cell[9567, 247, 179, 4, 70, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[9783, 256, 27, 0, 44, "Section"],
Cell[9813, 258, 79, 2, 70, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[9929, 265, 29, 0, 44, "Section"],
Cell[9961, 267, 81, 2, 70, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[10079, 274, 41, 0, 44, "Section"],
Cell[10123, 276, 4129, 76, 1019, "Input",
  InitializationCell->True],
Cell[14255, 354, 3779, 69, 939, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[18071, 428, 31, 0, 44, "Section"],
Cell[18105, 430, 825, 16, 70, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[18967, 451, 30, 0, 44, "Section"],
Cell[19000, 453, 112, 2, 70, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[19149, 460, 30, 0, 44, "Section"],
Cell[19182, 462, 186, 6, 70, "Input",
  InitializationCell->True]
}, Closed]]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

