(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.0'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     80544,       1438]*)
(*NotebookOutlinePosition[     81248,       1462]*)
(*  CellTagsIndexPosition[     81204,       1458]*)
(*WindowFrame->Normal*)



Notebook[{
Cell[GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`4000480000>R000`400?l00000o`00003oooooool9
ooooo`00ooooool9ooooo`001ooooolE0?ooo`0?0>[/m@2a]mX0Phg305m//`11D:@0;CjJ01l`U00K
;I807BnC02/kV@0nCJ80FFJ`07j8`@2`]]T0k>gf0=@0oooo2Oooool000Oooooo4P3oool0103Gfn`0
Qi76041?X`0A8hd=00lRS004010SS@0nCZ<0RI;60=gPkm40oooo2Oooool000Oooooo3`3oool00`3Y
jo@0SIK803Y9X00D00lRS004010RS012DJD0YjkE0?_koAL0oooo00D0g=o_0;VogP2i_mh0k^og0=gP
k`020:F/e0060>o`m`3oool0oooo0?ooo`39cND0h>?`0`3oool00`37bn@0YJcD0:Z`eP020?ooo`04
0>?UlP2i_mh0^KoN0>GWl`<0oooo00<0g=o^0;VogP2i_mh0102i_mh01@37c>D0oooo0<G:i02i_mh0
a<WS00@0oooo00@0`<GQ0;VogP2i_mh0bLgU0`3oool00`3onOT0onc/0?ooo`0>0?ooo`030?oOg`3o
f=P0ooOg00H0oooo00<0on3P0?ooo`3oool00P3oool01P3oknl0oooo0?ooo`3oool0ooWi0?ogm`@0
oooo00<0on3P0?ooo`3oool00`3oool01P3oh>00oooo0?ooo`3oool0onSX0?ogm`@0oooo00<0on3P
0?ogm`3oool00P3oool00`3omoL0on3P0?ooo`020?ooo`030?oXj03omoL0oooo00<0oooo00<0ooWi
0?oPh03oool0103oool00`3oj>P0ooOg0?ooo`040?ooo`030?oPh03of=P0ono_00D0oooo0P3omoL3
0?ooo`030?ogm`3oj>P0oooo01d0oooo2Oooool000Oooooo3@3oool00`3cm?T0Q8k401T[T@0I00lR
S00302hnV`3;cnH0oooo01D0oooo00D0Qi7600lRS00?8X`0`lSR0<76h@0200lRS0060;Nmg@3oool0
oooo0?gmoP0W>9P0KgZj0`3oool00`1EHjh03b:<02loV`020?ooo`0409nWd@0?8X`03b:<0:F/e0<0
oooo00<0Qi7600lRS00?8X`0100?8X`01@0oCZ<0oooo03M7W`0?8X`0<d>M00<0oooo00D0];[K00lR
S00?8X`04BB=0;c2g`020?ooo`040?ogm`3nEU80oSPd0?oWiP`0oooo00@0oY2=0?hY9@3n;RX0oWAa
0P3nJfL0203of]T0oooo0?ooo`3oool0okFc0?hG4P3nCd/0om[I0P3oool01`3n:RD0oS<^0?ooo`3o
ool0olW80?hG4P3nQX@00P3oool0103odM00oQLB0?i5@@3odM020?ooo`080?nIU`3n5a80oUEA0?of
mP3oool0oRXU0?hY9@3o]K<30?ooo`030?hP6`3n:BD0okFc0080oooo00P0oVYW0?hG4P3nF5@0on?S
0?ooo`3nAD40oRTU0?ne/`<0oooo00@0oWAa0?hG4P3nAD40olO60`3oool00`3n:RD0oRTU0?nRX002
0?ooo`070?ogm`3nF5@0oQLB0?hY9@3n?3P0oVYW0?oPh0030?ooo`030?o7aP3n5a80oX>10080oooo
00@0oWej0?hG4P3nHEh0ong/703oool9ooooo`001oooool<0?ooo`030:fcf00V=iL03b:<01/03b:<
00<072jB0<?8hP3oool0503oool01@27TLH03b:<00lRS033b>80jnce00803b:<00L0U9c<0?ooo`3o
ool0a<SS00lRS00V=iL0oOgn0080oooo00<0>dZQ00lRS01;FJT00P3oool0102OYm403b:<00lRS02U
[=@30?ooo`0308NAaP0?8X`03b:<00@03b:<00D0?djS0?ooo`0gAil03b:<03=3W@020?ooo`050?Gf
nP0^?i/03b:<00lRS01oRL800P3oool01P3onOT0oUIB0?hG4P3n5a80oSPd0?oWiP/0oooo00<0oUQD
0?n6Q03oool00P3oool00`3om_H0oTE10?o7aP020?ooo`090?nn_@3n5a80oTE10?idL@3o/[00oooo
0?iQGP3n5a80om[I0080oooo01<0oRXU0?hc;P3oool0oooo0?o/k03n5a80oRhZ0?imNP3nVIL0oooo
0?nIU`3n5a80oeeI0?imNP3om_H0oTE10?hG4P3nQX@0ojZX0080oooo0P3n5a801@3nOGX0oi>@0?oo
o`3nAD40oQLB0080oV5N00D0onSW0?i5@@3n5a80ohJ40?j6Q0020?ooo`050?iTH@3n5a80ogej0?iZ
I`3nOGX00P3oool03@3n<bh0oQLB0?j6Q03nJVL0ooKf0?nb/03n5a80oS<^0?ofmP3oool0oiVG0?h^
:P3oalH00`3oool02@3n:RD0oTe90?ooo`3oool0oi2=0?hG4P3nCd/0oWAa0?oHf00K0?ooo`Wooooo
0007ooooo`X0oooo00<0k^og05aY/@0?8X`07P0?8X`00`0H:Y00`<GQ0?ooo`0C0?ooo`0808NAaP0?
8X`03b:<0<?8hP3oool08cBF00lRS01^N[X20?ooo`04075l^`0?8X`03b:<0<76h@80oooo00<07S2C
00lRS01VL[H00P3oool0102OYm403b:<00lRS02U[=@30?ooo`0408NAaP0?8X`03b:<0:2WdP<0fmk^
00D0h^Ga0?ooo`0gAil03b:<03=3W@020?ooo`05071k^P0?8X`03b:<04MEY`3knod00P3oool00`3n
K6T0oQLB0?hG4P020?hG4P030?hh=03ojnX0oooo00T0oooo00<0oXJ40?oAd03oool00`3oool03@3o
VIL0oRXU0?o`k`3oool0onc/0?hG4P3nAD40oooo0?ogm`3oool0oiVG0?hG4P3oVIL00P3oool00`3n
JfL0oQLB0?oAd0020?ooo`090?i?B`3n9b80oooo0?ofmP3oool0olO60?hG4P3oO7T0ooKf0080oWej
00<0oQLB0?oAd03omoL00P3oool03P3nAD40oQLB0?ooo`3omoL0oooo0?iHE03n5a80oj:P0?ofmP3o
O7T0oWej0?hG4P3ok>`0ooKf0P3oool01@3oRhT0oQLB0?nn_@3oool0ong/0080oooo00P0oV5N0?hG
4P3odM00ooKf0?ooo`3oRhT0oQLB0?idL@<0oooo00<0oRhZ0?hl>03oool00P3oool02@3nF5@0oQlJ
0?ooo`3oool0olO60?hG4P3nF5@0oooo0?ogm`0K0?ooo`Wooooo0007ooooo`T0oooo00<0f=_/02`l
VP0?8X`0800?8X`00`0H:Y00a<SS0?ooo`0B0?ooo`0;08NAaP0?8X`03b:<0<?8hP3oool0C5ZY00lR
S01:FJT0oooo0?cloP0T=IH00P0?8X`00`1WLkH0oooo0??dn@0200lRS004086;``3oool0oooo09nW
d@803b:<00D0YJcD0?ooo`3oool0oooo08NAaP0200lRS0030;VogP3oool0oooo00<0oooo00T0=dNO
00lRS00c@id0oooo0;Fkf`0@8h`03b:<020aU03SiO800P3oool00`3nOGX0oQLB0?hG4P040?hG4P03
0?i;A`3omoL0oooo00P0oooo00<0om[I0?o/k03oool00`3oool00`3oVIL0oQLB0?nZZ0020?ooo`03
0?hl>03n5a80onc/0080oooo00<0om7@0?hG4P3nAD400P3oool00`3oZjX0oQLB0?j6Q0020?ooo`03
0?j6Q03n5a80on?S00<0oooo00L0oR0K0?i=B@3oool0om[I0?i?B`3n5a80oj^Z00<0oooo00<0oV]W
0?hG4P3odM000P3oool0203nQX@0oQLB0?imNP3oool0olW80?i[I`3n5a80okjm0`3oool00`3o^KP0
oQLB0?n@S@040?ooo`030?nIU`3n5a80oi2=0080oooo00<0oi>@0?hG4P3nM7400`3oool00`3nK6T0
oQLB0?ne/`020?ooo`030?n@S@3n5a80okFc0080oooo00<0oR0K0?hZ9@3oool0703oool9ooooo`00
1oooool80?ooo`030=KIj`0V=iL03b:<02803b:<00<072jB0=CGjP3oool04@3oool02P27TLH03b:<
00lRS033b>80oooo07Ao_00?8X`09CNG0?ooo`31a^4200lRS004010SS00I:i40m?Gj0=SKk0803b:<
00@0W:C@0?ooo`3oool0WjOA0P0?8X`01@2U[=@0oooo0?ooo`3oool0Qi7600803b:<00<0^KoN0?oo
o`3oool00`3oool0200gAil03b:<03=3W@3WjO@08S>E00lRS00@8h`0^;gM0P3oool00`3nOGX0oQLB
0?hG4P060?hG4P030?iFDP3omoL0oooo00`0oooo00@0om7@0?hc;P3n5a80oh^90P3oool00`3nOGX0
oQLB0?ne/`030?ooo`0<0?hP6`3n<bh0okjm0?ooo`3ohn<0oQLB0?hc;P3ok>`0oooo0?nn_@3n5a80
oj:P0`3oool01`3nHEh0oQlJ0?ooo`3oool0oWej0?hG4P3nJfL00`3oool00`3oVIL0oQLB0?nRX002
0?ooo`030?nn_@3n5a80oS`h0080oooo00<0oVYW0?hG4P3nQX@00`3oool00`3oh=l0oQLB0?iQGP04
0?ooo`030?oJf@3n5a80oUQD0080oooo00<0okVh0?hG4P3nCd/00`3oool00`3oTi00oQLB0?i[I`02
0?ooo`030?o7aP3n5a80oUQD0080oooo00<0oUQD0?hG4P3of]T0703oool9ooooo`001oooool70?oo
o`030;_0g`0M;i<03b:<02@03b:<00<09cRH0=CGjP3oool0403oool01P27TLH03b:<00lRS033b>80
oooo0:2XdP803b:<00P0k^og06Ue]`0?8X`0:cbJ05m//`0?8X`0WJC@0;Vng@803b:<00@0^l3N0?oo
o`3oool0WjOA0P0?8X`01@2U[=@0oooo0?ooo`3oool0Qi7600803b:<00X0UYk=0<gAi`3=dNL0cM7W
0>7Sl@3oool0=dNO00lRS00]?IX0AUFV0P0?8X`0101fPKd0oooo0?oin@3nK6T:0?hG4P030?i;B03o
jnX0oooo00P0oooo00<0olG40?idL@3n;RX00`3n5a801P3oZjX0oooo0?ooo`3o^KP0oQLB0?idL@<0
oooo00P0oTe90?h^:P3nRhT0onGU0?ooo`3n;RX0oUEA0?n3P@80ooOg00<0oQhI0?iMF@3oool00P3o
ool01`3oXZ00oQLB0?o1`03oool0onSW0?hG4P3n;RX00`3oool00`3of=P0oQLB0?iTH@030?ooo`07
0?hf<P3n5a80onSW0?ooo`3oh>00oQLB0?iED@040?ooo`030?hV8P3n;RX0oooo00@0oooo00D0oRhZ
0?hO6P3omoL0oooo0?oblP020?hO6P060?ogm`3oool0oooo0?nb/03n5a80oTE10`3oool01`3n91l0
ofaY0?nRX03oool0oiZH0?hG4P3oTi00703oool9ooooo`001oooool60?ooo`030;g2g`0E:8l03b:<
02H03b:<00<072jB0<_?iP3oool03`3oool01P27TLH03b:<00lRS033b>80oooo0<gAi`803b:<00P0
_<;O01X/T@0?8X`0RiC70;2ff@0?8X`0>TZQ09bTc`803b:<00@0fMc]0?ooo`3oool0WjOA0P0?8X`0
1@2U[=@0oooo0?ooo`3oool0Qi7600H03b:<00<0KgZj0?ooo`0gAil0100?8X`0100iBJ00n?Sl0?oo
o`3nIF8<0?hG4P030?hl=`3oool0oooo00H0oooo00<0okFc0?hG4P3n5a800P3n5a805`3n81/0oWej
0?ooo`3ok>`0oi2=0?ofmP3n5a80oRXU0?ooo`3o]K<0om[I0?idL@3n5a80on?S0?ilN@3okN`0oV5N
0?hP6`3ohn<0oVYW0?ofmP3n?SX0oR0K0080oooo00@0oi2=0?oSh`3n5a80oXJ40P3oool00`3nF5@0
oQLB0?oPg`030?ooo`030?hZ9@3n<bh0oooo0080oooo00<0olO60?hP6`3oT8d00P3oool00`3nCd/0
oQLB0?ofmP030?ooo`030?iQGP3n5a80on?S0080oooo00D0ojZX0?oSh`3nJfL0oQLB0?ne/`020?oo
o`030?n@S@3n5a80ojbZ0080oooo00d0ojZX0?hG4P3nCd/0oooo0?ne/`3of]T0oUEA0?iHE03oalH0
ojbZ0?oAd03n5a80oTm;01`0oooo2Oooool000Oooooo1@3oool00`3Ig>d07BnC00lRS00X00lRS003
01h`T`3@e>T0oooo00h0oooo0100Qi7600lRS00?8X`0`lSR0?ooo`3dmOX042>=00lRS01CHJ`03b:<
010SS@3Ri?40l_?i01DXS`0?8X`0DUn/0P0?8X`0103emOX0oooo0?ooo`2OYm4200lRS0050:F/e03o
ool0oooo0?ooo`27TLH01P0?8X`01@1_N[X0oooo03M7W`0?8X`04bF>00803b:<00D0JGFg0?ooo`3o
ool0om;A0?hW8`0:0?hG4P030?hJ5P3o/:h0oooo00L0oooo00H0oUQD0?hG4P3n:BD0oXJ40?nn_@3o
m_H30?ooo`0I0?oAd03nF5@0oQLB0?hG4P3oh=l0oooo0?j@S@3n:BD0oQLB0?ne/`3oj>L0oUQD0?hP
6`3n5a80om[I0?oSh`3nCT/0oQlJ0?hG4P3odM00oooo0?oJf@3nCd/0oQLB0?i?B`020?ooo`030?n@
S@3n5a80oj:P00<0oooo00<0oUQD0?hG4P3ol>l00`3oool03@3odM00oS`h0?nb/03o_[d0oTE10?hG
4P3o_[d0oooo0?oSh`3oXZ00oUQD0?hG4P3oM7400P3oXZ001@3omoL0oWej0?hY9@3n5a80oWej00<0
oooo0140oiVG0?hl>03of]T0ooKf0?iMF@3n5a80oiVG0?ooo`3om_H0oXJ40?hV8P3n:RD0oooo0?o7
aP3n?3P0oQLB0?hP6`0L0?ooo`Wooooo0007ooooo`@0oooo00<0m_Ok03Q8X00?8X`0:P0?8X`00`0P
<Y@0d=CY0?ooo`0=0?ooo`0408NAaP0?8X`03b:<0<?8hP80oooo00D0:3VH00lRS00@8h`03b:<04eK
ZP020?ooo`0505]X/00?8X`03b:<00lRS00S=9H00`3oool0102OYm403b:<00lRS02U[=@30?ooo`04
08NAaP0?8X`03b:<08nHb@<0`lSR00H0fmk^0?ooo`0gAil03b:<03=3W@1VL[H200lRS0050:bbe`3o
ool0oooo0?oBd@3n9b<0203n5a800`3n6QH0ok2^0?ooo`080?ooo`030?i5@@3n9b80ooKf00L0oooo
00@0ooKf0?nIU`3nCT/0onSW0P3oool03@3oalH0oUQD0?nn_@3oool0ooKf0?nIU`3nCT/0onc/0?oo
o`3om_H0oi>A0?i>B`3ok>`00P3oool00`3om_H0oX>10?idL@020?ooo`030?oJf@3nOGX0oiZH00<0
oooo00<0oi2=0?hG4P3o`L00103oool0303om_H0oWai0?i5@@3nHEh0oiVG0?ne/`3oool0ooKf0?o1
`03nM740oQLB0?hl>080oWAa00D0oo3_0?ooo`3oalH0oV5N0?jIU`040?ooo`050?oJf@3nOGX0oTE1
0?iED@3oVIL0103oool01`3o/[00oTi;0?ooo`3oool0on?S0?iZI`3nHEh0703oool9ooooo`001ooo
ool40?ooo`0307N2_P0?8X`03b:<02/03b:<00<083:D0=OJk03oool0303oool01027TLH03b:<00lR
S033b>820?ooo`0504YHZ00?8X`03b:<00lRS02U[=@00P3oool01@2`]mT03b:<00lRS00?8X`0A5>U
00<0oooo00@0WjOA00lRS00?8X`0YJcD0`3oool01027TLH03b:<00lRS02i_mh50?ooo`0803M7W`0?
8X`0<d>M0?CenP0b@Yd03b:<01laU03Ri?420?ooo`030?oBd@3n9b<0oQLB00D0oQLB00<0oQXE0?n`
[P3oool02@3oool00`3nM740oShj0?ooo`040?ooo`030?nj^03oool0oooo0200oooo00<0okjm0?hG
4P3oViP03@3oool00`3ok>`0oQLB0?i?B`0g0?ooo`Wooooo0007ooooo`<0oooo00<0bloV014TS@0?
8X`0;@0?8X`00`0Q<iD0dMGY0?ooo`0;0?ooo`0408NAaP0?8X`03b:<0<?8hP80oooo00D0L7^j00lR
S00?8X`08S>E0?Kgn`020?ooo`050?Wjo00T=IH03b:<00lRS01YM;L00`3oool0102OYm403b:<00lR
S02U[=@30?ooo`0408NAaP0?8X`03b:<0;VogPD0oooo00T0=dNO00lRS00c@id0oooo0=SKk00O<9<0
3b:<03A4WP3Xj_@00P3oool00`3ofMP0oS8]0?hG4P030?hG4P030?hJ5@3oZjT0oooo00X0oooo00<0
on3P0?ha;@3oj>L00`3oool00`3omoL0oW5^0?ooo`020?ooo`030?oPh03nK6T0ok:`01`0oooo00<0
ooOg0?hG4P3nI6403P3oool00`3nAD40oQLB0?o`k`040?ooo`030?n;R@3nM740oo3_02l0oooo2Ooo
ool000Oooooo0`3oool00`1AGj`03b:<00lRS00^00lRS00305]X/03oool0oooo00X0oooo00@0Qi76
00lRS00?8X`0`lSR0P3oool0102EWL`03b:<00lRS01jQ;l40?ooo`0507b7`00?8X`03b:<08bFb03<
d>L00P0c@id0100U=YH03b:<00lRS00V=iL203=3W@050>3Sl027TLH03b:<00lRS00Y>IP00`0c@id0
1@1LJK40oooo03M7W`0?8X`0<d>M0080oooo00D0^KkN010SS00?8X`0?DfR0?GfnP020?ooo`060?oI
f@3n9b<0oQLB0?hG4P3n6QH0ok2^3@3oool01`3odM00oTE10?ne/`3odM00okFc0?i5@@3nEE400`3o
ool00`3oZjX0oQLB0?hn>P0K0?ooo`040?o]k03odM00oQLB0?hf<Ph0oooo00<0on?S0?j6Q03oalH0
103oool00`3n81/0oQLB0?nRX00_0?ooo`Wooooo0007ooooo`80oooo00<0e=OZ010SS@0?8X`0;`0?
8X`00`0F:8l0k_3g0?ooo`0:0?ooo`0408NAaP0?8X`03b:<0<?8hP80oooo00@0][_L00lRS00?8X`0
dmOZ103oool01@3AeNT03b:<00lRS02]/mP0`lSR00P03b:<00<0fmk^08NAaP0?8X`01@0?8X`01@0o
CZ<0oooo03M7W`0?8X`0<d>M00<0oooo00@0Ig>f00lRS00?8X`0GV^b0`3oool0103od]40oRLS0?hJ
5P3o/:h?0?ooo`060?ofmP3oZjX0oWAa0?idL@3oVIL0oo3_0`3oool00`3om_H0oXJ40?nb/00K0?oo
o`050?oJf@3nOGX0oUQD0?hO6P3ok>`0503oool00`3o]K<0oWej0?o/k00_0?ooo`Wooooo0007oooo
o`80oooo00<0Ig>f00lRS00?8X`0<00?8X`00`2KXll0oooo0?ooo`090?ooo`040;6gfP1SKk@0Hfnd
0=WLk@80oooo00<0hnGb06mj^P20R/801P3oool0101lQ/00KgZj0=kQk`3Hfn`806=_]0030>SYm02a
]mX0Hfnd00D0Hfnd00D0PXc30?ooo`1mQl40Hfnd07^5`0030?ooo`050>[/m@1TL;D0Hfnd06=_]03:
c^H00`3oool00`3od]40ok:a0?ooo`0i0?ooo`030?o`k`3oool0oooo04D0oooo2Oooool000Oooooo
00<0oooo0>g^mP0F:8l0<P0?8X`00`15E:H0oooo0?ooo`300?ooo`Wooooo0007ooooo`030?ooo`2J
X/l03b:<03803b:<00<042>=0>W[m03oool0`03oool9ooooo`001oooool00`3oool0AE>V00lRS00K
00lRS00301`^TP0?8X`03b:<00/03b:<00<052J>00lRS00?8X`01`0?8X`00`2NYM00oooo0?ooo`2o
0?ooo`Wooooo0007ooooo`030>W[m@0@8hd03b:<01X03b:<00<0D5j[0?7bn01GI:l02`0?8X`00`16
E:H0h^Ca03i=XP0800lRS00305]X/03oool0oooo0;l0oooo2Oooool000Oooooo00<0/KOJ00lRS00?
8X`06@0?8X`01@1@GZ/0moSk0?ooo`3inO`0EfB_00T03b:<00D0AUBV0?;cn@3oool0k_3g03I6W`07
00lRS00302HgU`3oool0oooo0;l0oooo2Oooool000Oooooo00<0P8[200lRS00?8X`0600?8X`00`15
E:H0moSk0?ooo`020?ooo`030?Wio01GI:l03b:<00H03b:<00<0AUBV0?;cn@3oool00P3oool00`3N
hNl09CJF00lRS00600lRS0030>c]mP3oool0oooo0;h0oooo2Oooool000Oooooo00<0F6F_00lRS00?
8X`05`0?8X`00`0a@Y`0j^ce0?ooo`040?ooo`030?Wio01;FJT03b:<00@03b:<00<0?DbR0?;cn@3o
ool0103oool00`3Gfn`09CJF00lRS00400lRS003051NZ`3hn?`0oooo0;l0oooo2Oooool000Oooooo
00<0>DRP00lRS00?8X`05P0?8X`00`15E:H0j^ce0?ooo`060?ooo`030?3an01;FJT03b:<00803b:<
00<0?DbR0>SZm03oool01P3oool00`3NhNl0=TJO00lRS00200lRS00306Mc]P3inO`0oooo0<00oooo
2Oooool000Oooooo00<083:D00lRS00?8X`05@0?8X`00`1@GZ/0moSk0?ooo`080?ooo`050?Wio01G
I:l03b:<04IDYP3bloT02@3oool0103^l?L0?TfR00lRS01WLkK30?ooo`Wooooo0007ooooo`0301@W
S`0?8X`03b:<01@03b:<00<0@e:U0?Ohn`3oool02P3oool00`3inO`0PWfd0?;cn@0;0?ooo`030>k`
m`1[MkP0nOWl00`0oooo00<0no_m0?ooo`3oool0]03oool9ooooo`001ooooolG00lRS00301PZT030
aN40oooo00X0oooo00<0ol;10?hV8@3o^KP02`3oool00`2]]=P08cFF0=SKk@0;0?ooo`030:fdf018
EjL0moSk0;D0oooo2Oooool000Oooooo00<05bV@00lRS00?8X`05@0?8X`00`0H:Y00`<GQ0?ooo`08
0?ooo`050?o2`@3n81/0oQLB0?hM603o^KP02@3oool01@2]]=P04bF>00lRS00`@I`0jN_e00T0oooo
00D0[KCH01<USP0?8X`0D5j[0?Ohn`2d0?ooo`Wooooo0007ooooo`0302<dUP0?8X`03b:<01H03b:<
00<062Z@0<35h@3oool01P3oool00`3oc</0oR0K0?hG4P020?hG4P030?hM603oaL@0oooo00H0oooo
00<0[KCH01<USP0?8X`00P0?8X`00`0gAil0jN_e0?ooo`060?ooo`030:fdf00C9Hh03b:<00803b:<
00<0D5j[0?Ohn`3oool0/P3oool9ooooo`001oooool00`0mC:803b:<00lRS00G00lRS00301LYT02h
_]d0oooo00@0oooo00<0olc;0?hY9@3n5a80103n5a800`3n9R40olG40?ooo`040?ooo`0309JNc@0B
9Hd03b:<00@03b:<00<0<46L0=SKk03oool0103oool00`2FW/d04RF=00lRS00400lRS00304EDYP3Z
k?D0oooo0;40oooo2Oooool000Oooooo00<0Gfbc00lRS00?8X`0600?8X`00`0G:I00`<GQ0?ooo`02
0?ooo`030?o2`@3n81/0oQLB00H0oQLB00<0oQdH0?ni^03oool00P3oool00`2FW/d03b:<00lRS006
00lRS003020bU03@e>T0oooo0080oooo00<0PH_300lRS00?8X`01P0?8X`00`0a@Y`0i^Sc0?ooo`2`
0?ooo`Wooooo0007ooooo`0308VCa`0?8X`03b:<01T03b:<00D062Z@0<35h@3oool0ol;10?hP6`09
0?hG4P050?hM603o^KP0oooo0:fdf00B9Hh02@0?8X`0100P<Y@0d=CY0?ooo`21Rl<:00lRS0030352
W03Zk?D0oooo0:l0oooo2Oooool000Oooooo00<0^KoN00lRS00?8X`06P0?8X`00`0H:Y00bIfc0?hP
6`0;0?hG4P030?hM602gQJ@04bF>00/03b:<00<083:D07^6`00?8X`02`0?8X`00`15E:H0nOWl0?oo
o`2^0?ooo`Wooooo0007ooooo`030?7bn00C9Hh03b:<01X03b:<00<0AUBV0?;/l@3nEU802`3n5a80
0`3nA400jM_T03M7W`0;00lRS00305MT[`2n`n005BR?00/03b:<00<0Ig>f0?ooo`3oool0[P3oool9
ooooo`001oooool00`3oool0D5j[00lRS00I00lRS00505aX/@3emOX0oooo0?oin@3nK6T02@3n5a80
1@3nFED0oo;a0?ooo`3]k_H0@E2T00T03b:<00D0KWZj0?[jo@3oool0`lSR024cU@0900lRS00306Mc
]P3jn_d0oooo0:l0oooo2Oooool000Oooooo00<0oooo0:J]e@0?8X`0600?8X`00`1LJK40oOgn0?oo
o`030?ooo`030?imNP3n5a80oQLB00D0oQLB00<0oVIS0?oln`3oool00P3oool00`3]k_L0=dNO00lR
S00600lRS003086;``3oool0oooo0080oooo00<0em_/02DfUP0?8X`01P0?8X`00`1hPkh0oooo0?oo
o`2`0?ooo`Wooooo0007ooooo`030?ooo`3dmOX06bfB01L03b:<00<0AUBV0?GenP3oool01@3oool0
0`3nK6T0oQLB0?hG4P030?hG4P030?iIE@3oo?/0oooo00@0oooo00<0jN_e03M7W`0?8X`0100?8X`0
0`21Rl<0oooo0?ooo`040?ooo`030=OKk00U=YH03b:<00@03b:<00<0N8>n0?ooo`3oool0/@3oool9
ooooo`001oooool20?ooo`0307Ao_@0?8X`03b:<01@03b:<00<0AUBV0?;cn@3oool01P3oool00`3o
nOT0oUIB0?hG4P020?hG4P030?i4@03ol_40oooo00H0oooo00<0jN_e03M7W`0?8X`00P0?8X`00`21
Rl<0oooo0?ooo`060?ooo`030=OKk00U=YH03b:<00803b:<00<0N8>n0?ooo`3oool0/P3oool9oooo
o`001oooool20?ooo`030=oQl00B9Hh03b:<01<03b:<00<0AUBV0?;cn@3oool0203oool01@3omoL0
oUIB0?hG4P3nA400ono^00T0oooo00@0jN_e03M7W`0?8X`0KWZj2P3oool0103Gfn`09CJF00lRS01h
Pkje0?ooo`Wooooo0007ooooo`<0oooo00<0Gf^b00lRS00?8X`04@0?8X`00`0`@9`0l_?i0?ooo`0:
0?ooo`030?ogm`3gMGD0ono^00/0oooo00<0jN_e07M]Z03jn_d02`3oool00`3Gfn`0N8:n0?ooo`0;
0?ooo`030?gmoP3hn?`0oooo0:L0oooo2Oooool000Oooooo0`3oool00`3Gf^`052N>00lRS00A00lR
S003010RS022S<<0o_kn00X0oooo00<0^l3O02DfUP2Z/=H02`3oool00`3oTY00oQdI0?nc/@0H0?oo
o`040?Kgn`1LJ;40AEBV0>[/mJL0oooo2Oooool000Oooooo103oool00`28TLH03b:<00lRS00B00lR
S00306]g^03moOh0oooo00L0oooo00D0[KCH01<USP0?8X`042><09RQcP090?ooo`050?imNP3n5a80
oQLB0?hL5`3o^KP05P3oool01P3moOh0G6Va00lRS00?8X`0<D:L0>KXljH0oooo2Oooool000Oooooo
103oool00`3jnod0@U6T00lRS00C00lRS00306]g^03no_h0oooo00D0oooo00<0^l3O01<USP0?8X`0
0P0?8X`00`0@8h`0Z[3F0?ooo`060?ooo`030?imNP3n5a80oQLB0080oQLB00<0oQdH0?ni^03oool0
4`3oool00`3moOh0JgNh00lRS00300lRS0030352W03Vj?<0oooo0:@0oooo2Oooool000Oooooo1@3o
ool00`3Qho408S>E00lRS00C00lRS00308:<``3oool0oooo00<0oooo00<0d=CY01d_T`0?8X`0100?
8X`00`0G:I00`<GQ0?ooo`040?ooo`030?imNP3n5a80oQLB00@0oQLB00<0oQdH0?ni^03oool04@3o
ool00`3moOh0JgNh00lRS00500lRS0030352W03Zk?D0oooo0:<0oooo2Oooool000Oooooo1P3oool0
0`34bN<05BR?00lRS00B00lRS003010SS02HXLh0oooo0080oooo00<0d=CY020bU00?8X`01P0?8X`0
0`0H:Y00`<GQ0?ooo`020?ooo`030?nBT03n5a80oQLB00H0oQLB00<0oQdH0?ni^03oool03`3oool0
0`3moOh0JgNh00lRS00700lRS00304EDYP3gn?/0oooo0:80oooo2Oooool000Oooooo1`3oool00`2n
`n007BnC00lRS00B00lRS005010RS022S<<0o_kn0;_0g`0M;i<02@0?8X`01@0G:I00Z[3F0?ooo`3o
TY00oQPC00T0oQLB00<0oQ`G0?nSX@3oool03@3oool00`3emOX0G6Ra00lRS00900lRS00304EDYP3Z
k?D0oooo0:40oooo2Oooool000Oooooo203oool00`3BeNX08S>E00lRS00C00lRS00304eLZP0C9Hh0
3b:<00X03b:<00<042><09QFPP3n5a80303n5a800`3oclh0oooo0?ooo`0;0?ooo`0305]X/00?8X`0
3b:<00X03b:<00<0=dNO0?cloP3oool0X03oool9ooooo`001oooool90?ooo`030=7Dj@0S=IH03b:<
02003b:<00<072jB0>ETK03n5a802P3n5a800`3oQH<0oooo0?ooo`0<0?ooo`030=OKk00U=YH03b:<
00T03b:<00<05BR?0;Nmg03oool0X@3oool9ooooo`001oooool:0?ooo`030>GWlP19EjP03b:<01h0
3b:<00@0=DFN0=OJk03oool0oVaY2@3n5a800`3oQH<0oooo0?ooo`0>0?ooo`030=OKk00U=YH03b:<
00L03b:<00<052N>0;Nmg03oool0XP3oool9ooooo`001oooool;0?ooo`030?gmoP2BVl/06B^A01/0
3b:<00<042>=07=n_03em_X00P3oool00`3onOT0oUIB0?hG4P060?hG4P030?n5P`3oool0oooo0100
oooo00<0em_/02DfUP0?8X`01P0?8X`00`2PZ=40oooo0?ooo`2R0?ooo`Wooooo0007ooooo`d0oooo
00<0hnKb06Ea]@0A8hd0600?8X`00`0hB:00b<gU0?ooo`040?ooo`030?ogm`3nEU80oQLB00@0oQLB
00<0ohF30?ooo`3oool04P3oool00`3Gfn`09CJF00lRS00400lRS00308fFb03oool0oooo0:<0oooo
2Oooool000Oooooo3`3oool00`3CenX0Kg^j020bU00C00lRS004018TS@1>G:X0Z[7F0?[ko@L0oooo
00H0ooWi0?i/J@3n5a80oQLB0?hJ5@3oVYLF0?ooo`060=kQk`0`@9`03b:<00lRS00G:I00YJcDYP3o
ool9ooooo`001ooooolA0?ooo`040?Wjo02b^=X0HVjd01l`U0d03b:<00@042>=041?X`2?V<T0i>Kb
303oool00`3nOGX0oQLB0?nJU`0H0?ooo`040=kQk`0U=YH062Z@0<35hJL0oooo2Oooool000Oooooo
503oool03`3lo?h0b<gU08nHbP1ULKD0A5>U02`lVP0L;Y804RB=01LZT00R<iD0=dJO05=Q[@1iQ;l0
Z:oE0>KXl`0@0?ooo`030?nk^@3oool0oooo01P0oooo00<0em_/0<;7hP3oool0Y`3oool9ooooo`00
ooooool9ooooo`00\
\>"], "Graphics",
  ShowCellBracket->False,
  CellMargins->{{0, 0}, {Inherited, 0}},
  Evaluatable->False,
  GeneratedCell->False,
  CellAutoOverwrite->False,
  ImageSize->{264, 58.75},
  ImageMargins->{{0, 0}, {3, 3}},
  ImageRegion->{{0, 1}, {0, 1}}],

Cell[BoxData[
    RowBox[{
      ButtonBox[\(Visit\ the\ IMTEK\ Simulation\ web\ page\),
        ButtonData:>{
          URL[ "http://www.imtek.de/simulation"], None},
        ButtonStyle->"Hyperlink",
        ButtonFrame->"DialogBox",
        ButtonNote->"Browse!"], 
      ButtonBox[\(Email\ us\),
        ButtonData:>{
          URL[ "mailto:korvink@imtek.de"], None},
        ButtonStyle->"Hyperlink",
        ButtonFrame->"DialogBox",
        ButtonNote->"Talk!"]}]],
  ShowCellBracket->False,
  CellMargins->{{5, 0}, {Inherited, 10}},
  Evaluatable->False,
  GeneratedCell->False,
  CellAutoOverwrite->False,
  FontColor->GrayLevel[1]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Computational Kinematics",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]]], "Title"],

Cell[TextData[{
  "Notebook \[Copyright] 2002  Jan G. Korvink\n\nJan G. Korvink\nAlte \
Landstrasse 101a\nCH-8803 R\[UDoubleDot]schlikon\nSwitzerland\n",
  Cell[BoxData[
      FormBox[
        ButtonBox[\(korvink@imtek . de\),
          ButtonData:>{
            URL[ "mailto:korvink@imtek.de"], None},
          ButtonStyle->"Hyperlink"], TraditionalForm]]],
  "\n\n (See: ",
  ButtonBox["License.nb",
    ButtonData:>{
      "/usr/groups/simulation/platform/common/mathematica/Documentation/\
English/Imtek/License.nb", "License"},
    ButtonStyle->"Hyperlink"],
  ")\n \nThis program is free software; you can redistribute it and/or modify \
it under the terms of the GNU General Public License as published by the Free \
Software Foundation; either version 2 of the License, or (at your option) any \
later version.\n\nThis program is distributed in the hope that it will be \
useful, but WITHOUT ANY WARRANTY; without even the implied warranty of \
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General \
Public License for more details.\n\nYou should have received a copy of the \
GNU General Public License along with this program; if not, write to the Free \
Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 \
 USA"
}], "Author"],

Cell[CellGroupData[{

Cell["Notes for me", "Section"],

Cell[TextData[{
  "1. The theory for this package is taken from:\n\nComputational Dynamics\n\
Ahmed. A. Shabana\nJohn Wiley and Sons\nNew York\n1994\n\n2. Mechanisms are \
defined as sets of linkages.\n3. Each link has three coordinates ",
  Cell[BoxData[
      \(TraditionalForm\`{x[t], y[t], \[Theta][t]}\)]],
  ".\n4. Links are joined at joints: this defines the link connectivity.\n5. \
Each joint is a constraint equation between the coordinates of the \
participating links.\n6. A normal link (ckLink) has two or more joint \
positions. Other joints are special and may have different requirements.\n7. \
The following links are possible: ckLink, ckAnchorLink, ckSliderLink, \
ckGearLink. I will also add ckRackLink, ckPulley, ckCam, ckKnifeFollower, \
ckFlatFollower, cgRollerFollower, ...\n8. Each link has a creator: makeLink, \
....\n9. The link also packages its initial condition and its initial \
graphic.\n10. Links can create their joint equations and their symbolic joint \
coordinates for use in equations.\n11. Joint definitions create the \
constraint equations and hence the equation assembly: ckGroundJoint, \
ckRevoluteJoint, ckPrismaticJoint, ckGearJoint. Later I will add ckBeltJoint, \
...\n12. Using links and joint definitions, we create the global constraint \
equation ",
  Cell[BoxData[
      FormBox[
        StyleBox[\(C[q[t], t] == 0\),
          FontWeight->"Bold"], TraditionalForm]]],
  ".\n13. Using ",
  Cell[BoxData[
      FormBox[
        RowBox[{
          RowBox[{
            RowBox[{
              SubscriptBox["\[PartialD]", 
                StyleBox["q",
                  FontWeight->"Bold"]], " ", 
              StyleBox["C",
                FontWeight->"Bold"]}], " ", 
            RowBox[{\(\[PartialD]\_t\), " ", 
              StyleBox["q",
                FontWeight->"Bold"]}]}], 
          StyleBox["==",
            FontWeight->"Bold"], 
          RowBox[{
            StyleBox["-",
              FontWeight->"Bold"], 
            RowBox[{\(\[PartialD]\_t\), " ", 
              StyleBox[\(C[q[0], t]\),
                FontWeight->"Bold"]}]}]}], TraditionalForm]]],
  " we generate equations of motion.\n14. Using NDSolve we obtain the time \
evolution of ",
  Cell[BoxData[
      FormBox[
        StyleBox[\(q[t]\),
          FontWeight->"Bold"], TraditionalForm]]],
  ".\n15. Using the link plotter we generate movies of the time evolution of \
the mechanism.\n\nLater I will add:\n1. the lagrangian dynamics of the \
mechanism.\n2. a way to track and handle free objects and object collisions.\n\
3. A sexy example: a whole watch.\n4. A whole hierarchy of simulation: \
Objects, each object can be a linkage. Objects are relatively free but can \
collide. This will need a tree representation of object outlines so that \
intersection can be efficiently detected.\n\nThe basic commands will be:\n\
make...Link, make...Joint, \n\
linkageEquationOfMotion[links,joints,driveConstraint]\n\
linkagePicture[links,joints]\nsolveLinkage[links,joints,eom]\n\
linkageMovie[links,joints,solution]"
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Package declarations", "Section"],

Cell[BoxData[{
    \(\(BeginPackage["\<Imtek`Kinematics`\>"];\)\[IndentingNewLine]\), "\n", 
    \(\(ComputationalKinematics::"\<usage\>" = "\<The ComputationalKinematics \
package enables the analysis of mechanism kinematics. It provides methods to \
create mechanism links (see \!\(\* StyleBox[\"makeLink\",\n\
FontSlant->\"Italic\"]\), \!\(\* StyleBox[\"makeAnchorLink\",\n\
FontSlant->\"Italic\"]\) and \!\(\* StyleBox[\"makeSliderLink\",\nFontSlant->\
\"Italic\"]\)), to join the links with a variety of constraining joints (see \
\!\(\* StyleBox[\"makeGroundJoint\",\nFontSlant->\"Italic\"]\), \!\(\* \
StyleBox[\"makeRevoluteJoint\",\nFontSlant->\"Italic\"]\) and \!\(\* \
StyleBox[\"ckPrismaticJoint\",\nFontSlant->\"Italic\"]\)), to generate \
equations of motion from the constraints in a form that is ready for NDSolve \
(see \!\(\* StyleBox[\"linkageEquationOfMotion\",\nFontSlant->\"Italic\"]\), \
and to draw movies of the linkage from the computed solution trajectories \
(see \!\(\* StyleBox[\"drawMovedLinks\",\nFontSlant->\"Italic\"]\)). \
Individual objects can be drawn in their reference configuration using \!\(\* \
StyleBox[\"drawLink\",\nFontSlant->\"Italic\"]\) and \!\(\* \
StyleBox[\"drawJoint\",\nFontSlant->\"Italic\"]\).\>";\)\)}], "Input",
  CellLabel->"In[18]:=",
  InitializationCell->True],

Cell[BoxData[{
    \(\(ckLink::"\<usage\>" = \
"\<ckLink[{{{\!\(x\_1\),\!\(y\_1\)},{\!\(x\_1\),\!\(y\_1\)},\[Ellipsis]},\!\(\
\[Theta]\_0\)},{\!\(x\&_\),\!\(y\&_\)},\!\(\* StyleBox[\"graphic\",\n\
FontSlant->\"Italic\"]\)] represents a rigid link. The local coordinate \
system of the link is centered at the center-of-gavity coordinates \
{\!\(x\&_\),\!\(y\&_\)} and initially inclined at an angle of \!\(\[Theta]\_0\
\) to the global coordinate axes. The link has two or more joints \
{{\!\(x\_1\),\!\(y\_1\)},{\!\(x\_1\),\!\(y\_1\)},\[Ellipsis]} whose \
coordinates are specified relative to the local coordinate axes. The link has \
a graphical image, also specified relative to the local coordinate axes, and \
is used to create animations of the linkage movement. Also see \
makeLink.\>";\)\), "\n", 
    \(\(ckAnchorLink::"\<usage\>" = \
"\<ckAnchorLink[{{{\!\(x\_1\),\!\(y\_1\)}},\!\(\[Theta]\_0\)},{\!\(x\&_\),\!\(\
y\&_\)},\!\(\* StyleBox[\"graphic\",\nFontSlant->\"Italic\"]\)] represents an \
anchoring point. The local coordinate system of the link is centered at the \
center-of-gavity coordinates {\!\(x\&_\),\!\(y\&_\)} and initially inclined \
at an angle of \!\(\[Theta]\_0\) to the global coordinate axes. The link only \
one joint {{\!\(x\_1\),\!\(y\_1\)}}, its coordinates are specified relative \
to the local coordinate axes. The anchor has a graphical image, also \
specified relative to the local coordinate axes, and is used to create \
animations of the linkage movement. Also see makeAnchorLink.\>";\)\), "\n", 
    \(\(ckSliderLink::"\<usage\>" = \
"\<ckSliderLink[{{{\!\(x\_1\),\!\(y\_1\)}},\!\(\[Theta]\_1\)},{\!\(x\&_\),\!\(\
y\&_\)},\!\(\* StyleBox[\"graphic\",\nFontSlant->\"Italic\"]\)] represents a \
slider that is constrained to move along a line passing through \
{\!\(x\_1\),\!\(y\_1\)} relative to {\!\(x\&_\),\!\(y\&_\)} and at an \
inclination of \!\(\[Theta]\_1\) relative to the global coordinate axes. The \
slider has a graphical image, also specified relative to the local coordinate \
axes, and is used to create animations of the linkage movement. Also see \
makeSliderLink.\>";\)\), "\n", 
    \(\(ckGearLink::"\<usage\>" = "\<ckGearLink[{{{\!\(x\_1\),\!\(y\_1\)},{r,\
\!\(N\_t\)}},\[Theta]},{x,y},\!\(\* StyleBox[\"graphic\",\n\
FontSlant->\"Italic\"]\)] represents an involute gear with its axes of \
rotation centered at {\!\(x\_1\),\!\(y\_1\)} relative to the gear's \
co-rotating coordinate system, with a meshing radius r, \!\(N\_t\) number of \
gear teeth, the whole gear being initially rotated to angle \[Theta] relative \
to the global coordinate system. The gear has a graphical image, also \
specified relative to the local coordinate axes, and is used to create \
animations of the linkage movement. Also see makeGearLink and \
makeGearJoint.\>";\)\), "\[IndentingNewLine]", 
    \(\(ckRevoluteJoint::"\<usage\>" = \
"\<ckRevoluteJoint[{{\!\(l\_i\),\!\(j\_ij\)},{\!\(l\_k\),\!\(j\_km\)}},{0,0},\
\!\(\* StyleBox[\"graphic\",\nFontSlant->\"Italic\"]\)] constrains the joints \
(\!\(j\_ij\) and \!\(j\_km\)) of two links (\!\(l\_i\) and \!\(l\_k\)) to \
coincide. The joint has a graphical image, centered at {0,0}, and is used to \
create animations of the linkage movement. Also see \
makeRevoluteJoint.\>";\)\), "\n", 
    \(\(ckGroundJoint::"\<usage\>" = \
\*"\"\<ckGroundJoint[{\!\(l\_i\),\!\(j\_ij\)},{0,0},\!\(\* \
StyleBox[\\\"graphic\\\",\\nFontSlant->\\\"Italic\\\"]\)] completely fixes \
the coordinates of joint \!\(j\_ij\) of link \!\(l\_i\). The joint has a \
graphical image, centered at {0,0}, and is used to create animations of the \
linkage movement. Also see makeGroundJoint.\>\"";\)\), "\n", 
    \(\(ckPrismaticJoint::"\<usage\>" = \*"\"\<ckPrismaticJoint[{{\\!\\(l\\_i\
\\),\\!\\(j\\_ij\\)},{\\!\\(l\\_k\\),\\!\\(j\\_km\\)}},{0,0},\\!\\(\\* \
StyleBox[\\\"graphic\\\",\\nFontSlant->\\\"Italic\\\"]\\)] constrains joint \
\!\(j\_ij\) of link \!\(l\_i\) to slide along a line on link \!\(l\_k\) at a \
fixed relative angle determined by the initial configuration of \!\(l\_i\) \
and \!\(l\_k\). The line of movement passes through  link \!\(l\_k\)'s center \
of gravity \!\(CG\_\(l\_k\)\) and joint \!\(j\_km\). The joint has a \
graphical image, centered at {0,0}, and is used to create animations of the \
linkage movement. Also see makePrismaticJoint.\>\"";\)\), \
"\[IndentingNewLine]", 
    \(\(ckGearJoint::usage = \
"\<ckGearJoint[{{\!\(l\_i\),\!\(j\_ij\)},{\!\(l\_k\),\!\(j\_km\)}},{0,0},\!\(\
\* StyleBox[\"graphic\",\nFontSlant->\"Italic\"]\)] constrains the joint \
angles (\!\(j\_ij\) and \!\(j\_km\)) of two gear links (\!\(l\_i\) and \
\!\(l\_k\)) to the ratio of their number of gear teeth. Also see \
makeGearJoint.\>";\)\)}], "Input",
  InitializationCell->True],

Cell[BoxData[{
    \(makeCustomLink::"\<usage\>" = "\<makeCustomLink[\!\(\* \
StyleBox[\"head\",\nFontSlant->\"Italic\"]\),\!\(\* StyleBox[\"joints\",\n\
FontSlant->\"Italic\"]\),\!\(\* StyleBox[\"picture\",\nFontSlant->\"Italic\"]\
\)] creates a custom-designed link. The link will be of the type specified by \
\!\(\* StyleBox[\"head\",\nFontSlant->\"Italic\"]\), and whould be one of the \
pre-defined link heads available (currently ckLink, ckSliderLink, \
ckAnchorLink), with joints as specified by the list \!\(\* \
StyleBox[\"joints\",\nFontSlant->\"Italic\"]\), and a drawing specified by \
the Graphics object \!\(\* StyleBox[\"picture\",\n\
FontSlant->\"Italic\"]\)\>"; 
    makeLink::"\<usage\>" = "\<makeLink[{{\!\(x\_1\),\!\(y\_1\)},{\!\(x\_2\),\
\!\(y\_2\)},...,{\!\(x\_n\),\!\(y\_n\)}}] creates a link object with two or \
more joints at the specified default positions. The generalized coordinates \
of the link are located at the center of gravity {\!\(x\_0\),\!\(y\_0\)} of \
the joint positions. The link object has the following structure: \
ckLink[{{{\!\(x\_1\)-\!\(x\_0\),\!\(y\_1\)-\!\(y\_0\)},{\!\(x\_2\)-\!\(x\_0\),\
\!\(y\_2\)-\!\(y\_0\)},...,{\!\(x\_n\)-\!\(x\_0\),\!\(y\_n\)-\!\(y\_0\)}},\!\(\
\[Theta]\_0\)},{\!\(x\_0\),\!\(y\_0\)},\!\(\* StyleBox[\"graphic\",\n\
FontSlant->\"Italic\"]\)], where \!\(\* StyleBox[\"graphic\",\n\
FontSlant->\"Italic\"]\) indicates a Graphics[] object that defines a picture \
of the link in its reference state.\>";\), "\n", 
    \(\(makeAnchorLink::"\<usage\>" = \
"\<makeAnchorLink[{\!\(x\_1\),\!\(y\_1\)}] creates an anchor object with its \
joint at the specified fixed position. The generalized coordinates of the \
link are also located at this position. The anchor object has the following \
structure: ckAnchorLink[{{{0,0}},0},{\!\(x\_1\),\!\(y\_1\)},\!\(\* \
StyleBox[\"graphic\",\nFontSlant->\"Italic\"]\)], where \!\(\* \
StyleBox[\"graphic\",\nFontSlant->\"Italic\"]\) indicates a Graphics[] object \
that defines a picture of the anchor.\>";\)\), "\n", 
    \(\(makeSliderLink::"\<usage\>" = \
"\<makeSliderLink[{\!\(x\_1\),\!\(y\_1\)},\!\(\[Theta]\_1\)] creates a slider \
object with its joint at the specified default position and a sliding surface \
at the specified angle to the horizontal. The generalized coordinates of the \
link are also located at this position. The slider object has the following \
structure: \
ckSliderLink[{{{0,0}},\!\(\[Theta]\_1\)},{\!\(x\_1\),\!\(y\_1\)},\!\(\* \
StyleBox[\"graphic\",\nFontSlant->\"Italic\"]\)], where \!\(\* \
StyleBox[\"graphic\",\nFontSlant->\"Italic\"]\) indicates a Graphics[] object \
that defines a picture of the slider.\>";\)\), "\n", 
    \(\(makeGearLink::"\<usage\>" = "\<makeGearLink[\!\(\* \
StyleBox[\"origin\",\nFontSlant->\"Italic\"]\),\!\(\* StyleBox[\"radius\",\n\
FontSlant->\"Italic\"]\),\!\(\* StyleBox[\"toothDepth\",\nFontSlant->\"Italic\
\"]\)] creates an involute gear centered at the origin with the specified \
meshing radius the depth of the gear teeth. Together, these parameters \
determine the number of teeth. makeGearLink[\!\(\* StyleBox[\"origin\",\n\
FontSlant->\"Italic\"]\),\!\(\* StyleBox[\"radius\",\n\
FontSlant->\"Italic\"]\),\!\(\* StyleBox[\"toothDepth\",\nFontSlant->\"Italic\
\"]\),\!\(\* StyleBox[\"angle\",\nFontSlant->\"Italic\"]\)] causes the gear \
to be rotated by the specified angle. See \!\(\* StyleBox[\"makeGearJoint\",\n\
FontSlant->\"Italic\"]\).\>";\)\), "\n", 
    \(\(makeGroundJoint::"\<usage\>" = \
"\<makeGroundJoint[{\!\(l\_i\),\!\(j\_ij\)},\!\(\* StyleBox[\"links\",\n\
FontSlant->\"Italic\"]\)] completely fixes the joint \!\(j\_ij\) of the link \
\!\(l\_i\), where \!\(l\_i\)<Length[links] is an integer that refers to an \
entry in the list of links, and \!\(j\_ij\) is an integer that refers to the \
j'th joint of link \!\(l\_i\).\>";\)\)}], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(makeRevoluteJoint::"\<usage\>" = "\<makeRevoluteJoint[{{\!\(l\_i\),\!\
\(j\_ij\)},{\!\(l\_k\),\!\(j\_km\)}},\!\(\* StyleBox[\"links\",\n\
FontSlant->\"Italic\"]\)] constraints the joint of \!\(j\_ij\) link \
\!\(l\_i\) to be coincident with the joint \!\(j\_km\) of \!\(l\_k\), without \
restricting the rotational degree of freedom of the joint. Note that \!\(l\_i\
\)<Length[links] and \!\(l\_k\)<Length[links] are integers that refer to \
entries in the list of links, and \!\(j\_ij\) and \!\(j\_km\) are integers \
that refer to the j'th joint of link \!\(l\_i\) and the m'th joint of link \!\
\(l\_k\).\>";\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(makePrismaticJoint::"\<usage\>" = \
\*"\"\<makePrismaticJoint[{{\!\(l\_i\),\!\(j\_im\),\!\(j\_ip\)},{\!\(l\_k\),\!\
\(j\_kn\),\!\(j\_kq\))}},\\!\\(\\* \
StyleBox[\\\"links\\\",\\nFontSlant->\\\"Italic\\\"]\\)] constraints the \
joint m of link i to remain parallel to the line joining joints m and p and \
to move parallel to the line joining the joint n of link k with joint q, \
thereby restricting the rotational degree of freedom of the joint as well. \
Note that \!\(l\_i\)<Length[links] and \!\(l\_k\)<Length[links] are integers \
that refer to entries in the list of links, and \!\(j\_im\),\!\(j\_ip\),\!\(j\
\_kn\) and \!\(j\_kq\) are integers that refer to the m'th and p'th joint of \
link i and the n'th and q'th joint of link k.\>\"";\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(makeGearJoint::"\<usage\>" = \
"\<makeGearJoint[{{\!\(l\_i\),\!\(j\_ij\)},{\!\(l\_k\),\!\(j\_km\)}},\!\(\* \
StyleBox[\"links\",\nFontSlant->\"Italic\"]\)] constrains the angle of the \
center joint \!\(j\_ij\) of gear link \!\(l\_i\) to be coincident with the \
angle of the center joint \!\(j\_km\) of the gear link \!\(l\_k\) via the \
respective gear's gear tooth ratios, i.e., the links referred to must be of \
type ckGearLink. Note that \!\(l\_i\)<Length[links] and \
\!\(l\_k\)<Length[links] are integers that refer to entries in the list of \
links, and \!\(j\_ij\) and \!\(j\_km\) are integers that refer to the j'th \
joint of link \!\(l\_i\) and the m'th joint of link \!\(l\_k\).\>";\)\)], \
"Input",
  InitializationCell->True],

Cell[BoxData[{
    \(drawLink::"\<usage\>" = "\<drawLink[\!\(\* StyleBox[\"link\",\n\
FontSlant->\"Italic\"]\)] returns a Graphics[] object that represents the \
\!\(\* StyleBox[\"link\",\nFontSlant->\"Italic\"]\) in its reference \
configuration.\n drawLink[\!\(\* StyleBox[\"link\",\n\
FontSlant->\"Italic\"]\),{x,y,\[Theta]}] returns a Graphics[] object that \
represents the \!\(\* StyleBox[\"link\",\nFontSlant->\"Italic\"]\) \
transformed from its reference configuration to the absolute position {x,y} \
and rotated by the angle \[Theta].\>"; \), "\n", 
    \(drawJoint::"\<usage\>" = "\<drawJoint[\!\(\* StyleBox[\"joint\",\n\
FontSlant->\"Italic\"]\)] returns a Graphics[] object that represents the \
\!\(\* StyleBox[\"joint\",\nFontSlant->\"Italic\"]\) in its reference \
configuration.\n drawJoint[\!\(\* StyleBox[\"joint\",\nFontSlant->\"Italic\"]\
\),{x,y,\[Theta]}] returns a Graphics[] object that represents the \!\(\* \
StyleBox[\"joint\",\nFontSlant->\"Italic\"]\) transformed from its reference \
configuration to the absolute position {x,y} and rotated by the angle \
\[Theta].\>"; \), "\n", 
    \(transformGraphicsObject::"\<usage\>" = \
"\<transformGraphicsObject[\!\(\* StyleBox[\"object\",\n\
FontSlant->\"Italic\"]\),{x,y,\[Theta]}] produces a new object moved to \
position {x,y} and rotated by the angle \[Theta]. Works for most Graphics \
primitives.\>"; \), "\n", 
    \(linkageEquationOfMotion::"\<usage\>" = \
"\<linkageEquationOfMotion[\!\(\* StyleBox[\"links\",\nFontSlant->\"Italic\"]\
\),\!\(\* StyleBox[\"joints\",\nFontSlant->\"Italic\"]\),\!\(C\_d\)] creates \
a first-order set of ODEs based on the list of links and their joints (which \
define the intrinsic mechanism constraint equations) together with the list \
of driving constraints \!\(C\_d\). Each link has 3 degrees-of-freedom {\!\(Rx\
\_i\),\!\(Ry\_i\).\!\(\[Theta]\_i\)}, making 3*Length[\!\(\* StyleBox[\"links\
\",\nFontSlant->\"Italic\"]\)] DOFs in all, and care must be taken that there \
are as many constraint equations as there are DOFs. The joints generate some \
of the constraints, and the \!\(C\_d\) should provide the rest. The function \
returns the first two arguments of the NDSolve function, i.e., the list of \
ODEs and the list of variables.\n\n A typical usage is:\n \
NDSolve@@Join[linkageEquationOfMotion[links,joints,\!\(C\_d\)],{{t,0,1}}].\>";\
 \), "\n", 
    \(drawMovedLinks::"\<usage\>" = "\<drawMovedLinks[\!\(\* StyleBox[\"links\
\",\nFontSlant->\"Italic\"]\),\!\(\* StyleBox[\"solutionRules\",\nFontSlant->\
\"Italic\"]\)] generates a picture of the complete linkage defined by the \
list of \!\(\* StyleBox[\"links\",\nFontSlant->\"Italic\"]\) based on a \
solution vector of rules \!\(\* StyleBox[\"solutionRules\",\n\
FontSlant->\"Italic\"]\) (the typical output of NDSolve).\n\n It can be used \
to generate a movie as follows:\n Table[Show[drawMovedLinks[\!\(\* \
StyleBox[\"links\",\nFontSlant->\"Italic\"]\),\!\(\* StyleBox[\"solutionRules\
\",\nFontSlant->\"Italic\"]\)]],{t,0,1-.025,.025}].\>"; \)}], "Input",
  InitializationCell->True],

Cell[BoxData[{
    \(\(makeLinkVariables::"\<usage\>" = "\<makeLinkVariables[\!\(\* \
StyleBox[\"link\",\nFontSlant->\"Italic\"]\),{i}] creates the global DOF \
variables {\!\(Rx\_i\)[t],\!\(Ry\_i\)[t],\!\(\[Theta]\_i\)[t]}. It is \
intended to be index mapped to a list of links to generate the global list of \
DOFs.\>";\)\), "\n", 
    \(\(makeLinkJointEquation::"\<usage\>" = "\<makeLinkJointEquation[\!\(\* \
StyleBox[\"l\",\nFontSlant->\"Italic\"]\),\!\(\* StyleBox[\(j\_l\),\n\
FontSlant->\"Italic\"]\),\!\(\* StyleBox[\"links\",\n\
FontSlant->\"Italic\"]\)] creates the constraint equation for a link l's \
joint \!\(\* StyleBox[\(j\_l\),\nFontSlant->\"Italic\"]\), given the list of \
\!\(\* StyleBox[\"links\",\nFontSlant->\"Italic\"]\).\>";\)\)}], "Input",
  InitializationCell->True],

Cell[BoxData[{
    \(\(Begin["\<`Private`\>"];\)\), "\n", 
    \(<< DiscreteMath`ComputationalGeometry`\), "\n", 
    \(<< Geometry`Rotations`\), "\[IndentingNewLine]", 
    \(Needs["\<Imtek`VectorAngles`\>"]\), "\[IndentingNewLine]", 
    \(\(Off[ParametricPlot::"\<ppcom\>"];\)\)}], "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Package Functions", "Section"],

Cell[CellGroupData[{

Cell["Link creators", "Subsection"],

Cell[BoxData[{
    \(\(makeCustomLink[theHead_, theJoints_List, theGraphic_Graphics] := 
        makeCustomLink[theHead, theJoints, 
          N[Plus @@ theJoints\/Length[theJoints]], 
          theGraphic];\)\), "\[IndentingNewLine]", 
    \(\(makeCustomLink[theHead_, theJoints_List, cg_List, 
          theGraphic_Graphics] := 
        Module[{nj = 
                Length[theJoints]}, \[IndentingNewLine]If[\(! \
MemberQ[{ckLink, ckAnchorLink, ckSliderLink, ckGearLink}, 
                  theHead]\), \[IndentingNewLine]Print["\<Error: unknown link \
type\>"]; \[IndentingNewLine]Return[
                Null]\[IndentingNewLine]]; \[IndentingNewLine]Switch[
              theHead, \[IndentingNewLine]ckLink, \[IndentingNewLine]If[
                nj < 2, \[IndentingNewLine]Print["\<Error: too few joints for \
a ckLink[].\>"]; \[IndentingNewLine]Return[
                  Null]\[IndentingNewLine]]; \[IndentingNewLine]Return[
                ckLink[{\(\((# - cg)\) &\) /@ theJoints, 0}, cg, 
                  theGraphic]], \
\[IndentingNewLine]\[IndentingNewLine]ckAnchorLink, \[IndentingNewLine]If[
                nj \[NotEqual] 
                  1, \[IndentingNewLine]Print["\<Error: too many joints for a \
ckAnchorLink[].\>"]; \[IndentingNewLine]Return[
                  Null]\[IndentingNewLine]]; \[IndentingNewLine]cg = 
                theJoints\[LeftDoubleBracket]1\[RightDoubleBracket]; \
\[IndentingNewLine]Return[
                ckAnchorLink[{\(\((# - cg)\) &\) /@ theJoints, 0}, cg, 
                  theGraphic]], \
\[IndentingNewLine]\[IndentingNewLine]ckSliderLink, \[IndentingNewLine]If[
                nj \[NotEqual] 
                  1, \[IndentingNewLine]Print["\<Error: too many joints for a \
ckSliderLink[].\>"]; \[IndentingNewLine]Return[
                  Null]\[IndentingNewLine]]; \[IndentingNewLine]cg = 
                theJoints\[LeftDoubleBracket]1\[RightDoubleBracket]; \
\[IndentingNewLine]Return[
                ckSliderLink[{\(\((# - cg)\) &\) /@ theJoints, 0}, cg, 
                  theGraphic]], \
\[IndentingNewLine]\[IndentingNewLine]ckGearLink, \[IndentingNewLine]If[
                nj \[NotEqual] 
                  1, \[IndentingNewLine]Print["\<Error: too many joints for a \
ckGearLink[].\>"]; \[IndentingNewLine]Return[
                  Null]\[IndentingNewLine]]; \[IndentingNewLine]cg = 
                theJoints\[LeftDoubleBracket]1\[RightDoubleBracket]; \
\[IndentingNewLine]Return[
                ckGearLink[{\(\((# - cg)\) &\) /@ theJoints, 0}, cg, 
                  theGraphic]]\[IndentingNewLine]]\[IndentingNewLine]] /; 
          Depth[theJoints] \[Equal] 3;\)\)}], "Input",
  CellLabel->"In[573]:=",
  InitializationCell->True],

Cell[BoxData[{
    \(\(makeLink[joints_List] := 
        Module[{hullPoints, hullLines, edgeShifts, edgeAngles, cornerAngles, 
            lineGraphics, curveGraphics, cg, cgGraphics, \[Theta]}, 
          If[Length[joints] \[NotEqual] Length[Union[joints]], 
            Print["\<Error: coincident joints\>"]; Return[Null]]; 
          hullPoints = 
            joints\[LeftDoubleBracket]ConvexHull[
                joints]\[RightDoubleBracket]; 
          cg = N[Plus @@ hullPoints\/Length[hullPoints]]; \
\[IndentingNewLine]hullPoints = \(\((# - cg)\) &\) /@ 
              hullPoints; \[IndentingNewLine]hullLines = 
            Transpose[{hullPoints, RotateLeft[hullPoints]}]; 
          edgeShifts = \((0.1\ unitRightVector[#1\[LeftDoubleBracket]2\
\[RightDoubleBracket] - #1\[LeftDoubleBracket]1\[RightDoubleBracket]] &)\) /@ 
              hullLines; 
          edgeAngles = \((vectorAngle[#1\[LeftDoubleBracket]2\
\[RightDoubleBracket] - #1\[LeftDoubleBracket]1\[RightDoubleBracket]] &)\) /@ 
              hullLines; \[IndentingNewLine]cornerAngles = 
            RotateRight[\(filterAngles[\(-\((# + \[Pi]/2)\)\)] &\) /@ 
                Transpose[{edgeAngles, 
                    RotateLeft[
                      edgeAngles]}]]; \
\[IndentingNewLine]\[IndentingNewLine]curveGraphics = {\((Circle @@ #1 &)\) /@ 
                Transpose[{hullPoints, Table[0.1, {Length[hullPoints]}], 
                    cornerAngles}]}; 
          lineGraphics = \((Line[#1] &)\) /@ \((hullLines + 
                  Transpose[{edgeShifts, edgeShifts}])\); 
          cgGraphics = {Line[{{\(- .05\), 0. }, { .05, 0. }}], 
              Line[{{0. , \(- .05\)}, {0. ,  .05}}]}; \[Theta] = 
            vectorAngle[
              joints\[LeftDoubleBracket]\(-1\)\[RightDoubleBracket] - cg]; 
          ckLink[Join[{\((#1 - cg &)\) /@ joints}, {0}], cg, 
            Graphics[{curveGraphics, 
                lineGraphics, \((\((Circle[#1,  .05] &)\) /@ \((\(\((# - 
                              cg)\) &\) /@ joints)\))\), 
                cgGraphics}]]];\)\n\), "\[IndentingNewLine]", 
    \(\(makeAnchorLink[{x_, y_}] := 
        Module[{}, 
          ckAnchorLink[{{{0, 0}}, 0}, {x, y}, 
            Graphics[{Circle[{0, 0},  .05], Circle[{0, 0}, 0.1, {0, \[Pi]}], 
                Line[{{\(-0.1\), 
                      0}, {\(-0.1\), \(- .15\)}, {0.1, \(- .15\)}, {0.1, 
                      0}}], Polygon[{{\(-0.1\), \(- .15\)}, {\(-0.1\), \(- .2\
\)}, {0.1, \(- .2\)}, {0.1, \(- .15\)}}]}]]];\)\n\), "\[IndentingNewLine]", 
    \(\(makeSliderLink[{x_, y_}, \[Theta]_] := 
        Module[{Q}, Q = RotationMatrix2D[N[\[Theta]]]; 
          ckSliderLink[{{{0, 0}}, \[Theta]}, {x, y}, 
            Graphics[{Circle[{0, 0},  .05], 
                Line[\(\((Q . #)\) &\) /@ {{0 - 0.1, 0 - 0.1}, {0 + 0.1, 
                        0 - 0.1}, {0 + 0.1, 0 + 0.1}, {0 - 0.1, 
                        0 + 0.1}, {0 - 0.1, 0 - 0.1}}], 
                Polygon[\(\((Q . #)\) &\) /@ {{0 -  .3, 0 -  .11}, {0 -  .3, 
                        0 -  .2}, {0 +  .3, 0 -  .2}, {0 +  .3, 
                        0 -  .11}, {0 -  .3, 
                        0 -  .11}}]}]]];\)\[IndentingNewLine]\), "\
\[IndentingNewLine]", 
    \(\(makeGearLink[{x_, y_}, radius_, toothDepth_] := 
        makeGearLink[{x, y}, radius, toothDepth, 
          0];\)\), "\[IndentingNewLine]", 
    \(\(makeGearLink[{x_, y_}, radius_, toothDepth_, \[Theta]_] := 
        Module[{nTeeth, r0, r1}, \[IndentingNewLine]r0 = 
            radius - toothDepth/2; \[IndentingNewLine]r1 = 
            radius + toothDepth/2; \[IndentingNewLine]nTeeth = 
            maxTeeth[r0, r1]; 
          ckGearLink[{{{0, 0}, {radius, nTeeth}}, 0}, {x, 
              y}, \[IndentingNewLine]drawGear[r0, r1, 
              nTeeth, \[Theta]]]\[IndentingNewLine]];\)\)}], "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Joint creators", "Subsection"],

Cell[BoxData[{
    \(\(\(makeGroundJoint[{linkNumber_Integer, linkJointNumber_Integer}, 
          links_List] := 
        Module[{pos, l}, \[IndentingNewLine]l = 
            links\[LeftDoubleBracket]
              linkNumber\[RightDoubleBracket]; \[IndentingNewLine]If[
            Length[l\[LeftDoubleBracket]1, 1\[RightDoubleBracket]] < 
              linkJointNumber - 
                1, \[IndentingNewLine]Print["\<Error: link \>", 
              l, "\< has too few joints.\>"]; \[IndentingNewLine]Return[
              Null]\[IndentingNewLine]]; \[IndentingNewLine]pos = 
            l\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket] + 
              RotationMatrix2D[\(-l\[LeftDoubleBracket]1, \(-1\)\
\[RightDoubleBracket]\)] . 
                l\[LeftDoubleBracket]1, 1, 
                  linkJointNumber\[RightDoubleBracket]; \
\[IndentingNewLine]ckGroundJoint[{linkNumber, linkJointNumber}, pos, 
            Graphics[{GrayLevel[ .5], Disk[pos,  .05], GrayLevel[0], 
                Circle[pos,  .05], GrayLevel[ .5], 
                Polygon[{pos, pos + { .2, 0}, pos + { .2, 0}, 
                    pos + { .2, \(- .1\)}, pos + {\(- .2\), \(- .1\)}, 
                    pos + {\(- .2\), 0}, pos}], GrayLevel[0], 
                Line[{pos + { .05, 0}, pos + { .2, 0}, pos + { .2, 0}, 
                    pos + { .2, \(- .1\)}, pos + {\(- .2\), \(- .1\)}, 
                    pos + {\(- .2\), 0}, 
                    pos + {\(- .05\), 0}}]}]]\[IndentingNewLine]];\)\(\n\)
    \)\), "\[IndentingNewLine]", 
    \(\(\(makeRevoluteJoint[{{linkNumber1_Integer, 
              linkJointNumber1_Integer}, {linkNumber2_Integer, 
              linkJointNumber2_Integer}}, links_List] := 
        Module[{pos, l1, l2}, \[IndentingNewLine]l1 = 
            links\[LeftDoubleBracket]
              linkNumber1\[RightDoubleBracket]; \[IndentingNewLine]l2 = 
            links\[LeftDoubleBracket]
              linkNumber2\[RightDoubleBracket]; \[IndentingNewLine]If[
            Length[l1\[LeftDoubleBracket]1, 1\[RightDoubleBracket]] < 
              linkJointNumber1 - 
                1, \[IndentingNewLine]Print["\<Error: link \>", 
              l1, "\< has too few joints.\>"]; \[IndentingNewLine]Return[
              Null]\[IndentingNewLine]]; \[IndentingNewLine]If[
            Length[l2\[LeftDoubleBracket]1, 1\[RightDoubleBracket]] < 
              linkJointNumber2 - 
                1, \[IndentingNewLine]Print["\<Error: link \>", 
              l2, "\< has too few joints.\>"]; \[IndentingNewLine]Return[
              Null]\[IndentingNewLine]]; \[IndentingNewLine]pos = 
            l1\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket] + 
              l1\[LeftDoubleBracket]1, 1, 
                linkJointNumber1\[RightDoubleBracket]; \
\[IndentingNewLine]ckRevoluteJoint[{{linkNumber1, 
                linkJointNumber1}, {linkNumber2, linkJointNumber2}}, pos, 
            Graphics[{GrayLevel[ .5], Disk[{0, 0},  .05], GrayLevel[0], 
                Circle[{0, 
                    0},  .05]}]]\[IndentingNewLine]];\)\(\[IndentingNewLine]\)\

    \)\), "\n", 
    \(\(\(makePrismaticJoint[{{linkNumber1_Integer, 
              linkJointNumber11_Integer, 
              linkJointNumber12_Integer}, {linkNumber2_Integer, 
              linkJointNumber21_Integer, linkJointNumber22_Integer}}, 
          links_List] := 
        Module[{pos, l1, l2, \[Theta]}, \[IndentingNewLine]l1 = 
            links\[LeftDoubleBracket]linkNumber1\[RightDoubleBracket]; \
\[IndentingNewLine]l2 = 
            links\[LeftDoubleBracket]linkNumber2\[RightDoubleBracket]; \
\[IndentingNewLine]If[
            Length[l1\[LeftDoubleBracket]1, 1\[RightDoubleBracket]] < 
              linkJointNumber11 - 
                1, \[IndentingNewLine]Print["\<Error: link \>", 
              l1, "\< has too few joints.\>"]; \[IndentingNewLine]Return[
              Null]\[IndentingNewLine]]; \[IndentingNewLine]If[
            Length[l1\[LeftDoubleBracket]1, 1\[RightDoubleBracket]] < 
              linkJointNumber12 - 
                1, \[IndentingNewLine]Print["\<Error: link \>", 
              l1, "\< has too few joints.\>"]; \[IndentingNewLine]Return[
              Null]\[IndentingNewLine]]; \[IndentingNewLine]If[
            Length[l2\[LeftDoubleBracket]1, 1\[RightDoubleBracket]] < 
              linkJointNumber21 - 
                1, \[IndentingNewLine]Print["\<Error: link \>", 
              l2, "\< has too few joints.\>"]; \[IndentingNewLine]Return[
              Null]\[IndentingNewLine]]; \[IndentingNewLine]If[
            Length[l2\[LeftDoubleBracket]1, 1\[RightDoubleBracket]] < 
              linkJointNumber22 - 
                1, \[IndentingNewLine]Print["\<Error: link \>", 
              l2, "\< has too few joints.\>"]; \[IndentingNewLine]Return[
              Null]\[IndentingNewLine]]; \[IndentingNewLine]pos = 
            l1\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket] + 
              
              RotationMatrix2D[\[Theta] = \(-l1\[LeftDoubleBracket]1, \(-1\)\
\[RightDoubleBracket]\)] . 
                l1\[LeftDoubleBracket]1, 1, 
                  linkJointNumber11\[RightDoubleBracket]; \
\[IndentingNewLine]ckPrismaticJoint[{{linkNumber1, linkJointNumber11, 
                linkJointNumber12}, {linkNumber2, linkJointNumber21, 
                linkJointNumber22}}, pos, 
            Graphics[{GrayLevel[ .5], 
                Polygon[\(\((RotationMatrix2D[\(-\[Theta]\)] . #)\) &\) /@ \
{{0,  .05}, {\(- .15\),  .05}, {\(- .15\), \(- .05\)}, {\(- .05\), \(- \
.05\)}, {\(- .05\), \(- .15\)}, { .05, \(- .15\)}, { .05, \(- .05\)}, { .15, \
\(- .05\)}, { .15,  .05}, {0,  .05}}], GrayLevel[0], 
                Line[\(\((RotationMatrix2D[\(-\[Theta]\)] . #)\) &\) /@ {{0,  \
.05}, {\(- .15\),  .05}, {\(- .15\), \(- .05\)}, {\(- .05\), \(- .05\)}, {\(- \
.05\), \(- .15\)}, { .05, \(- .15\)}, { .05, \(- .05\)}, { .15, \(- .05\)}, { \
.15,  .05}, {0,  .05}}]}]]\[IndentingNewLine]];\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(makeGearJoint[{{linkNumber1_Integer, 
              linkJointNumber1_Integer}, {linkNumber2_Integer, 
              linkJointNumber2_Integer}}, links_List] := 
        Module[{l1, l2}, \[IndentingNewLine]l1 = 
            links\[LeftDoubleBracket]linkNumber1\[RightDoubleBracket]; \
\[IndentingNewLine]l2 = 
            links\[LeftDoubleBracket]linkNumber2\[RightDoubleBracket]; \
\[IndentingNewLine]If[
            Head[l1] =!= ckGearLink || 
              Head[l2] =!= 
                ckGearLink, \[IndentingNewLine]Print["\<Error: links must \
both be gears.\>"]; \[IndentingNewLine]Return[
              Null]\[IndentingNewLine]]; \
\[IndentingNewLine]ckGearJoint[{{linkNumber1, 
                linkJointNumber1}, {linkNumber2, linkJointNumber2}}, 
            l1\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket] + \((l1\
\[LeftDoubleBracket]1, 1, 2\[RightDoubleBracket]\/\(l1\[LeftDoubleBracket]1, \
1, 2\[RightDoubleBracket] + l2\[LeftDoubleBracket]1, 1, \
2\[RightDoubleBracket]\))\) \((l2\[LeftDoubleBracket]\(-2\)\
\[RightDoubleBracket] - l1\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket])\), 
            Graphics[GrayLevel[ .5], 
              Disk[{0, 0},  .05]]]\[IndentingNewLine]];\)\)}], "Input",
  CellLabel->"In[826]:=",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Link & Joint drawing utilities", "Subsection"],

Cell[BoxData[{\(drawLink[
          link_ckLink] := \(transformGraphicsObject[#, {0, 0, 0}, 
              Join[link\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket], {0}]] \
&\) /@ link\[LeftDoubleBracket]\(-1\)\[RightDoubleBracket];\), "\
\[IndentingNewLine]", \(drawLink[
          link_ckAnchorLink] := \(transformGraphicsObject[#, {0, 0, 0}, 
              Join[link\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket], {0}]] \
&\) /@ link\[LeftDoubleBracket]\(-1\)\[RightDoubleBracket];\), "\
\[IndentingNewLine]", \(drawLink[
          link_ckSliderLink] := \(transformGraphicsObject[#, {0, 0, 0}, 
              Join[link\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket], {0}]] \
&\) /@ link\[LeftDoubleBracket]\(-1\)\[RightDoubleBracket];\), "\
\[IndentingNewLine]", 
    RowBox[{\(drawLink[
            link_ckGearLink] := \(transformGraphicsObject[#, {0, 0, 0}, 
                Join[link\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket], \
{0}]] &\) /@ link\[LeftDoubleBracket]\(-1\)\[RightDoubleBracket];\), 
      "\[IndentingNewLine]"}], "\[IndentingNewLine]", \(drawJoint[
          joint_ckGroundJoint] := \(transformGraphicsObject[#, {0, 0, 0}, 
              Join[joint\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket], \
{0}]] &\) /@ 
          joint\[LeftDoubleBracket]\(-1\)\[RightDoubleBracket];\), "\
\[IndentingNewLine]", \(drawJoint[
          joint_ckRevoluteJoint] := \(transformGraphicsObject[#, {0, 0, 0}, 
              Join[joint\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket], \
{0}]] &\) /@ 
          joint\[LeftDoubleBracket]\(-1\)\[RightDoubleBracket];\), "\
\[IndentingNewLine]", \(drawJoint[
          joint_ckPrismaticJoint] := \(transformGraphicsObject[#, {0, 0, 0}, 
              Join[joint\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket], \
{0}]] &\) /@ 
          joint\[LeftDoubleBracket]\(-1\)\[RightDoubleBracket];\), "\
\[IndentingNewLine]", 
    RowBox[{\(drawJoint[
            joint_ckGearJoint] := \(transformGraphicsObject[#, {0, 0, 0}, 
                Join[joint\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket], \
{0}]] &\) /@ joint\[LeftDoubleBracket]\(-1\)\[RightDoubleBracket];\), 
      "\[IndentingNewLine]"}], "\[IndentingNewLine]", \
\(transformGraphicsObject[
          Disk[{xc_, yc_}, radius_], {x0_, y0_, \[Theta]0_}, {x_, 
            y_, \[Theta]_}] := 
        Module[{}, 
          Disk[RotationMatrix2D[\[Theta]] . {xc, yc} + {x, y}, 
            radius]];\), "\[IndentingNewLine]", \(transformGraphicsObject[
          Circle[{xc_, yc_}, radius_], {x0_, y0_, \[Theta]0_}, {x_, 
            y_, \[Theta]_}] := 
        Module[{}, 
          Circle[RotationMatrix2D[\[Theta]] . {xc, yc} + {x, y}, 
            radius]];\), "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{\(transformGraphicsObject[
          Circle[{xc_, yc_}, radius_, {\[Theta]1_, \[Theta]2_}], {x0_, 
            y0_, \[Theta]0_}, {x_, y_, \[Theta]_}]\), ":=", 
        RowBox[{"Module", "[", 
          RowBox[{\({}\), ",", 
            RowBox[{"Circle", "[", 
              
              RowBox[{\(RotationMatrix2D[\[Theta]] . {xc, yc} + {x, y}\), ",",
                 "radius", ",", 
                RowBox[{"filterAngles", "[", 
                  RowBox[{"{", 
                    RowBox[{\(\[Theta]1 - \[Theta]\), ",", 
                      RowBox[{"\[Theta]2", 
                        StyleBox["-",
                          FontSize->10], "\[Theta]"}]}], "}"}], "]"}]}], 
              "]"}]}], "]"}]}], 
      ";"}], "\[IndentingNewLine]", \(transformGraphicsObject[
          Line[pts_], {x0_, y0_, \[Theta]0_}, {x_, y_, \[Theta]_}] := 
        Module[{dx, dy, Q}, \[IndentingNewLine]Q = 
            RotationMatrix2D[\[Theta]]; \[IndentingNewLine]Line[\(\((Q . \
\((#)\) + {x, y})\) &\) /@ 
              pts]\[IndentingNewLine]];\), "\[IndentingNewLine]", \
\(transformGraphicsObject[
          Polygon[pts_], {x0_, y0_, \[Theta]0_}, {x_, y_, \[Theta]_}] := 
        Module[{Q}, \[IndentingNewLine]Q = 
            RotationMatrix2D[\[Theta]]; \[IndentingNewLine]Polygon[\(\((Q . \
\((#)\) + {x, y})\) &\) /@ 
              pts]\[IndentingNewLine]];\), "\[IndentingNewLine]", \
\(transformGraphicsObject[
          o_GrayLevel, {x0_, y0_, \[Theta]0_}, {x_, y_, \[Theta]_}] := 
        o;\), "\[IndentingNewLine]", \(transformGraphicsObject[
          o_Hue, {x0_, y0_, \[Theta]0_}, {x_, y_, \[Theta]_}] := 
        o;\), "\[IndentingNewLine]", \(transformGraphicsObject[
          o_RGBColor, {x0_, y0_, \[Theta]0_}, {x_, y_, \[Theta]_}] := 
        o;\), "\[IndentingNewLine]", \(transformGraphicsObject[
          o_CMYKColor, {x0_, y0_, \[Theta]0_}, {x_, y_, \[Theta]_}] := 
        o;\), "\[IndentingNewLine]", \(transformGraphicsObject[
          o_Thickness, {x0_, y0_, \[Theta]0_}, {x_, y_, \[Theta]_}] := 
        o;\), "\[IndentingNewLine]", \(transformGraphicsObject[
          o_PointSize, {x0_, y0_, \[Theta]0_}, {x_, y_, \[Theta]_}] := 
        o;\), "\[IndentingNewLine]", \(transformGraphicsObject[
          o_Dashing, {x0_, y0_, \[Theta]0_}, {x_, y_, \[Theta]_}] := 
        o;\), "\[IndentingNewLine]", \(transformGraphicsObject[
          o_AbsoluteThickness, {x0_, y0_, \[Theta]0_}, {x_, y_, \[Theta]_}] := 
        o;\), "\[IndentingNewLine]", \(transformGraphicsObject[
          o_AbsolutePointSize, {x0_, y0_, \[Theta]0_}, {x_, y_, \[Theta]_}] := 
        o;\), "\[IndentingNewLine]", \(transformGraphicsObject[
          o_AbsoluteDashing, {x0_, y0_, \[Theta]0_}, {x_, y_, \[Theta]_}] := 
        o;\), "\[IndentingNewLine]", 
    RowBox[{\(transformGraphicsObject[
            o_List, {x0_, y0_, \[Theta]0_}, {x_, 
              y_, \[Theta]_}] := \(transformGraphicsObject[#, {x0, 
                  y0, \[Theta]0}, {x, y, \[Theta]}] &\) /@ o;\), 
      "\[IndentingNewLine]"}], "\[IndentingNewLine]", \(drawLink[
          link_ckLink, {x_, y_, \[Theta]_}] := 
        Module[{}, \[IndentingNewLine]\(\((transformGraphicsObject[#, 
                  Join[link\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket], \
{link\[LeftDoubleBracket]1, 2\[RightDoubleBracket]}], {x, 
                    y, \[Theta]}])\) &\) /@ 
            link\[LeftDoubleBracket]\(-1\)\[RightDoubleBracket]\
\[IndentingNewLine]];\), "\[IndentingNewLine]", \(drawLink[
          link_ckAnchorLink, {x_, y_, \[Theta]_}] := 
        Module[{}, \[IndentingNewLine]\(\((transformGraphicsObject[#, 
                  Join[link\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket], \
{link\[LeftDoubleBracket]1, 2\[RightDoubleBracket]}], {x, 
                    y, \[Theta]}])\) &\) /@ 
            link\[LeftDoubleBracket]\(-1\)\[RightDoubleBracket]\
\[IndentingNewLine]];\), "\[IndentingNewLine]", \(drawLink[
          link_ckSliderLink, {x_, y_, \[Theta]_}] := 
        Module[{}, \[IndentingNewLine]\(\((transformGraphicsObject[#, 
                  Join[link\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket], \
{link\[LeftDoubleBracket]1, 2\[RightDoubleBracket]}], {x, 
                    y, \[Theta]}])\) &\) /@ 
            link\[LeftDoubleBracket]\(-1\)\[RightDoubleBracket]\
\[IndentingNewLine]];\), "\[IndentingNewLine]", \(drawLink[
          link_ckGearLink, {x_, y_, \[Theta]_}] := 
        Module[{}, \[IndentingNewLine]\(\((transformGraphicsObject[#, 
                  Join[link\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket], \
{link\[LeftDoubleBracket]1, 2\[RightDoubleBracket]}], {x, 
                    y, \[Theta]}])\) &\) /@ 
            link\[LeftDoubleBracket]\(-1\)\[RightDoubleBracket]\
\[IndentingNewLine]];\)}], "Input",
  CellLabel->"In[71]:=",
  InitializationCell->True],

Cell[BoxData[
    \(\(drawMovedLinks[links_List, sol_List] := 
        Module[{}, \[IndentingNewLine]Map[drawLink @@ # &, 
            Transpose[{links, 
                Table[{Global`Rx\_i[Global`t], Global`Ry\_i[Global`t], 
                      Mod[Global`\[Theta]\_i[Global`t], 2  \[Pi]]} /. 
                    Flatten[sol], {i, 1, Length[links]}]}], 
            1]\[IndentingNewLine]];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[{
    \(\(maxTeeth[r0_, r1_] := 
        IntegerPart[\(\[Pi] \((r0 + r1)\)\)\/\(2 \((r1 - r0)\)\)];\)\), "\
\[IndentingNewLine]", 
    \(\(flankAngle[r0_, r1_] := 
        Module[{flankTip}, \[IndentingNewLine]flankTip = 
            RotationMatrix2D[\@\(\((r1\/r0)\)\^2 - 1. \)] . {r0, 
                  0} + \[IndentingNewLine]RotationMatrix2D[\(-\[Pi]\)/2] . 
                RotationMatrix2D[\@\(\((r1\/r0)\)\^2 - 1. \)] . {r0\ \
\@\(\((r1\/r0)\)\^2 - 1. \), 0}; \[IndentingNewLine]ArcCos[
            flankTip . {1, 0}\/\@\(flankTip . \
flankTip\)]\[IndentingNewLine]];\)\), "\[IndentingNewLine]", 
    \(\(generateGearTooth[r0_, r1_, nTeeth_] := 
        Module[{\[Theta]base, \[Theta]tip, 
            flankLine, \[Theta]f, \[Theta]fm, \[Theta]t, 
            Q}, \[IndentingNewLine]If[
            nTeeth > maxTeeth[r0, r1], \[IndentingNewLine]Return[
              Null]\[IndentingNewLine]]; \[IndentingNewLine]\[Theta]f = 
            flankAngle[r0, r1]; \[IndentingNewLine]\[Theta]fm = 
            flankAngle[
              r0, \(r0 + r1\)\/2]; \[IndentingNewLine]\[Theta]t = \(2  \
\[Pi]\)\/nTeeth; \[IndentingNewLine]\[Theta]base = \[Theta]t\/2 - 
              2  \[Theta]fm; \[IndentingNewLine]\[Theta]tip = \[Theta]t\/2 - 
              2 \((\[Theta]f - \[Theta]fm)\); \[IndentingNewLine]flankLine = \
\(ParametricPlot[
                RotationMatrix2D[\[Theta]] . {r0, 
                      0} + \[IndentingNewLine]RotationMatrix2D[\(-\[Pi]\)/
                        2] . RotationMatrix2D[\[Theta]] . {r0\ \[Theta], 
                      0}, {\[Theta], 0, \@\(\((r1\/r0)\)\^2 - 1\)}, 
                DisplayFunction \[Rule] Identity, 
                PlotDivision \[Rule] 5]\)\[LeftDoubleBracket]1, 1, 
              1\[RightDoubleBracket]; \[IndentingNewLine]baseLine = \
\(ParametricPlot[
                Evaluate[
                  RotationMatrix2D[\[Alpha]] . {r0, 
                      0}], {\[Alpha], \[Theta]t, \[Theta]t - \[Theta]base}, 
                DisplayFunction \[Rule] Identity, 
                PlotDivision \[Rule] 5]\)\[LeftDoubleBracket]1, 1, 
              1\[RightDoubleBracket]; \[IndentingNewLine]tipLine = \
\(ParametricPlot[
                Evaluate[
                  RotationMatrix2D[\[Alpha]] . {r1, 
                      0}], {\[Alpha], \[Theta]f + \[Theta]tip, \[Theta]f}, 
                DisplayFunction \[Rule] Identity, 
                PlotDivision \[Rule] 5]\)\[LeftDoubleBracket]1, 1, 
              1\[RightDoubleBracket]; \[IndentingNewLine]Q = 
            RotationMatrix2D[\[Theta]t - \[Theta]base]; \
\[IndentingNewLine]{flankLine, tipLine, 
            Map[\((Q . {#\[LeftDoubleBracket]1\[RightDoubleBracket], \(-#\
\[LeftDoubleBracket]2\[RightDoubleBracket]\)})\) &, flankLine, {2}], 
            baseLine}\[IndentingNewLine]];\)\[IndentingNewLine]\), "\
\[IndentingNewLine]", 
    \(drawGear[r0_, r1_, nTeeth_] := drawGear[r0, r1, nTeeth, 0]; 
    drawGear[r0_, r1_, nTeeth_, \[Theta]i_] := 
      Module[{gt, \[Theta]}, \[IndentingNewLine]If[
          nTeeth > maxTeeth[r0, r1], \[IndentingNewLine]Return[
            Null]\[IndentingNewLine]]; \[IndentingNewLine]gt = 
          generateGearTooth[r0, r1, nTeeth]; \[IndentingNewLine]\[Theta] = 
          2  \[Pi]/nTeeth; \[IndentingNewLine]Graphics[{Table[
              Map[\((RotationMatrix2D[\[Alpha]\ \[Theta] + \[Theta]i] . #)\) \
&, gt, {3}], {\[Alpha], 0, nTeeth - 1}], 
            Circle[{0, 0},  .05], {Line[{{\(- .05\), 0. }, { .05, 0. }}], 
              Line[{{0. , \(- .05\)}, {0. ,  .05}}]}\ \[IndentingNewLine]}]\
\[IndentingNewLine]];\)}], "Input",
  CellLabel->"In[259]:=",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Constraint equations", "Subsection"],

Cell[TextData[{
  "The basic idea is the following:\n\nWe know where the link COG is: {Rx, \
Ry, \[Theta]z} from the global DOFs.\nA link joint is placed at {",
  Cell[BoxData[
      \(TraditionalForm\`Rx\_0\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`Ry\_0\)]],
  "} relative to {Rx, Ry}, the co-rotating axes are at an angle ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]z\_0\)]],
  "relative to the global axes. This angle is naturally relevant when \
\[Theta]z is zero! (ckAnchorLink[{{{",
  Cell[BoxData[
      \(TraditionalForm\`Rx\_0\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`Ry\_0\)]],
  "}},",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]z\_0\)]],
  "},{",
  Cell[BoxData[
      \(TraditionalForm\`Rx\&_\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`Ry\&_\)]],
  "},\[SkeletonIndicator]Graphics\[SkeletonIndicator]])\nThus, to find the \
joint position when a link is moving, we have to perform the following \
transformation:\n\n ",
  Cell[BoxData[
      FormBox[
        RowBox[{
          RowBox[{"(", GridBox[{
                {"x"},
                {"y"}
                }], ")"}], "=", 
          RowBox[{
            RowBox[{
              RowBox[{"(", GridBox[{
                    {"Rx"},
                    {"Rx"}
                    }], ")"}], "+", 
              RowBox[{
                RowBox[{"(", GridBox[{
                      {\(Cos[\[Theta]z]\), \(Sin[\[Theta]z]\)},
                      {\(-Sin[\[Theta]z]\), \(Cos[\[Theta]z]\)}
                      }], ")"}], ".", 
                RowBox[{"(", GridBox[{
                      {\(Cos[\(-\[Theta]z\_0\)]\), \
\(Sin[\(-\[Theta]z\_0\)]\)},
                      {\(-Sin[\(-\[Theta]z\_0\)]\), \
\(Cos[\(-\[Theta]z\_0\)]\)}
                      }], ")"}], ".", 
                RowBox[{"(", GridBox[{
                      {\(Rx\_0\)},
                      {\(Ry\_0\)}
                      }], ")"}]}]}], "=", 
            RowBox[{
              RowBox[{"(", GridBox[{
                    {"Rx"},
                    {"Rx"}
                    }], ")"}], "+", 
              RowBox[{
                RowBox[{"(", GridBox[{
                      {\(Cos[\[Theta]z - \[Theta]z\_0]\), \(Sin[\[Theta]z - \
\[Theta]z\_0]\)},
                      {\(-Sin[\[Theta]z - \[Theta]z\_0]\), \(Cos[\[Theta]z - \
\[Theta]z\_0]\)}
                      }], ")"}], ".", 
                RowBox[{"(", GridBox[{
                      {\(Rx\_0\)},
                      {\(Ry\_0\)}
                      }], ")"}]}]}]}]}], TraditionalForm]]],
  "\n \nto find the global coordinates of a joint. We first antirotate (-",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]z\_0\)]],
  ") the corotating axes parallel to the global axes, so that the local \
coordinates are global-parallel coordinates, and then apply the actual \
rotation \[Theta]z of the body."
}], "Text"],

Cell[BoxData[{
    \(\(makeLinkEquations[theLink_ckLink, {Rx_, Ry_, \[Theta]z_}] := 
        Module[{jointLocalPositions, 
            coRotatingAxesAngle}, \[IndentingNewLine]{jointLocalPositions, 
              coRotatingAxesAngle} = 
            theLink\[LeftDoubleBracket]1\[RightDoubleBracket]; \
\[IndentingNewLine]Return[\({Rx, 
                    Ry} + \((RotationMatrix2D[\[Theta]z - 
                          coRotatingAxesAngle] . #)\) &\) /@ 
              jointLocalPositions]\[IndentingNewLine]];\)\), "\n", 
    \(\(makeLinkEquations[theLink_ckAnchorLink, {Rx_, Ry_, \[Theta]z_}] := 
        Module[{jointLocalPositions, 
            coRotatingAxesAngle}, \[IndentingNewLine]{jointLocalPositions, 
              coRotatingAxesAngle} = 
            theLink\[LeftDoubleBracket]1\[RightDoubleBracket]; \
\[IndentingNewLine]Return[\({Rx, 
                    Ry} + \((RotationMatrix2D[\[Theta]z - 
                          coRotatingAxesAngle] . #)\) &\) /@ 
              jointLocalPositions]\[IndentingNewLine]];\)\), "\
\[IndentingNewLine]", 
    \(\(makeLinkEquations[theLink_ckSliderLink, {Rx_, Ry_, \[Theta]z_}] := 
        Module[{jointLocalPositions, 
            coRotatingAxesAngle}, \[IndentingNewLine]{jointLocalPositions, 
              coRotatingAxesAngle} = 
            theLink\[LeftDoubleBracket]1\[RightDoubleBracket]; \
\[IndentingNewLine]Return[\({Rx, 
                    Ry} + \((RotationMatrix2D[\[Theta]z - 
                          coRotatingAxesAngle] . #)\) &\) /@ 
              jointLocalPositions]\[IndentingNewLine]];\)\), "\
\[IndentingNewLine]", 
    \(\(\(makeLinkEquations[theLink_ckGearLink, {Rx_, Ry_, \[Theta]z_}] := 
        Module[{jointLocalPositions, 
            coRotatingAxesAngle}, \[IndentingNewLine]{jointLocalPositions, 
              coRotatingAxesAngle} = 
            theLink\[LeftDoubleBracket]1\[RightDoubleBracket]; \
\[IndentingNewLine]Return[\({Rx, 
                    Ry} + \((RotationMatrix2D[\[Theta]z - 
                          coRotatingAxesAngle] . #)\) &\) /@ 
              Drop[jointLocalPositions, \(-1\)]]\[IndentingNewLine]];\)\(\
\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(makeLinkConstraintEquation[
          theLink_ckLink, {Rx_, 
            Ry_, \[Theta]z_}] := {Null};\)\), "\[IndentingNewLine]", 
    \(\(makeLinkConstraintEquation[
          theLink_ckGearLink, {Rx_, 
            Ry_, \[Theta]z_}] := {Null};\)\), "\[IndentingNewLine]", 
    \(\(makeLinkConstraintEquation[
          theLink_ckAnchorLink, {Rx_, Ry_, \[Theta]z_}] := 
        Flatten[{{Rx, Ry} - 
              theLink\[LeftDoubleBracket]2\[RightDoubleBracket], {\[Theta]z} \
- theLink\[LeftDoubleBracket]1, \(-1\)\[RightDoubleBracket]}];\)\), "\
\[IndentingNewLine]", 
    \(\(\(makeLinkConstraintEquation[
          theLink_ckSliderLink, {Rx_, Ry_, \[Theta]z_}] := 
        Module[{jointLocalPositions, 
            coRotatingAxesAngle}, \[IndentingNewLine]{jointLocalPositions, 
              coRotatingAxesAngle} = 
            theLink\[LeftDoubleBracket]1\[RightDoubleBracket]; \
\[IndentingNewLine]Return[{\((RotationMatrix2D[\(-coRotatingAxesAngle\)] . \
\(({Rx, Ry} - jointLocalPositions\[LeftDoubleBracket]1\[RightDoubleBracket] - 
                        theLink\[LeftDoubleBracket]2\[RightDoubleBracket])\))\
\)\[LeftDoubleBracket]2\[RightDoubleBracket], \
\[Theta]z}]\[IndentingNewLine]];\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(\(makeLinkInitialCondition[theLink_] := 
        Join[theLink\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket], \
{0}];\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(makeLinkVariables[theLink_ckLink, {i_}] := {Global`Rx\_i[Global`t], 
          Global`Ry\_i[Global`t], Global`\[Theta]\_i[Global`t]};\)\), "\n", 
    \(\(makeLinkVariables[
          theLink_ckAnchorLink, {i_}] := {Global`Rx\_i[Global`t], 
          Global`Ry\_i[Global`t], 
          Global`\[Theta]\_i[Global`t]};\)\), "\[IndentingNewLine]", 
    \(\(makeLinkVariables[
          theLink_ckSliderLink, {i_}] := {Global`Rx\_i[Global`t], 
          Global`Ry\_i[Global`t], Global`\[Theta]\_i[Global`t]};\)\), "\n", 
    \(\(\(makeLinkVariables[
          theLink_ckGearLink, {i_}] := {Global`Rx\_i[Global`t], 
          Global`Ry\_i[Global`t], Global`\[Theta]\_i[Global`t]};\)\(\n\)
    \)\), "\n", 
    \(\(makeJointEquation[joint_ckRevoluteJoint, links_List, 
          linkVariables_List] := 
        Module[{linkNumber1, linkJoint1, linkNumber2, 
            linkJoint2}, \[IndentingNewLine]{{linkNumber1, 
                linkJoint1}, {linkNumber2, linkJoint2}} = 
            joint\[LeftDoubleBracket]1\[RightDoubleBracket]; \
\[IndentingNewLine]Return[\(makeLinkEquations[
                  links\[LeftDoubleBracket]linkNumber1\[RightDoubleBracket], 
                  Part[linkVariables, 
                    Range[3 \((linkNumber1 - 1)\) + 1, 
                      3 \((linkNumber1 - 1)\) + 3]]]\)\[LeftDoubleBracket]
                linkJoint1\[RightDoubleBracket] - \
\[IndentingNewLine]\(makeLinkEquations[
                  links\[LeftDoubleBracket]linkNumber2\[RightDoubleBracket], 
                  Part[linkVariables, 
                    Range[3 \((linkNumber2 - 1)\) + 1, 
                      3 \((linkNumber2 - 1)\) + 
                        3]]]\)\[LeftDoubleBracket]linkJoint2\
\[RightDoubleBracket]]\[IndentingNewLine]];\)\), "\[IndentingNewLine]", 
    \(\(makeJointEquation[joint_ckGearJoint, links_List, linkVariables_List] := 
        Module[{linkNumber1, linkJoint1, linkNumber2, linkJoint2, 
            ratio}, \[IndentingNewLine]{{linkNumber1, 
                linkJoint1}, {linkNumber2, linkJoint2}} = 
            joint\[LeftDoubleBracket]1\[RightDoubleBracket]; \
\[IndentingNewLine]ratio = \(links\[LeftDoubleBracket]linkNumber2\
\[RightDoubleBracket]\)\[LeftDoubleBracket]1, 1, 2, 
                2\[RightDoubleBracket]/\(links\[LeftDoubleBracket]linkNumber1\
\[RightDoubleBracket]\)\[LeftDoubleBracket]1, 1, 2, 
                2\[RightDoubleBracket]; \[IndentingNewLine]Return[
            Part[linkVariables, 
                3 \((linkNumber1 - 1)\) + 3] + \[IndentingNewLine]Part[
                  linkVariables, 3 \((linkNumber2 - 1)\) + 3] 
                ratio]\[IndentingNewLine]];\)\), "\[IndentingNewLine]", 
    \(\(makeJointEquation[joint_ckPrismaticJoint, links_List, 
          linkVariables_List] := 
        Module[{linkNumber1, linkJoint11, linkJoint12, linkNumber2, 
            linkJoint21, linkJoint22, ri, 
            rj}, \[IndentingNewLine]{{linkNumber1, linkJoint11, 
                linkJoint12}, {linkNumber2, linkJoint21, linkJoint22}} = 
            joint\[LeftDoubleBracket]1\[RightDoubleBracket]; \
\[IndentingNewLine]ri = 
            makeLinkEquations[
              links\[LeftDoubleBracket]linkNumber1\[RightDoubleBracket], 
              Part[linkVariables, 
                Range[3 \((linkNumber1 - 1)\) + 1, 
                  3 \((linkNumber1 - 1)\) + 3]]]; \[IndentingNewLine]rj = 
            makeLinkEquations[
              links\[LeftDoubleBracket]linkNumber2\[RightDoubleBracket], 
              Part[linkVariables, 
                Range[3 \((linkNumber2 - 1)\) + 1, 
                  3 \((linkNumber2 - 1)\) + 3]]]; \[IndentingNewLine]Return[
            Flatten[{\((ri\[LeftDoubleBracket]
                        linkJoint11\[RightDoubleBracket] - 
                      rj\[LeftDoubleBracket]
                        linkJoint21\[RightDoubleBracket])\) . \((ri\
\[LeftDoubleBracket]linkJoint11\[RightDoubleBracket] - 
                      ri\[LeftDoubleBracket]
                        linkJoint12\[RightDoubleBracket])\), 
                Part[linkVariables, 3 \((linkNumber1 - 1)\) + 3] - 
                  Part[linkVariables, 3 \((linkNumber2 - 1)\) + 3] - 
                  links\[LeftDoubleBracket]linkNumber1, 
                    1, \(-1\)\[RightDoubleBracket] + 
                  links\[LeftDoubleBracket]linkNumber2, 
                    1, \(-1\)\[RightDoubleBracket]}]]\[IndentingNewLine]];\)\
\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(linkageEquationOfMotion[links_List, joints_List, 
          driveConstraints_List] := 
        Module[{constraintEquations, anchoredLinkConstraintEquations, 
            generalizedCoordinates, jacobianMatrix, rightHandVector, 
            initialConditions}, \[IndentingNewLine]generalizedCoordinates = 
            Flatten[MapIndexed[makeLinkVariables, 
                links]]; \[IndentingNewLine]anchoredLinkConstraintEquations = 
            Select[Flatten[\(\((makeLinkConstraintEquation[#\
\[LeftDoubleBracket]1\[RightDoubleBracket], #\[LeftDoubleBracket]2\
\[RightDoubleBracket]])\) &\) /@ 
                  Transpose[{links, 
                      MapIndexed[makeLinkVariables, links]}]], # =!= 
                  Null &]; \[IndentingNewLine]constraintEquations = 
            Join[Flatten[\(makeJointEquation[#, links, 
                      generalizedCoordinates] &\) /@ joints], 
              anchoredLinkConstraintEquations, 
              driveConstraints]; \[IndentingNewLine]jacobianMatrix = 
            Transpose[\(D[constraintEquations, #] &\) /@ 
                generalizedCoordinates]; \[IndentingNewLine]rightHandVector = \
\(-D[constraintEquations /. \((\(\((# \[Rule] 0)\) &\) /@ 
                      generalizedCoordinates)\), 
                Global`t]\); \[IndentingNewLine]initialConditions = \((\(\((#\
\[LeftDoubleBracket]1\[RightDoubleBracket] == #\[LeftDoubleBracket]2\
\[RightDoubleBracket])\) &\) /@ 
                  Transpose[{generalizedCoordinates, 
                      Flatten[\(\((makeLinkInitialCondition[#])\) &\) /@ 
                          links]}])\) /. {Global`t \[Rule] 
                  0}; \[IndentingNewLine]Return[{Join[\(\((# \[Equal] 
                        0)\) &\) /@ \((jacobianMatrix . 
                        D[generalizedCoordinates, Global`t] - 
                      rightHandVector)\), 
                initialConditions], \(\((Head[#])\) &\) /@ 
                generalizedCoordinates}]\[IndentingNewLine]];\)\
\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(makeLinkJointEquation[l_, j_, links_List] := 
      Return[\(makeLinkEquations[
            links\[LeftDoubleBracket]l\[RightDoubleBracket], {Global`Rx\_l[
                Global`t], Global`Ry\_l[Global`t], 
              Global`\[Theta]\_l[
                Global`t]}]\)\[LeftDoubleBracket]j\[RightDoubleBracket]]\)}], \
"Input",
  CellLabel->"In[98]:=",
  InitializationCell->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Epilogue", "Section"],

Cell[BoxData[{
    \(\(End[];\)\), "\[IndentingNewLine]", 
    \(\(EndPackage[];\)\)}], "Input",
  InitializationCell->True]
}, Closed]]
}, Open  ]]
},
FrontEndVersion->"5.0 for X",
ScreenRectangle->{{0, 1024}, {0, 768}},
AutoGeneratedPackage->Automatic,
WindowSize->{611, 642},
WindowMargins->{{145, Automatic}, {37, Automatic}},
StyleDefinitions -> "ArticleClassic.nb"
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{
Cell[1754, 51, 17637, 224, 69, 17402, 216, "GraphicsData", "Bitmap", \
"Graphics",
  Evaluatable->False],
Cell[19394, 277, 641, 19, 38, InheritFromParent,
  Evaluatable->False],

Cell[CellGroupData[{
Cell[20060, 300, 115, 2, 88, "Title"],
Cell[20178, 304, 1286, 25, 402, "Author"],

Cell[CellGroupData[{
Cell[21489, 333, 31, 0, 55, "Section"],
Cell[21523, 335, 3059, 63, 650, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[24619, 403, 39, 0, 29, "Section"],
Cell[24661, 405, 1323, 19, 380, "Input",
  InitializationCell->True],
Cell[25987, 426, 4762, 71, 1310, "Input",
  InitializationCell->True],
Cell[30752, 499, 3877, 57, 1100, "Input",
  InitializationCell->True],
Cell[34632, 558, 676, 10, 188, "Input",
  InitializationCell->True],
Cell[35311, 570, 811, 12, 190, "Input",
  InitializationCell->True],
Cell[36125, 584, 763, 12, 220, "Input",
  InitializationCell->True],
Cell[36891, 598, 3079, 45, 876, "Input",
  InitializationCell->True],
Cell[39973, 645, 795, 12, 236, "Input",
  InitializationCell->True],
Cell[40771, 659, 321, 6, 92, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[41129, 670, 36, 0, 29, "Section"],

Cell[CellGroupData[{
Cell[41190, 674, 35, 0, 41, "Subsection"],
Cell[41228, 676, 2702, 48, 804, "Input",
  InitializationCell->True],
Cell[43933, 726, 3850, 68, 921, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[47820, 799, 36, 0, 25, "Subsection"],
Cell[47859, 801, 7256, 127, 1598, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[55152, 933, 52, 0, 25, "Subsection"],
Cell[55207, 935, 7531, 133, 1468, "Input",
  InitializationCell->True],
Cell[62741, 1070, 436, 8, 140, "Input",
  InitializationCell->True],
Cell[63180, 1080, 3658, 65, 1050, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[66875, 1150, 42, 0, 25, "Subsection"],
Cell[66920, 1152, 2872, 80, 257, "Text"],
Cell[69795, 1234, 10518, 189, 2332, "Input",
  InitializationCell->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[80362, 1429, 27, 0, 29, "Section"],
Cell[80392, 1431, 124, 3, 44, "Input",
  InitializationCell->True]
}, Closed]]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

